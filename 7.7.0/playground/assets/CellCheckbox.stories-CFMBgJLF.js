import{w as i,b as s,j as r}from"./iframe-DfeTZ_Fw.js";import{D as l,C as n}from"./constants-DdkjnEgz.js";import{g as c}from"./mock-BznupqUM.js";import{A as u}from"./Avatar-BtGg7nD-.js";import{G as d}from"./Group-ChVeS0N8.js";import{a as C,C as x}from"./Cell-BwVXTCvf.js";import"./preload-helper-Dp1pzeXC.js";import"./ImageBase-DEZsD6YW.js";import"./Clickable-Bpx6dgEO.js";import"./useFocusVisible-BkjzJxRk.js";import"./useFocusVisibleClassName-BT3I2X7t.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-CFGlxEKL.js";import"./useColorScheme-BGgcYhBu.js";import"./InputUtils-C-I8ensD.js";import"./useFocusWithin-UgE2lzew.js";import"./useIsClient-D3QWm6mk.js";import"./useConfigDirection-CwjKsiym.js";import"./online_mobile_12-B0vcMB8K.js";import"./SvgIconRootV2-Dobq3NOw.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-ivEbNXOe.js";import"./Removable-RvrdKJgI.js";import"./children-DctjNuEY.js";import"./IconButton-CE4ifGYW.js";import"./Tappable-BBWke1IE.js";import"./VisuallyHidden-BuJles22.js";import"./useGlobalEventListener-BDSHjBL9.js";import"./useEventListener-DdaI75sW.js";import"./cancel_24-XhVC2QBS.js";import"./SimpleCell-BuvX657b.js";import"./Headline-BbT30PkZ.js";import"./Subhead-BkL8qoJh.js";import"./chevron_compact_right_24-zZ-JxscM.js";import"./chevron_16-w2grljdX.js";import"./AdaptiveIconRenderer-S9G6ZqOh.js";import"./reorder_ios_24-CyrNisjS.js";import"./check_box_on_24-C-Ehlzip.js";import"./check_circle_on_24-Bj8lnbOB.js";import"./constants-CtEIZ0Vq.js";const ar={title:"Buttons/Cell/Checkbox",component:C,parameters:{...n,...l},decorators:[i,s]},o={args:{defaultChecked:!0},decorators:[(p,a)=>r.jsx(d,{children:r.jsx(x,{Component:"label",before:r.jsx(u,{src:c("user_xyz")}),after:r.jsx(p,{...a.args}),children:"Игорь Федоров"})})]};var t,m,e;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...(e=(m=o.parameters)==null?void 0:m.docs)==null?void 0:e.source}}};const ir=["Playground"];export{o as Playground,ir as __namedExportsOrder,ar as default};
