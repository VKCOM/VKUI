import{r as i,j as l,h as ve,A as ae,q as Ee,K as H,am as He,al as Ke,l as ze,ao as te,ab as Ye,R as Oe}from"./iframe-WscSQxk_.js";import{t as Ve,u as Ue,N as Ze,n as $e,g as Ge,h as We,i as q,a as Je,C as Qe,f as Xe,c as eu,d as uu}from"./CalendarHeader-CwdUcKsW.js";import{u as au}from"./useEnsuredControl-D-lyK4Qo.js";import{c as tu}from"./callMultiple-ChqatQlo.js";import{B as nu}from"./Button-C7Wah6LB.js";import{C as De}from"./CustomSelect-D-hc13Yt.js";function ne(e,t,s){const r=Ve(e,s==null?void 0:s.in);return r.setHours(t),r}function le(e,t,s){const r=Ve(e,s==null?void 0:s.in);return r.setMinutes(t),r}const lu="_host_vitji_1",su="_host__withoutDone_vitji_6",ru="_picker_vitji_10",ou="_divider_vitji_14",iu="_button_vitji_20",b={host:lu,host__withoutDone:su,picker:ru,divider:ou,button:iu},ye=()=>!0,se=[];for(let e=0;e<24;e+=1)se.push({value:e,label:String(e).padStart(2,"0")});const re=[];for(let e=0;e<60;e+=1)re.push({value:e,label:String(e).padStart(2,"0")});const he=(e,t)=>{const s=Number(e);return!isNaN(s)&&t.some(r=>r.value===s)},oe=({value:e,onChange:t,onDoneButtonClick:s,changeHoursLabel:r,changeMinutesLabel:K,isDayDisabled:D,doneButtonText:z="Готово",doneButtonDisabled:Y=!1,doneButtonShow:_=!0,minutesTestId:O,hoursTestId:U,doneButtonTestId:Z,DoneButton:$})=>{const C=i.useRef(null),I=i.useRef(null),F=i.useRef(null),M=D?se.map(u=>({...u,disabled:D(ne(e,u.value),!0)})):se,x=D?re.map(u=>({...u,disabled:D(le(e,u.value),!0)})):re,T=(u,o,m)=>{const y=u.target.value.replace(/\D/g,"");u.target.value=y,o(y)&&(t==null||t(m(e,Number(y))))},G=u=>{T(u,o=>he(o,M),ne)},W=u=>{T(u,o=>he(o,x),le)},J=i.useCallback((u,o)=>t==null?void 0:t(ne(e,Number(o))),[t,e]),Q=i.useCallback((u,o)=>t==null?void 0:t(le(e,Number(o))),[t,e]),p=u=>{var P;if(Ee(u)!==H.ENTER)return;const m=[C,I,F].filter(v=>!!v.current),N=m.findIndex(v=>v.current===u.target)+1;if(N>=m.length)return;const k=m[N];k.current&&(u.preventDefault(),(P=k.current)==null||P.focus())},A=i.useCallback((u,o)=>{o&&u.key==="Escape"&&u.stopPropagation()},[]),w=tu(p,A),X=()=>{const u=$??nu;return l.jsx(u,{mode:"secondary",onClick:s,size:"l",getRootRef:F,onKeyDown:p,disabled:Y,"data-testid":Z,children:z})};return l.jsxs("div",{className:ve(b.host,!_&&b.host__withoutDone),children:[l.jsx("div",{className:b.picker,children:l.jsx(ae,{sizeY:"compact",children:l.jsx(De,{value:e.getHours(),options:M,onChange:J,forceDropdownPortal:!1,searchable:!0,filterFn:ye,onInputChange:G,onInputKeyDown:w,getSelectInputRef:C,"aria-label":r,"data-testid":U})})}),l.jsx("div",{className:b.divider,children:":"}),l.jsx("div",{className:b.picker,children:l.jsx(ae,{sizeY:"compact",children:l.jsx(De,{value:e.getMinutes(),options:x,onChange:Q,forceDropdownPortal:!1,searchable:!0,filterFn:ye,onInputChange:W,getSelectInputRef:I,onInputKeyDown:w,"aria-label":K,"data-testid":O})})}),_&&l.jsx("div",{className:b.button,children:l.jsx(ae,{sizeY:"compact",children:X()})})]})};try{oe.displayName="CalendarTime",oe.__docgenInfo={description:"",displayName:"CalendarTime",props:{value:{defaultValue:null,description:"Отображаемая дата.",name:"value",required:!0,type:{name:"Date"}},changeHoursLabel:{defaultValue:null,description:"Текст выпадающего списка с выбором часов. Делает его доступным для ассистивных технологий.",name:"changeHoursLabel",required:!1,type:{name:"string"}},changeMinutesLabel:{defaultValue:null,description:"Текст выпадающего списка с выбором минут. Делает его доступным для ассистивных технологий.",name:"changeMinutesLabel",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Обработчик изменения времени.",name:"onChange",required:!1,type:{name:"((value: Date) => void)"}},isDayDisabled:{defaultValue:null,description:"Функция для проверки блокировки выбора даты и времени.",name:"isDayDisabled",required:!1,type:{name:"((day: Date, withTime?: boolean) => boolean)"}},hoursTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора часа в календаре.",name:"hoursTestId",required:!1,type:{name:"string"}},minutesTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора минут в календаре.",name:"minutesTestId",required:!1,type:{name:"string"}},doneButtonTestId:{defaultValue:null,description:'Передает атрибут `data-testid` для кнопки "Готово" в календаре.',name:"doneButtonTestId",required:!1,type:{name:"string"}},DoneButton:{defaultValue:null,description:'Кастомное отображение кнопки `"Done"`.',name:"DoneButton",required:!1,type:{name:"ComponentType<ButtonProps>"}},doneButtonText:{defaultValue:{value:"Готово"},description:'Текст отображаемый в кнопке `"Done"`.',name:"doneButtonText",required:!1,type:{name:"string"}},doneButtonShow:{defaultValue:{value:"true"},description:'Управление отображением кнопки `"Done"`.',name:"doneButtonShow",required:!1,type:{name:"boolean"}},doneButtonDisabled:{defaultValue:{value:"false"},description:'Блокировка взаимодействия с кнопкой "Done".',name:"doneButtonDisabled",required:!1,type:{name:"boolean"}},onDoneButtonClick:{defaultValue:null,description:'Обработки нажатия на кнопку `"Done"`.',name:"onDoneButtonClick",required:!1,type:{name:"(() => void)"}}}}}catch{}const du="_host_1izce_1",cu="_time_1izce_13",pu="_header_1izce_21",mu="_sizeS_1izce_25",L={host:du,time:cu,header:pu,sizeS:mu},be=({getRootRef:e,value:t,defaultValue:s,onChange:r,disablePast:K,disableFuture:D,shouldDisableDate:z,onDoneButtonClick:Y,enableTime:_=!1,doneButtonText:O,doneButtonDisabled:U,doneButtonShow:Z,DoneButton:$,weekStartsOn:C=1,disablePickers:I,"aria-label":F="Календарь",changeHoursLabel:M="Изменить час",changeMinutesLabel:x="Изменить минуту",prevMonthLabel:T="Предыдущий месяц",nextMonthLabel:G="Следующий месяц",changeMonthLabel:W="Изменить месяц",changeYearLabel:J="Изменить год",showNeighboringMonth:Q,size:p="m",viewDate:A,onHeaderChange:w,onNextMonth:X,onPrevMonth:u,prevMonthIcon:o,nextMonthIcon:m,prevMonthProps:y,nextMonthProps:N,dayProps:k,listenDayChangesForUpdate:P,renderDayContent:v,minDateTime:E,maxDateTime:V,timezone:S,minutesTestId:ge,hoursTestId:Be,doneButtonTestId:qe,prevMonthButtonTestId:_e,nextMonthButtonTestId:Ce,monthDropdownTestId:Ie,yearDropdownTestId:Fe,dayTestId:Me,...xe})=>{const Te=i.useCallback(a=>{r==null||r(He(a,S)||void 0)},[r,S]),[ie,ee]=au({value:t,defaultValue:s,onChange:Te}),n=i.useMemo(()=>Ke(ie,S),[S,ie]),{viewDate:c,setViewDate:j,setPrevMonth:Ae,setNextMonth:we,focusedDay:h,setFocusedDay:g,isDayFocused:Ne,isDayDisabled:de,isMonthDisabled:ke,isYearDisabled:Pe}=Ue({value:n,disableFuture:D,disablePast:K,shouldDisableDate:z,onHeaderChange:w,onNextMonth:X,onPrevMonth:u,minDateTime:E,maxDateTime:V}),[f,R]=i.useState();ze(()=>{n&&j(n)},[n]);const Se=i.useCallback(a=>{var me,fe;const d=Ee(a);if(d&&Ze.includes(d)){a.preventDefault();const B=$e(h??n,d);B&&!te(B,c)&&j(B),g(B),R(B);return}if(d===H.TAB){g(void 0),R(h);return}(d===H.ENTER||d===H.SPACE)&&Ye(a.target)&&(a.preventDefault(),(fe=(me=a.target).click)==null||fe.call(me))},[h,g,R,j,n,c]),je=i.useCallback(a=>{let d=Ge(a,n);(E||V)&&(d=We(d,{min:E,max:V})),ee(d)},[n,ee,V,E]),Re=i.useCallback(a=>{h&&q(h,a)||(g(a),(!f||!q(a,f))&&R(a))},[f,h,g]),ue=i.useCallback(a=>!!(n&&q(a,n)),[n]),ce=f&&te(f,c),pe=n&&te(n,c),Le=i.useCallback(a=>ce?q(f,a):pe?ue(a):q(Je(c),a),[f,c,ue,ce,pe]);return l.jsxs(Oe,{"aria-label":F,...xe,baseClassName:ve(L.host,p==="s"&&L.sizeS),getRootRef:e,children:[l.jsx(Qe,{viewDate:A||c,onChange:j,onNextMonth:we,onPrevMonth:Ae,disablePickers:I||p==="s",className:L.header,prevMonthLabel:T,nextMonthLabel:G,changeMonthLabel:W,changeYearLabel:J,prevMonthIcon:o,nextMonthIcon:m,prevMonthProps:y,nextMonthProps:N,isMonthDisabled:ke,isYearDisabled:Pe,nextMonthButtonTestId:Ce,prevMonthButtonTestId:_e,monthDropdownTestId:Ie,yearDropdownTestId:Fe}),l.jsx(Xe,{viewDate:A||c,value:n,weekStartsOn:C,onKeyDown:Se,onDayChange:je,isDayActive:ue,onDayFocus:Re,isDayFocused:Ne,isDayFocusable:Le,isDaySelectionStart:uu,isDaySelectionEnd:eu,isDayDisabled:de,showNeighboringMonth:Q,size:p,dayProps:k,listenDayChangesForUpdate:P,renderDayContent:v,dayTestId:Me}),_&&n&&p!=="s"&&l.jsx("div",{className:L.time,children:l.jsx(oe,{value:n,onChange:ee,onDoneButtonClick:Y,doneButtonText:O,doneButtonDisabled:U,doneButtonShow:Z,DoneButton:$,changeHoursLabel:M,changeMinutesLabel:x,isDayDisabled:E||V?de:void 0,minutesTestId:ge,hoursTestId:Be,doneButtonTestId:qe})})]})};try{be.displayName="Calendar",be.__docgenInfo={description:"",displayName:"Calendar",props:{value:{defaultValue:null,description:"Текущая выбранная дата.",name:"value",required:!1,type:{name:"Date | null"}},defaultValue:{defaultValue:null,description:"Начальная дата при монтировании.",name:"defaultValue",required:!1,type:{name:"Date | null"}},disablePast:{defaultValue:null,description:"Запрещает выбор даты в прошлом.\nПрименяется, если не заданы `shouldDisableDate` и `disableFuture`.",name:"disablePast",required:!1,type:{name:"boolean"}},disableFuture:{defaultValue:null,description:"Запрещает выбор даты в будущем.\nПрименяется, если не задано `shouldDisableDate`.",name:"disableFuture",required:!1,type:{name:"boolean"}},enableTime:{defaultValue:{value:"false"},description:"Включает выбор времени.",name:"enableTime",required:!1,type:{name:"boolean"}},disablePickers:{defaultValue:null,description:"Отключает селекторы выбора месяца/года.",name:"disablePickers",required:!1,type:{name:"boolean"}},changeDayLabel:{defaultValue:null,description:`\`aria-label\` для изменения дня.
@deprecated Будет удалeно в **VKUI v8**.
Использовалось для задания aria-label для контейнера дней в календаре.
Теперь этот контейнер является таблицей (с помощью role="grid") и
в aria-label рендерится текущий открытый в календаре месяц и год.`,name:"changeDayLabel",required:!1,type:{name:"string"}},weekStartsOn:{defaultValue:{value:"1"},description:"День недели, с которого начинается неделя.",name:"weekStartsOn",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"},{value:"2"},{value:"3"},{value:"4"},{value:"5"},{value:"6"}]}},showNeighboringMonth:{defaultValue:null,description:"Показывать дни соседних месяцев.",name:"showNeighboringMonth",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"m"},description:"Размер календаря.",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},onChange:{defaultValue:null,description:"Обработчик изменения выбранной даты.",name:"onChange",required:!1,type:{name:"((value?: Date) => void)"}},shouldDisableDate:{defaultValue:null,description:"Функция для проверки запрета выбора даты.",name:"shouldDisableDate",required:!1,type:{name:"((value: Date) => boolean)"}},viewDate:{defaultValue:null,description:`Дата отображаемого месяца.
При использовании обновление даты должно происходить вне компонента.`,name:"viewDate",required:!1,type:{name:"Date"}},onHeaderChange:{defaultValue:null,description:"Обработчик изменения даты в шапке календаря.",name:"onHeaderChange",required:!1,type:{name:"((value: Date) => void)"}},minDateTime:{defaultValue:null,description:"Минимальные дата и время, которые можно выбрать.\nПрименяется, если не заданы `shouldDisableDate` и `disablePast`/`disableFuture`.",name:"minDateTime",required:!1,type:{name:"Date"}},maxDateTime:{defaultValue:null,description:"Максимальные дата и время, которые можно выбрать.\nПрименяется, если не заданы `shouldDisableDate` и `disablePast`/`disableFuture`.",name:"maxDateTime",required:!1,type:{name:"Date"}},timezone:{defaultValue:null,description:"Часовой пояс для отображения даты.",name:"timezone",required:!1,type:{name:"string"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},changeHoursLabel:{defaultValue:{value:"Изменить час"},description:"Текст выпадающего списка с выбором часов. Делает его доступным для ассистивных технологий.",name:"changeHoursLabel",required:!1,type:{name:"string"}},changeMinutesLabel:{defaultValue:{value:"Изменить минуту"},description:"Текст выпадающего списка с выбором минут. Делает его доступным для ассистивных технологий.",name:"changeMinutesLabel",required:!1,type:{name:"string"}},prevMonthLabel:{defaultValue:{value:"Предыдущий месяц"},description:"`aria-label` для кнопки предыдущего месяца.",name:"prevMonthLabel",required:!1,type:{name:"string"}},nextMonthLabel:{defaultValue:{value:"Следующий месяц"},description:"`aria-label` для кнопки следующего месяца.",name:"nextMonthLabel",required:!1,type:{name:"string"}},changeMonthLabel:{defaultValue:{value:"Изменить месяц"},description:"`aria-label` для селектора месяца.",name:"changeMonthLabel",required:!1,type:{name:"string"}},changeYearLabel:{defaultValue:{value:"Изменить год"},description:"`aria-label` для селектора года.",name:"changeYearLabel",required:!1,type:{name:"string"}},prevMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки предыдущего месяца.",name:"prevMonthIcon",required:!1,type:{name:"ReactNode"}},nextMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки следующего месяца.",name:"nextMonthIcon",required:!1,type:{name:"ReactNode"}},onNextMonth:{defaultValue:null,description:"Нажатие на кнопку переключения на следующий месяц.",name:"onNextMonth",required:!1,type:{name:"(() => void)"}},onPrevMonth:{defaultValue:null,description:"Нажатие на кнопку переключения на предыдущий месяц.",name:"onPrevMonth",required:!1,type:{name:"(() => void)"}},prevMonthProps:{defaultValue:null,description:"Дополнительные свойства для кнопки предыдущего месяца.",name:"prevMonthProps",required:!1,type:{name:"ArrowMonthProps"}},nextMonthProps:{defaultValue:null,description:"Дополнительные свойства для кнопки следующего месяца.",name:"nextMonthProps",required:!1,type:{name:"ArrowMonthProps"}},listenDayChangesForUpdate:{defaultValue:null,description:"Следить за изменениями дней для обновления UI.",name:"listenDayChangesForUpdate",required:!1,type:{name:"boolean"}},renderDayContent:{defaultValue:null,description:"Кастомизация отображения содержимого дня.",name:"renderDayContent",required:!1,type:{name:"((day: Date) => ReactNode)"}},dayProps:{defaultValue:null,description:"Дополнительные свойства для элементов дней.",name:"dayProps",required:!1,type:{name:"CalendarDayElementProps"}},DoneButton:{defaultValue:null,description:'Кастомное отображение кнопки `"Done"`.',name:"DoneButton",required:!1,type:{name:"ComponentType<ButtonProps>"}},doneButtonText:{defaultValue:null,description:'Текст отображаемый в кнопке `"Done"`.',name:"doneButtonText",required:!1,type:{name:"string"}},doneButtonShow:{defaultValue:null,description:'Управление отображением кнопки `"Done"`.',name:"doneButtonShow",required:!1,type:{name:"boolean"}},doneButtonDisabled:{defaultValue:null,description:'Блокировка взаимодействия с кнопкой "Done".',name:"doneButtonDisabled",required:!1,type:{name:"boolean"}},onDoneButtonClick:{defaultValue:null,description:'Обработки нажатия на кнопку `"Done"`.',name:"onDoneButtonClick",required:!1,type:{name:"(() => void)"}},dayTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дня в календаре.",name:"dayTestId",required:!1,type:{name:"string | ((day: Date) => string)"}},monthDropdownTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора месяца в заголовке календаря.",name:"monthDropdownTestId",required:!1,type:{name:"string | ((monthIndex: number) => string)"}},yearDropdownTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора года в заголовке календаря.",name:"yearDropdownTestId",required:!1,type:{name:"string | ((year: number) => string)"}},nextMonthButtonTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для кнопки перехода к следующему месяцу в заголовке календаря.",name:"nextMonthButtonTestId",required:!1,type:{name:"string"}},prevMonthButtonTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для кнопки перехода к предыдущему месяцу в заголовке календаря.",name:"prevMonthButtonTestId",required:!1,type:{name:"string"}},hoursTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора часа в календаре.",name:"hoursTestId",required:!1,type:{name:"string"}},minutesTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора минут в календаре.",name:"minutesTestId",required:!1,type:{name:"string"}},doneButtonTestId:{defaultValue:null,description:'Передает атрибут `data-testid` для кнопки "Готово" в календаре.',name:"doneButtonTestId",required:!1,type:{name:"string"}}}}}catch{}export{be as C};
