import{w as i,b as s,j as r}from"./iframe-WscSQxk_.js";import{D as l,C as n}from"./constants-DdkjnEgz.js";import{g as c}from"./mock-BznupqUM.js";import{A as u}from"./Avatar-0RoHI5K7.js";import{G as d}from"./Group-qAlp-RAW.js";import{a as C,C as x}from"./Cell-DqhTK0pF.js";import"./preload-helper-Dp1pzeXC.js";import"./ImageBase-3KL0flvN.js";import"./Clickable-C7ilqGtf.js";import"./useFocusVisibleClassName-LTUayfN7.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-wA-vnNFa.js";import"./useColorScheme-C09gZSyP.js";import"./InputUtils-JLBJXs47.js";import"./useFocusWithin-BHVkTq3i.js";import"./useIsClient-d2y8ByAY.js";import"./useConfigDirection-f8qxYIIC.js";import"./online_mobile_12-DJlNBlPs.js";import"./SvgIconRootV2-DxvRspKa.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-DadQ2vZ3.js";import"./Removable-BJhZzne5.js";import"./children-PV0P3fmv.js";import"./IconButton-D66RFa5n.js";import"./Tappable-4pvQI-9h.js";import"./VisuallyHidden-uW7N7P-s.js";import"./useGlobalEventListener-g9jun4JN.js";import"./useEventListener-DRRpeHIY.js";import"./cancel_24-DRq5Gwy2.js";import"./SimpleCell-tB9EhAU6.js";import"./Headline-Cv7evErM.js";import"./Subhead-Dng_N-gz.js";import"./chevron_compact_right_24-CjLRRqgU.js";import"./chevron_16-BY28eTD3.js";import"./AdaptiveIconRenderer-Dik8tLCs.js";import"./reorder_ios_24-BnJVoGF4.js";import"./check_box_on_24-CC2KZ1K-.js";import"./check_circle_on_24-Bku_e_js.js";import"./constants-CtEIZ0Vq.js";const pr={title:"Buttons/Cell/Checkbox",component:C,parameters:{...n,...l},decorators:[i,s]},o={args:{defaultChecked:!0},decorators:[(p,a)=>r.jsx(d,{children:r.jsx(x,{Component:"label",before:r.jsx(u,{src:c("user_xyz")}),after:r.jsx(p,{...a.args}),children:"Игорь Федоров"})})]};var t,e,m;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...(m=(e=o.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const ar=["Playground"];export{o as Playground,ar as __namedExportsOrder,pr as default};
