.in {
  /* Отрицательный margin нужен, чтобы компенсировать увеличенный из-за тени padding (12px -> 20px) */
  position: relative;
  margin-block: -8px;
  margin-inline: 0;
  overflow-x: hidden;
  isolation: isolate;
}

.scrollIn {
  display: flex;
  padding-block: calc(var(--vkui--size_subnavigation_bar_padding_vertical--regular) + 8px);
  padding-inline: 0;
  margin: 0;
}

.scrollIn::before,
.scrollIn::after {
  min-inline-size: var(--vkui--size_base_padding_horizontal--regular);
  content: '';
}

.scroll {
  display: flex;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
}

.scroll::-webkit-scrollbar {
  display: none;
}

.noPadding {
  padding: 0;
}

.item {
  display: flex;
  list-style-type: none;
}

.item + .item {
  margin-inline-start: var(--vkui--size_subnavigation_bar_gap--regular);
}

.modeFixed .item {
  flex: 1;
  min-inline-size: 0;
}

.inFade {
  display: flex;
  flex: 1 0 100%;
  align-items: stretch;
  transition: transform var(--vkui--animation_duration_m);
}

.inFadeLeft {
  mask-image: linear-gradient(to left, rgb(0, 0, 0, 1) 90%, rgb(0, 0, 0, 0));
}

.inFadeRight {
  mask-image: linear-gradient(to right, rgb(0, 0, 0, 1) 90%, rgb(0, 0, 0, 0));
}

.inFadeLeft.inFadeRight {
  mask-image: linear-gradient(
    to right,
    rgb(0, 0, 0, 0) 0%,
    rgb(0, 0, 0, 1) 10%,
    rgb(0, 0, 0, 1) 90%,
    rgb(0, 0, 0, 0) 100%
  );
}
