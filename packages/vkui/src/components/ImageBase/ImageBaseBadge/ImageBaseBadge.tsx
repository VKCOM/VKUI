import * as React from 'react';
import { classNames } from '@vkontakte/vkjs';
import { HasRootRef } from '../../../types';
import { RootComponent } from '../../RootComponent/RootComponent';
import { ImageBaseContext } from '../context';
import type { ImageBaseExpectedIconProps } from '../types';
import { validateBadgeIcon } from '../validators';
import styles from './ImageBaseBadge.module.css';

const backgroundStyles = {
  stroke: styles['ImageBaseBadge--background-stroke'],
  shadow: styles['ImageBaseBadge--background-shadow'],
};

export interface ImageBaseBadgeProps extends React.AriaAttributes, HasRootRef<HTMLDivElement> {
  /**
   * –í–∏–¥ –ø–æ–¥–ª–æ–∂–∫–∏ –ø–æ–¥ –∏–∫–æ–Ω–∫—É.
   *
   * - `"stroke"` ‚Äì –∏–º–∏—Ç–∏—Ä—É–µ—Ç –≤—ã—Ä–µ–∑ (‚ö†Ô∏è –µ—Å–ª–∏ —Ñ–æ–Ω –ø–æ–¥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π, —Ç–æ –æ–∂–∏–¥–∞–π—Ç–µ –±–∞–≥).
   * - `"shadow"` ‚Äì –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–±–æ–ª—å—à—É—é —Ç–µ–Ω—å.
   */
  background?: 'stroke' | 'shadow';
  /**
   * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–∫–æ–Ω–∫—É.
   *
   * > üìù –ù—É–∂–Ω—ã–π –¥–ª—è `<ImageBase size={...} />` —Ä–∞–∑–º–µ—Ä –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ `getBadgeIconSizeByImageBaseSize()`.
   *
   * > –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∫–æ–Ω–∫–∏ –∏–∑ `@vkontakte/icons`.
   *
   * > üìäÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∏–∫–æ–Ω–∫—É, —Ç–æ —Å–ª–µ–¥—É–µ—Ç –∏–º–µ–Ω–æ–≤–∞—Ç—å –µ—ë –ø–æ —à–∞–±–ª–æ–Ω—É `Icon<size><name>`. –ò–ª–∏ –∂–µ
   * > —á—Ç–æ–±—ã –≤ –Ω–µ—ë –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä `width`. –¢–æ–≥–¥–∞ –º—ã —Å–º–æ–∂–µ–º –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–¥—Å–∫–∞–∑–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ª–∏ —Ä–∞–∑–º–µ—Ä–∞ –≤—ã
   * > –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –∏–∫–æ–Ω–∫—É.
   */
  children: React.ReactElement<ImageBaseExpectedIconProps>;
  className?: string;
}

/**
 * –ë–µ–π–¥–∂ –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
 *
 * > –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏ `size < 24`
 */
export const ImageBaseBadge = ({ background = 'shadow', ...restProps }: ImageBaseBadgeProps) => {
  if (process.env.NODE_ENV === 'development') {
    if (restProps.children) {
      // eslint-disable-next-line react-hooks/rules-of-hooks
      const { size } = React.useContext(ImageBaseContext);
      validateBadgeIcon(size, { name: 'children', value: restProps.children });
    }
  }

  return (
    <RootComponent
      {...restProps}
      baseClassName={classNames(styles['ImageBaseBadge'], backgroundStyles[background])}
    />
  );
};
