.host {
  /* чтобы можно было ограничить размеры приложения
   * извне с помощью max-height, max-width */
  max-inline-size: inherit;
  max-block-size: inherit;
  inline-size: 100%;
  block-size: 100%;
  -webkit-tap-highlight-color: transparent;
  text-size-adjust: 100%;
  font-family: var(--vkui--font_family_base);
  color: var(--vkui--color_text_primary);
  color-scheme: var(--vkui--colors_scheme);
}

.sizeXRegular {
  background: var(--vkui--color_background);
}

@media (--sizeX-regular) {
  .sizeXNone {
    background: var(--vkui--color_background);
  }
}

.layoutCard {
  background: var(--vkui--color_background);
}

.layoutPlain {
  background: var(--vkui--color_background_content);
}

.sizeYCompact {
  --vkui_internal--panel_header_height: var(--vkui--size_panel_header_height--compact);
}

@media (--sizeY-compact) {
  .sizeYNone {
    --vkui_internal--panel_header_height: var(--vkui--size_panel_header_height--compact);
  }
}

.userSelectNone {
  user-select: none;
}

/**
 * Хак для webkit-based браузеров, потому что на версиях iOS <= 14.* исчезает возможность
 * редактировать contenteditable элементы, если выше по дереву задан user-select: none;
 */
.userSelectNone [contenteditable] {
  user-select: text;
}

@media (--pointer-has-not) {
  .pointerNone {
    user-select: none;
  }

  .pointerNone [contenteditable] {
    user-select: text;
  }
}

.embedded {
  /* Раньше в этом режиме на родителе (app__root--embeded)
   * лежал стиль overflow-x: hidden
   * см: https://github.com/VKCOM/VKUI/commit/67366838397305b79d4c1de6e0b5ca03e7fd7450
   * см: https://github.com/VKCOM/VKUI/pull/1248/files
   * Но сейчас, так как главные стили, в том числе и
   * transform: translate3d(0, 0, 0) лежат на AppRoot,
   * то в этом смысла не видно.
   * По крайней мере примеров,
   * где бы overflow ломался в embedded режиме,
   * пока не было найдено */
  overflow: auto;
}
