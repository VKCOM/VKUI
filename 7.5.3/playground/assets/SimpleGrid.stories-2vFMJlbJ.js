import{j as n,R as _,i as B}from"./iframe-CGpIZMk8.js";import{D as C,C as y}from"./constants-DdkjnEgz.js";import{c as D}from"./createStoryParameters-CcwS40kl.js";import{C as f}from"./ContentCard-3qsCLZZb.js";import{c as F,a as A,r as h}from"./gaps-BRHZAyUc.js";const S="_host_1a1cs_1",v="_marginAuto_1a1cs_10",b="_marginAutoInline_1a1cs_15",x="_marginAutoBlock_1a1cs_19",k="_withMinWidth_1a1cs_23",G="_alignStart_1a1cs_27",w="_alignEnd_1a1cs_31",V="_alignCenter_1a1cs_35",j="_alignStretch_1a1cs_39",q="_alignBaseline_1a1cs_43",u={host:S,marginAuto:v,marginAutoInline:b,marginAutoBlock:x,withMinWidth:k,alignStart:G,alignEnd:w,alignCenter:V,alignStretch:j,alignBaseline:q},M={auto:u.marginAuto,"auto-inline":u.marginAutoInline,"auto-block":u.marginAutoBlock},P={start:u.alignStart,end:u.alignEnd,center:u.alignCenter,stretch:u.alignStretch,baseline:u.alignBaseline},o=({columns:e=1,gap:c,margin:r="none",minColWidth:s,align:E="stretch",...g})=>{const a={},[i,l]=F(c);return typeof i=="number"&&(a["--vkui_internal--row_gap"]=`${i}px`),typeof l=="number"&&(a["--vkui_internal--column_gap"]=`${l}px`),a["--vkui_internal--grid_columns"]=`${e}`,s&&(a["--vkui_internal--min_col_width"]=`${s}px`),n.jsx(_,{...g,baseClassName:B(u.host,r!=="none"&&M[r],P[E],s&&u.withMinWidth,typeof l=="string"&&A[l],typeof i=="string"&&h[i]),baseStyle:a})};try{o.displayName="SimpleGrid",o.__docgenInfo={description:"",displayName:"SimpleGrid",props:{columns:{defaultValue:{value:"1"},description:"Количество колонок.",name:"columns",required:!1,type:{name:"number"}},gap:{defaultValue:null,description:`Отступы между элементами.
Значение из списка предопределённых пресетов или число, которое будет приведено к пикселям.
Через массив можно задать отступ между столбцами и строками [row, column], если они отличаются.`,name:"gap",required:!1,type:{name:"GapsProp"}},margin:{defaultValue:{value:"none"},description:"Управляет отступами вокруг контейнера\nЗначение `none` позволяет отключить отступы\nЗначение `auto` позволяет задать платформенные отступы\nЗначение `auto-inline` позволяет задать платформенные inline-отступы\nЗначение `auto-block` позволяет задать платформенные block-отступы.",name:"margin",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"none"'},{value:'"auto-inline"'},{value:'"auto-block"'}]}},minColWidth:{defaultValue:null,description:"Вместо задания количества колонок, можно указать минимальную ширину элементов.",name:"minColWidth",required:!1,type:{name:"number"}},align:{defaultValue:{value:"stretch"},description:"Выравнивание элементов по вспомогательной оси, эквивалентно `align-items`.",name:"align",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"center"'},{value:'"end"'},{value:'"stretch"'},{value:'"baseline"'}]}},baseStyle:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `style`.",name:"baseStyle",required:!1,type:{name:"CSSProperties"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}const R={title:"Layout/SimpleGrid",component:o,parameters:D("SimpleGrid",y,C),tags:["Раскладка"]},t={args:{gap:"m"},render:e=>n.jsx(o,{...e,children:Array.from({length:5},(c,r)=>n.jsx(f,{overTitle:"ALBUM",title:"Halsey – Badlands",caption:"Blue Vinyl · EU · 2015",description:"Badlands is the story about dreams and cruel reality..."},r))}),decorators:[e=>n.jsx("div",{style:{width:"80%",border:"1px dotted red"},children:n.jsx(e,{})})]};var d,m,p;t.parameters={...t.parameters,docs:{...(d=t.parameters)==null?void 0:d.docs,source:{originalSource:`{
  args: {
    gap: 'm'
  },
  render: args => <SimpleGrid {...args}>
      {Array.from({
      length: 5
    }, (_, index) => {
      return <ContentCard key={index} overTitle="ALBUM" title="Halsey – Badlands" caption="Blue Vinyl · EU · 2015" description="Badlands is the story about dreams and cruel reality..." />;
    })}
    </SimpleGrid>,
  decorators: [Component => <div style={{
    width: '80%',
    border: '1px dotted red'
  }}>
        <Component />
      </div>]
}`,...(p=(m=t.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};const N=["Playground"],$=Object.freeze(Object.defineProperty({__proto__:null,Playground:t,__namedExportsOrder:N,default:R},Symbol.toStringTag,{value:"Module"}));export{t as P,o as S,$ as a};
