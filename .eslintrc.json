{
  "root": true,
  "env": {
    "es6": true, // Enable global es6 variables, like Set, Map, etc
    "browser": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "plugins": ["import", "unicorn"],
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": 2018, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "ecmaFeatures": {
      "jsx": true, // Allows for the parsing of JSX
      "restParams": true,
      "spread": true
    }
  },
  "extends": [
    "plugin:@vkontakte/eslint-plugin/react-typescript", // "Preset 1"
    "prettier" // "Preset 2" (overrides "Preset 1")
  ],
  "rules": {
    "@typescript-eslint/method-signature-style": "error",
    "@typescript-eslint/explicit-member-accessibility": "off", // [Reason] overrides "Preset 1"
    "@typescript-eslint/no-unnecessary-condition": "off", // [Reason] overrides "Preset 1"
    "@typescript-eslint/no-magic-numbers": "off", // [Reason] overrides "Preset 1"
    "@typescript-eslint/no-non-null-assertion": "off", // [Reason] overrides "Preset 1"
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-expect-error": {
          "descriptionFormat": "^: TS\\d+ .+$"
        }
      }
    ],

    "no-shadow": "off", // [Reason] need using @typescript-eslint/no-shadow
    "no-restricted-globals": ["error", "window", "document"],
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "newlines-between": "never",
        "alphabetize": {
          "order": "asc"
        },
        "pathGroupsExcludedImportTypes": ["**/*.css", "react", "react-dom", "react-dom/**"],
        "pathGroups": [
          {
            "pattern": "{react,react-dom,react-dom/**}",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "*.css",
            "group": "index",
            "patternOptions": { "matchBase": true },
            "position": "after"
          }
        ]
      }
    ],
    "sort-imports": [
      "error",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
        "allowSeparatedGroups": true,
        "memberSyntaxSortOrder": ["none", "single", "all", "multiple"]
      }
    ],
    "curly": "error", // Enforce consistent brace style
    "eqeqeq": "error", // Only type-safe equality operators
    "unicorn/expiring-todo-comments": ["error"],
    "no-console": "error"
  }
}
