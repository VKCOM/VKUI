import{j as f,O as Z,l as d4,r as s,k as E4,i as m4,T as f4,a8 as L,a7 as C4,aa as F4,K as B,aE as D4}from"./iframe-DTUKIQpa.js";import{F as B4}from"./FormField-bYsVG-1L.js";import{I as v4}from"./IconButton-Dy9SRYqV.js";import{I as A4}from"./cancel_16-C6mgGc9w.js";import{u as y4,a as h4}from"./useEnsuredControl-DZdU0p0r.js";import{u as g4}from"./useNativeFormResetListener-CNk58Zp4.js";import{C as b4}from"./Chip-CTsohgEh.js";function n4(u){return u?u.replace(/([.*+?^${}()|[\]\/\\])/g,"\\$1"):""}const Y=({className:u,onClick:t,...r})=>f.jsx(v4,{Component:"button",label:"Очистить поле",onKeyDown:Z,type:"button",activeMode:"opacity",hoverMode:"opacity",...r,className:u,onClick:n=>{Z(n),n.preventDefault(),t()},children:f.jsx(A4,{})});try{Y.displayName="FormFieldClearButton",Y.__docgenInfo={description:"",displayName:"FormFieldClearButton",props:{className:{defaultValue:null,description:"`className` для компонента.",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Обработчик нажатия на кнопку.",name:"onClick",required:!0,type:{name:"() => void"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}const S=[],G="";function U(u){return u.value}function $(u){return u.label}function _4(u,t){return{value:u,label:t}}function W(u){const{label:t,...r}=u;return f.jsx(b4,{removable:!u.disabled,...r,children:t})}try{U.displayName="getOptionValueDefault",U.__docgenInfo={description:"",displayName:"getOptionValueDefault",props:{value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{$.displayName="getOptionLabelDefault",$.__docgenInfo={description:"",displayName:"getOptionLabelDefault",props:{value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{W.displayName="renderChipDefault",W.__docgenInfo={description:"",displayName:"renderChipDefault",props:{label:{defaultValue:null,description:"Отображаемый текст чипа.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},value:{defaultValue:null,description:"Значение чипа.",name:"value",required:!1,type:{name:"ChipOptionValue"}},removable:{defaultValue:null,description:"Можно ли удалить чип.",name:"removable",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с чипом.",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Режим только для чтения.",name:"readOnly",required:!1,type:{name:"boolean"}},removeLabel:{defaultValue:null,description:"Текст для кнопки удаления.",name:"removeLabel",required:!1,type:{name:"string"}},before:{defaultValue:null,description:"Контент перед основным содержимым.",name:"before",required:!1,type:{name:"ReactNode"}},after:{defaultValue:null,description:"Контент после основного содержимого.",name:"after",required:!1,type:{name:"ReactNode"}},onRemove:{defaultValue:null,description:"Обработчик удаления чипа.",name:"onRemove",required:!1,type:{name:"((event: MouseEvent<Element, MouseEvent>, value: ChipOptionValue) => void)"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}}}}}catch{}const a4=u=>typeof u=="object"&&"value"in u,u4=u=>u?u.value===G:!0,V4=(u,t)=>{const r=a4(u)?u.value:u;return t.findIndex(n=>n.value===r)},K=u=>{const t=u&&u.dataset.index;return typeof t=="string"?Number(t):-1},R4=u=>{const t=u&&u.dataset.value;return(u&&u.dataset.valueType)==="number"?Number(t):typeof t=="string"?t:-1},I4=(u,t,r)=>{const n=r-1;switch(t){case"prev":const d=u-1;return d<0?n:d;case"next":const F=u+1;return F>n?0:F;case"last":return n;default:return-1}},O4="_host_jgbwe_1",x4="_chip_jgbwe_17",q4="_el_jgbwe_22",N4="_hasPlaceholder_jgbwe_58",k4="_sizeYCompact_jgbwe_67",T4="_sizeYNone_jgbwe_72",h={host:O4,chip:x4,el:q4,hasPlaceholder:N4,sizeYCompact:k4,sizeYNone:T4},L4={none:h.sizeYNone,compact:h.sizeYCompact},e4=({getRootRef:u,style:t,className:r,before:n,after:d,status:F,mode:j,maxHeight:P,value:g=S,onAddChipOption:b,onRemoveChipOption:_,renderChip:w=W,getRef:D,id:v,inputValue:z=G,placeholder:V,disabled:i,readOnly:E,addOnBlur:R,onBlur:I,onInputChange:M,ClearButton:O=Y,clearButtonShown:x,clearButtonTestId:q,onClear:N,...o})=>{const{sizeY:C="none"}=d4(),A=s.useId(),a=E4(D),m=s.useRef(null),c=g.length,p=c===0,[k,y]=s.useState(0),l4=e=>{y(0),e.focus()},T=(e,l,p4)=>{const J=I4(e,l,c),Q=p4.querySelector(`[data-index="${J}"]`);Q&&(y(J),Q.focus())},X=(e,l)=>{!a.current||!m.current||(c>1?l===c-1?T(l,"prev",m.current):T(l,"next",m.current):l4(a.current),_(e))},r4=e=>{const l=e.target;if(!(e.defaultPrevented||!m.current||!F4(l)))switch(e.key){case B.ENTER:{!E&&L(l,a.current)&&a.current&&!u4(a.current)&&(e.preventDefault(),b(a.current.value));break}case B.DELETE:case B.BACKSPACE:{!E&&c>0&&(L(l,a.current)?e.key===B.BACKSPACE&&u4(a.current)&&(e.preventDefault(),T(K(l),"last",m.current)):(e.preventDefault(),X(R4(l),K(l))));break}case B.ARROW_UP:case B.ARROW_LEFT:case B.ARROW_DOWN:case B.ARROW_RIGHT:{c!==0&&!L(l,a.current)&&(e.preventDefault(),T(K(l),D4(e.key),m.current));break}}},o4=e=>{I&&I(e),R&&!e.defaultPrevented&&a.current&&b(a.current.value)},s4=(e,l)=>{e.preventDefault(),e.stopPropagation(),X(l,V4(l,g))},i4=e=>{e.defaultPrevented||L(e.currentTarget,C4(e.currentTarget))||a.current&&a.current.focus()},H=s.useMemo(()=>{if(x)return f.jsx(O,{onClick:N,disabled:i,"data-testid":q})},[O,x,q,i,N]),c4=s.useMemo(()=>{if(H||d)return f.jsxs(f.Fragment,{children:[H,d]})},[d,H]);return f.jsx(B4,{Component:"div",getRootRef:u,style:t,disabled:i,before:n,after:c4,status:F,mode:j,className:r,maxHeight:P,onClick:i?void 0:i4,children:f.jsxs("div",{className:m4(h.host,C!=="regular"&&L4[C],p&&h.hasPlaceholder),ref:m,role:"listbox","aria-orientation":"horizontal","aria-disabled":i,"aria-readonly":E,onKeyDown:i?void 0:r4,children:[g.map((e,l)=>f.jsx(s.Fragment,{children:w({Component:"div",value:e.value,label:e.label,disabled:e.disabled||i,readOnly:e.readOnly||E,className:h.chip,onRemove:s4,"data-index":l,"data-value":e.value,"data-value-type":typeof e.value,tabIndex:k===l?0:-1,role:"option","aria-selected":!0,"aria-posinset":l+1,"aria-setsize":c},e)},`${typeof e.value}-${e.value}`)),f.jsx(f4,{autoCapitalize:"none",autoComplete:"off",autoCorrect:"off",spellCheck:!1,...o,Component:"input",type:"text",id:v||`chips-input-base-generated-id-${A}`,getRootRef:a,className:h.el,disabled:i,readOnly:E,placeholder:p?V:void 0,value:z,onChange:M,onBlur:o4})]})})};try{e4.displayName="ChipsInputBase",e4.__docgenInfo={description:"",displayName:"ChipsInputBase",props:{onClear:{defaultValue:null,description:"Обработчик очистки всех выбранных опций.",name:"onClear",required:!0,type:{name:"() => void"}},onAddChipOption:{defaultValue:null,description:"Обработчик добавления новой опции чипа.",name:"onAddChipOption",required:!0,type:{name:"(value: string) => void"}},onRemoveChipOption:{defaultValue:null,description:"Обработчик удаления опции чипа.",name:"onRemoveChipOption",required:!0,type:{name:"(value: ChipOptionValue | O) => void"}},getRootRef:{defaultValue:null,description:"Ссылка на корневой элемент.",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},addOnBlur:{defaultValue:null,description:"Добавляет значение в список на событие `onBlur`.",name:"addOnBlur",required:!1,type:{name:"boolean"}},renderChip:{defaultValue:{value:"Используется [Chip](#/Chip)"},description:"Render prop функция для возврата своего компонента.",name:"renderChip",required:!1,type:{name:"RenderChip<O>"}},clearButtonShown:{defaultValue:null,description:"Показывать ли кнопку для очистки значения.",name:"clearButtonShown",required:!1,type:{name:"boolean"}},clearButtonTestId:{defaultValue:null,description:"(e2e) testId кнопки очистки.",name:"clearButtonTestId",required:!1,type:{name:"string"}},ClearButton:{defaultValue:{value:`({
  className,
  onClick,
  ...restProps
}: FormFieldClearButtonProps): React.ReactNode => {
  return (
    <IconButton
      Component="button"
      label="Очистить поле"
      onKeyDown={stopPropagation}
      type="button"
      activeMode="opacity"
      hoverMode="opacity"
      {...restProps}
      className={className}
      onClick={(e) => {
        stopPropagation(e);
        e.preventDefault();
        onClick();
      }}
    >
      <Icon16Cancel />
    </IconButton>
  );
}`},description:"Кастомная кнопка для очистки значения.\nДолжна принимать обязательное свойство `onClick`.",name:"ClearButton",required:!1,type:{name:"ComponentType<FormFieldClearButtonProps>"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:{value:"[]"},description:"Выбранные опции.",name:"value",required:!1,type:{name:"O[]"}},inputValue:{defaultValue:{value:""},description:"Значение поля ввода.",name:"inputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"Обработчик изменения значения в поле ввода.",name:"onInputChange",required:!1,type:{name:"OnInputChange"}},delimiter:{defaultValue:null,description:`Символ или строка, которая будет использоваться как разделитель для автоматического создания опций из текста, введенного в поле ввода.
Принимает:
- \`string\` - простая строка
- \`RegExp\` - регулярное выражение
- \`string[]\` - массив строк, по которым нужно разелять ввод.

Работает в двух сценариях:
1. При вводе разделителя - текст до разделителя автоматически преобразуется в новую опцию.
   Например, при \`delimiter=","\` ввод "опция1," создаст опцию "опция1".

2. При вставке из буфера обмена - если вставляемый текст содержит разделители,
   он будет автоматически разбит на несколько опций.
   Например, при \`delimiter=","\` вставка "опция1,опция2,опция3" создаст
   три отдельные опции: "опция1", "опция2" и "опция3".`,name:"delimiter",required:!1,type:{name:"string | RegExp | string[]"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},align:{defaultValue:null,description:"",name:"align",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},mode:{defaultValue:null,description:"Режим отображения.\n\n- `default` — показывает фон, обводку и, при наличии, текст-подсказку.\n- `plain` — показывает только текст-подсказку.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"plain"'},{value:'"default"'}]}},status:{defaultValue:null,description:"Статус отображения поля в форме.",name:"status",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"valid"'}]}},after:{defaultValue:null,description:"Добавляет иконку справа.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkcom.github.io/VKUI/#/IconButton), если вам нужна иконка, реагируюущая на нажатие.",name:"after",required:!1,type:{name:"ReactNode"}},before:{defaultValue:null,description:"Добавляет иконку слева.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkcom.github.io/VKUI/#/IconButton), если вам нужна иконка, реагирующая на нажатие.",name:"before",required:!1,type:{name:"ReactNode"}},maxHeight:{defaultValue:null,description:"Максимальная высота поля.",name:"maxHeight",required:!1,type:{name:"number"}}}}}catch{}const j4=(u,t="")=>{try{const r=u.value;u.value=t;const n=u._valueTracker;n&&n.setValue(r);const d=new Event("input",{bubbles:!0});u.dispatchEvent(d)}catch{}},t4=(u,t,r)=>u.map(n=>({...n,label:r(n),value:t(n)}));function P4(u){const t=u.filter(n=>n.length>0);if(t.length===0)return null;const r=t.map(n=>n4(n));return new RegExp(`(?:${r.join("|")})`)}function w4(u){return u instanceof RegExp?u:typeof u=="string"?new RegExp(n4(u)):P4(u)}const $4=({value:u,defaultValue:t=S,onChange:r,getOptionLabel:n=$,getOptionValue:d=U,getNewOptionData:F=_4,inputValue:j,defaultInputValue:P=G,onInputChange:g,disabled:b,delimiter:_})=>{const[w,D]=y4({disabled:b,value:u?t4(u,d,n):void 0,defaultValue:t4(t,d,n),onChange:r}),v=s.useRef(null),[z,V]=h4({disabled:b,value:j,defaultValue:P,onChange:g}),i=s.useCallback((o,C)=>{D(A=>{const a=new Set,m=o.map(p=>{const k=a4(p),y=k?F(p.value,p.label):F(p,typeof p=="string"?p:"");return a.add(y.value),k?{...p,...y}:y}),c=A.filter(p=>!a.has(p.value));return C&&c.push(...m),c})},[D,F]),E=s.useCallback(()=>{v.current&&j4(v.current,"")},[v]),R=s.useCallback(o=>i([o],!0),[i]),I=s.useCallback(o=>i(o,!0),[i]),M=s.useCallback(o=>i([o],!1),[i]),O=s.useCallback(o=>{const C=o.trim();C&&(R(C),E())},[R,E]),x=s.useCallback(()=>{D(t)},[t,D]),q=s.useCallback(()=>{D(S),E()},[E,D]),N=s.useCallback((o,C=!0)=>{const A=o.target.value,a=_?w4(_):null;if(!a||!a.test(A)||!C){V(o);return}const m=A.trim().split(a).map(c=>c.trim()).filter(Boolean);o.target.value="",o.currentTarget.value="",V(o),I(m)},[I,_,V]);return g4(v,x),{value:w,addOption:R,addOptionFromInput:O,removeOption:M,inputRef:v,inputValue:z,onInputChange:N,clearInput:E,clearOptions:q}};export{e4 as C,S as D,U as a,_4 as b,G as c,$ as g,W as r,t4 as t,$4 as u};
