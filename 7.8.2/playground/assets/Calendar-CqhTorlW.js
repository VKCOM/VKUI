import{r as s,aJ as ue,aK as ae,j as n,h as he,A as te,s as ye,K as L,a1 as je,a0 as Re,l as Le,aq as ne,aj as He,ar as Ke,R as ze}from"./iframe-DvQ0hW0I.js";import{u as Ye,N as Oe,n as Ue,s as Ze,d as $e,i as B,C as Ge,c as Je,a as We,b as Qe}from"./CalendarHeader-DDsND2oN.js";import{u as Xe}from"./useEnsuredControl-CswA9P61.js";import{c as eu}from"./callMultiple-ChqatQlo.js";import{B as uu}from"./Button-DPGaTllJ.js";import{C as pe}from"./CustomSelect-BSp1nyxX.js";const au="_host_vitji_1",tu="_host__withoutDone_vitji_6",nu="_picker_vitji_10",lu="_divider_vitji_14",su="_button_vitji_20",b={host:au,host__withoutDone:tu,picker:nu,divider:lu,button:su},me=()=>!0,le=[];for(let e=0;e<24;e+=1)le.push({value:e,label:String(e).padStart(2,"0")});const se=[];for(let e=0;e<60;e+=1)se.push({value:e,label:String(e).padStart(2,"0")});const fe=(e,r)=>{const m=Number(e);return!isNaN(m)&&r.some(f=>f.value===m)},oe=({value:e,onChange:r,onDoneButtonClick:m,changeHoursLabel:f,changeMinutesLabel:H,isDayDisabled:D,doneButtonText:K="Готово",doneButtonDisabled:z=!1,doneButtonShow:q=!0,minutesTestId:Y,hoursTestId:O,doneButtonTestId:U,DoneButton:Z})=>{const _=s.useRef(null),I=s.useRef(null),F=s.useRef(null),M=D?le.map(u=>({...u,disabled:D(ue(e,u.value),!0)})):le,x=D?se.map(u=>({...u,disabled:D(ae(e,u.value),!0)})):se,T=(u,l,c)=>{const h=u.target.value.replace(/\D/g,"");u.target.value=h,l(h)&&r?.(c(e,Number(h)))},$=u=>{T(u,l=>fe(l,M),ue)},G=u=>{T(u,l=>fe(l,x),ae)},J=s.useCallback((u,l)=>r?.(ue(e,Number(l))),[r,e]),W=s.useCallback((u,l)=>r?.(ae(e,Number(l))),[r,e]),d=u=>{if(ye(u)!==L.ENTER)return;const c=[_,I,F].filter(v=>!!v.current),N=c.findIndex(v=>v.current===u.target)+1;if(N>=c.length)return;const k=c[N];k.current&&(u.preventDefault(),k.current?.focus())},A=s.useCallback((u,l)=>{l&&u.key==="Escape"&&u.stopPropagation()},[]),w=eu(d,A),Q=()=>{const u=Z??uu;return n.jsx(u,{mode:"secondary",onClick:m,size:"l",getRootRef:F,onKeyDown:d,disabled:z,"data-testid":U,children:K})};return n.jsxs("div",{className:he(b.host,!q&&b.host__withoutDone),children:[n.jsx("div",{className:b.picker,children:n.jsx(te,{sizeY:"compact",children:n.jsx(pe,{value:e.getHours(),options:M,onChange:J,forceDropdownPortal:!1,searchable:!0,filterFn:me,onInputChange:$,onInputKeyDown:w,getSelectInputRef:_,"aria-label":f,"data-testid":O})})}),n.jsx("div",{className:b.divider,children:":"}),n.jsx("div",{className:b.picker,children:n.jsx(te,{sizeY:"compact",children:n.jsx(pe,{value:e.getMinutes(),options:x,onChange:W,forceDropdownPortal:!1,searchable:!0,filterFn:me,onInputChange:G,getSelectInputRef:I,onInputKeyDown:w,"aria-label":H,"data-testid":Y})})}),q&&n.jsx("div",{className:b.button,children:n.jsx(te,{sizeY:"compact",children:Q()})})]})};try{oe.displayName="CalendarTime",oe.__docgenInfo={description:"",displayName:"CalendarTime",props:{value:{defaultValue:null,description:"Отображаемая дата.",name:"value",required:!0,type:{name:"Date"}},changeHoursLabel:{defaultValue:null,description:"Текст выпадающего списка с выбором часов. Делает его доступным для ассистивных технологий.",name:"changeHoursLabel",required:!1,type:{name:"string"}},changeMinutesLabel:{defaultValue:null,description:"Текст выпадающего списка с выбором минут. Делает его доступным для ассистивных технологий.",name:"changeMinutesLabel",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Обработчик изменения времени.",name:"onChange",required:!1,type:{name:"((value: Date) => void)"}},isDayDisabled:{defaultValue:null,description:"Функция для проверки блокировки выбора даты и времени.",name:"isDayDisabled",required:!1,type:{name:"((day: Date, withTime?: boolean) => boolean)"}},hoursTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора часа в календаре.",name:"hoursTestId",required:!1,type:{name:"string"}},minutesTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора минут в календаре.",name:"minutesTestId",required:!1,type:{name:"string"}},doneButtonTestId:{defaultValue:null,description:'Передает атрибут `data-testid` для кнопки "Готово" в календаре.',name:"doneButtonTestId",required:!1,type:{name:"string"}},DoneButton:{defaultValue:null,description:'Кастомное отображение кнопки `"Done"`.',name:"DoneButton",required:!1,type:{name:"ComponentType<ButtonProps>"}},doneButtonText:{defaultValue:{value:"Готово"},description:'Текст отображаемый в кнопке `"Done"`.',name:"doneButtonText",required:!1,type:{name:"string"}},doneButtonShow:{defaultValue:{value:"true"},description:'Управление отображением кнопки `"Done"`.',name:"doneButtonShow",required:!1,type:{name:"boolean"}},doneButtonDisabled:{defaultValue:{value:"false"},description:'Блокировка взаимодействия с кнопкой "Done".',name:"doneButtonDisabled",required:!1,type:{name:"boolean"}},onDoneButtonClick:{defaultValue:null,description:'Обработки нажатия на кнопку `"Done"`.',name:"onDoneButtonClick",required:!1,type:{name:"(() => void)"}}}}}catch{}const ou="_host_1izce_1",ru="_time_1izce_13",iu="_header_1izce_21",du="_sizeS_1izce_25",R={host:ou,time:ru,header:iu,sizeS:du},De=({getRootRef:e,value:r,defaultValue:m,onChange:f,disablePast:H,disableFuture:D,shouldDisableDate:K,onDoneButtonClick:z,enableTime:q=!1,doneButtonText:Y,doneButtonDisabled:O,doneButtonShow:U,DoneButton:Z,weekStartsOn:_=1,disablePickers:I,"aria-label":F="Календарь",changeHoursLabel:M="Изменить час",changeMinutesLabel:x="Изменить минуту",prevMonthLabel:T="Предыдущий месяц",nextMonthLabel:$="Следующий месяц",changeMonthLabel:G="Изменить месяц",changeYearLabel:J="Изменить год",showNeighboringMonth:W,size:d="m",viewDate:A,onHeaderChange:w,onNextMonth:Q,onPrevMonth:u,prevMonthIcon:l,nextMonthIcon:c,prevMonthProps:h,nextMonthProps:N,dayProps:k,listenDayChangesForUpdate:v,renderDayContent:be,minDateTime:g,maxDateTime:E,timezone:P,minutesTestId:ve,hoursTestId:ge,doneButtonTestId:Ee,prevMonthButtonTestId:Ve,nextMonthButtonTestId:Ce,monthDropdownTestId:Be,yearDropdownTestId:qe,dayTestId:_e,...Ie})=>{const Fe=s.useCallback(a=>{f?.(je(a,P)||void 0)},[f,P]),[re,X]=Xe({value:r,defaultValue:m,onChange:Fe}),t=s.useMemo(()=>Re(re,P),[P,re]),{viewDate:i,setViewDate:S,setPrevMonth:Me,setNextMonth:xe,focusedDay:y,setFocusedDay:V,isDayFocused:Te,isDayDisabled:ie,isMonthDisabled:Ae,isYearDisabled:we}=Ye({value:t,disableFuture:D,disablePast:H,shouldDisableDate:K,onHeaderChange:w,onNextMonth:Q,onPrevMonth:u,minDateTime:g,maxDateTime:E}),[p,j]=s.useState();Le(()=>{t&&S(t)},[t]);const Ne=s.useCallback(a=>{const o=ye(a);if(o&&Oe.includes(o)){a.preventDefault();const C=Ue(y??t,o);C&&!ne(C,i)&&S(C),V(C),j(C);return}if(o===L.TAB){V(void 0),j(y);return}(o===L.ENTER||o===L.SPACE)&&He(a.target)&&(a.preventDefault(),a.target.click?.())},[y,V,j,S,t,i]),ke=s.useCallback(a=>{let o=Ze(a,t);(g||E)&&(o=$e(o,{min:g,max:E})),X(o)},[t,X,E,g]),Pe=s.useCallback(a=>{y&&B(y,a)||(V(a),(!p||!B(a,p))&&j(a))},[p,y,V]),ee=s.useCallback(a=>!!(t&&B(a,t)),[t]),de=p&&ne(p,i),ce=t&&ne(t,i),Se=s.useCallback(a=>de?B(p,a):ce?ee(a):B(Ke(i),a),[p,i,ee,de,ce]);return n.jsxs(ze,{"aria-label":F,...Ie,baseClassName:he(R.host,d==="s"&&R.sizeS),getRootRef:e,children:[n.jsx(Ge,{viewDate:A||i,onChange:S,onNextMonth:xe,onPrevMonth:Me,disablePickers:I||d==="s",className:R.header,prevMonthLabel:T,nextMonthLabel:$,changeMonthLabel:G,changeYearLabel:J,prevMonthIcon:l,nextMonthIcon:c,prevMonthProps:h,nextMonthProps:N,isMonthDisabled:Ae,isYearDisabled:we,nextMonthButtonTestId:Ce,prevMonthButtonTestId:Ve,monthDropdownTestId:Be,yearDropdownTestId:qe}),n.jsx(Je,{viewDate:A||i,value:t,weekStartsOn:_,onKeyDown:Ne,onDayChange:ke,isDayActive:ee,onDayFocus:Pe,isDayFocused:Te,isDayFocusable:Se,isDaySelectionStart:Qe,isDaySelectionEnd:We,isDayDisabled:ie,showNeighboringMonth:W,size:d,dayProps:k,listenDayChangesForUpdate:v,renderDayContent:be,dayTestId:_e}),q&&t&&d!=="s"&&n.jsx("div",{className:R.time,children:n.jsx(oe,{value:t,onChange:X,onDoneButtonClick:z,doneButtonText:Y,doneButtonDisabled:O,doneButtonShow:U,DoneButton:Z,changeHoursLabel:M,changeMinutesLabel:x,isDayDisabled:g||E?ie:void 0,minutesTestId:ve,hoursTestId:ge,doneButtonTestId:Ee})})]})};try{De.displayName="Calendar",De.__docgenInfo={description:"",displayName:"Calendar",props:{value:{defaultValue:null,description:"Текущая выбранная дата.",name:"value",required:!1,type:{name:"Date | null"}},defaultValue:{defaultValue:null,description:"Начальная дата при монтировании.",name:"defaultValue",required:!1,type:{name:"Date | null"}},disablePast:{defaultValue:null,description:"Запрещает выбор даты в прошлом.\nПрименяется, если не заданы `shouldDisableDate` и `disableFuture`.",name:"disablePast",required:!1,type:{name:"boolean"}},disableFuture:{defaultValue:null,description:"Запрещает выбор даты в будущем.\nПрименяется, если не задано `shouldDisableDate`.",name:"disableFuture",required:!1,type:{name:"boolean"}},enableTime:{defaultValue:{value:"false"},description:"Включает выбор времени.",name:"enableTime",required:!1,type:{name:"boolean"}},disablePickers:{defaultValue:null,description:"Отключает селекторы выбора месяца/года.",name:"disablePickers",required:!1,type:{name:"boolean"}},changeDayLabel:{defaultValue:null,description:`\`aria-label\` для изменения дня.
@deprecated Будет удалeно в **VKUI v8**.
Использовалось для задания aria-label для контейнера дней в календаре.
Теперь этот контейнер является таблицей (с помощью role="grid") и
в aria-label рендерится текущий открытый в календаре месяц и год.`,name:"changeDayLabel",required:!1,type:{name:"string"}},weekStartsOn:{defaultValue:{value:"1"},description:"День недели, с которого начинается неделя.",name:"weekStartsOn",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"},{value:"2"},{value:"3"},{value:"4"},{value:"5"},{value:"6"}]}},showNeighboringMonth:{defaultValue:null,description:"Показывать дни соседних месяцев.",name:"showNeighboringMonth",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"m"},description:"Размер календаря.",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},onChange:{defaultValue:null,description:"Обработчик изменения выбранной даты.",name:"onChange",required:!1,type:{name:"((value?: Date) => void)"}},shouldDisableDate:{defaultValue:null,description:"Функция для проверки запрета выбора даты.",name:"shouldDisableDate",required:!1,type:{name:"((value: Date) => boolean)"}},viewDate:{defaultValue:null,description:`Дата отображаемого месяца.
При использовании обновление даты должно происходить вне компонента.`,name:"viewDate",required:!1,type:{name:"Date"}},onHeaderChange:{defaultValue:null,description:"Обработчик изменения даты в шапке календаря.",name:"onHeaderChange",required:!1,type:{name:"((value: Date) => void)"}},minDateTime:{defaultValue:null,description:"Минимальные дата и время, которые можно выбрать.\nПрименяется, если не заданы `shouldDisableDate` и `disablePast`/`disableFuture`.",name:"minDateTime",required:!1,type:{name:"Date"}},maxDateTime:{defaultValue:null,description:"Максимальные дата и время, которые можно выбрать.\nПрименяется, если не заданы `shouldDisableDate` и `disablePast`/`disableFuture`.",name:"maxDateTime",required:!1,type:{name:"Date"}},timezone:{defaultValue:null,description:"Часовой пояс для отображения даты.",name:"timezone",required:!1,type:{name:"string"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},changeHoursLabel:{defaultValue:{value:"Изменить час"},description:"Текст выпадающего списка с выбором часов. Делает его доступным для ассистивных технологий.",name:"changeHoursLabel",required:!1,type:{name:"string"}},changeMinutesLabel:{defaultValue:{value:"Изменить минуту"},description:"Текст выпадающего списка с выбором минут. Делает его доступным для ассистивных технологий.",name:"changeMinutesLabel",required:!1,type:{name:"string"}},prevMonthLabel:{defaultValue:{value:"Предыдущий месяц"},description:"`aria-label` для кнопки предыдущего месяца.",name:"prevMonthLabel",required:!1,type:{name:"string"}},nextMonthLabel:{defaultValue:{value:"Следующий месяц"},description:"`aria-label` для кнопки следующего месяца.",name:"nextMonthLabel",required:!1,type:{name:"string"}},changeMonthLabel:{defaultValue:{value:"Изменить месяц"},description:"`aria-label` для селектора месяца.",name:"changeMonthLabel",required:!1,type:{name:"string"}},changeYearLabel:{defaultValue:{value:"Изменить год"},description:"`aria-label` для селектора года.",name:"changeYearLabel",required:!1,type:{name:"string"}},prevMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки предыдущего месяца.",name:"prevMonthIcon",required:!1,type:{name:"ReactNode"}},nextMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки следующего месяца.",name:"nextMonthIcon",required:!1,type:{name:"ReactNode"}},onNextMonth:{defaultValue:null,description:"Нажатие на кнопку переключения на следующий месяц.",name:"onNextMonth",required:!1,type:{name:"(() => void)"}},onPrevMonth:{defaultValue:null,description:"Нажатие на кнопку переключения на предыдущий месяц.",name:"onPrevMonth",required:!1,type:{name:"(() => void)"}},prevMonthProps:{defaultValue:null,description:"Дополнительные свойства для кнопки предыдущего месяца.",name:"prevMonthProps",required:!1,type:{name:"ArrowMonthProps"}},nextMonthProps:{defaultValue:null,description:"Дополнительные свойства для кнопки следующего месяца.",name:"nextMonthProps",required:!1,type:{name:"ArrowMonthProps"}},listenDayChangesForUpdate:{defaultValue:null,description:"Следить за изменениями дней для обновления UI.",name:"listenDayChangesForUpdate",required:!1,type:{name:"boolean"}},renderDayContent:{defaultValue:null,description:"Кастомизация отображения содержимого дня.",name:"renderDayContent",required:!1,type:{name:"((day: Date) => ReactNode)"}},dayProps:{defaultValue:null,description:"Дополнительные свойства для элементов дней.",name:"dayProps",required:!1,type:{name:"CalendarDayElementProps"}},DoneButton:{defaultValue:null,description:'Кастомное отображение кнопки `"Done"`.',name:"DoneButton",required:!1,type:{name:"ComponentType<ButtonProps>"}},doneButtonText:{defaultValue:null,description:'Текст отображаемый в кнопке `"Done"`.',name:"doneButtonText",required:!1,type:{name:"string"}},doneButtonShow:{defaultValue:null,description:'Управление отображением кнопки `"Done"`.',name:"doneButtonShow",required:!1,type:{name:"boolean"}},doneButtonDisabled:{defaultValue:null,description:'Блокировка взаимодействия с кнопкой "Done".',name:"doneButtonDisabled",required:!1,type:{name:"boolean"}},onDoneButtonClick:{defaultValue:null,description:'Обработки нажатия на кнопку `"Done"`.',name:"onDoneButtonClick",required:!1,type:{name:"(() => void)"}},dayTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дня в календаре.",name:"dayTestId",required:!1,type:{name:"string | ((day: Date) => string)"}},monthDropdownTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора месяца в заголовке календаря.",name:"monthDropdownTestId",required:!1,type:{name:"string | ((monthIndex: number) => string)"}},yearDropdownTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора года в заголовке календаря.",name:"yearDropdownTestId",required:!1,type:{name:"string | ((year: number) => string)"}},nextMonthButtonTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для кнопки перехода к следующему месяцу в заголовке календаря.",name:"nextMonthButtonTestId",required:!1,type:{name:"string"}},prevMonthButtonTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для кнопки перехода к предыдущему месяцу в заголовке календаря.",name:"prevMonthButtonTestId",required:!1,type:{name:"string"}},hoursTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора часа в календаре.",name:"hoursTestId",required:!1,type:{name:"string"}},minutesTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна выбора минут в календаре.",name:"minutesTestId",required:!1,type:{name:"string"}},doneButtonTestId:{defaultValue:null,description:'Передает атрибут `data-testid` для кнопки "Готово" в календаре.',name:"doneButtonTestId",required:!1,type:{name:"string"}}}}}catch{}export{De as C};
