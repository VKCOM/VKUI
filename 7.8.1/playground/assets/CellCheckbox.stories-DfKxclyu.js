import{w as e,b as p,j as r}from"./iframe-DdZr-4mP.js";import{D as a,C as i}from"./constants-DdkjnEgz.js";import{g as s}from"./mock-CiudtyON.js";import{A as l}from"./Avatar-410xp239.js";import{G as n}from"./Group-DlK5kh75.js";import{a as c,C as u}from"./Cell-DUdnijE9.js";import"./preload-helper-PPVm8Dsz.js";import"./ImageBase-Dd-xxUc3.js";import"./Clickable-J2yyQqq6.js";import"./useFocusVisible-CsJI4LS4.js";import"./useFocusVisibleClassName-DD68rAjX.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-B_lQou7R.js";import"./useColorScheme-DV5aetKH.js";import"./InputUtils-CcKtkKuI.js";import"./useFocusWithin-Bj820Lyk.js";import"./useIsClient-q3rRlZlM.js";import"./useConfigDirection-BdfXEpUn.js";import"./online_mobile_12-nNQkdum-.js";import"./SvgIconRootV2-BEs6hlg2.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-1KqsUf4m.js";import"./Removable-sBXdy_3O.js";import"./children-oqymHkiK.js";import"./IconButton-C7aWXmKO.js";import"./Tappable-CovdKVQt.js";import"./VisuallyHidden-CSRm7Yw_.js";import"./useGlobalEventListener-VexK5DUQ.js";import"./useEventListener-EHs5705p.js";import"./cancel_24-SB-_Mfon.js";import"./SimpleCell-CIBNVGZX.js";import"./Headline-BSoQthvj.js";import"./Subhead-xzDyxoRX.js";import"./chevron_compact_right_24-kk3EfcLj.js";import"./chevron_16-qALKhhss.js";import"./AdaptiveIconRenderer-BjiXmkQi.js";import"./reorder_ios_24-CkN9Xqz2.js";import"./check_box_on_24-Dqh-fiAD.js";import"./check_circle_on_24-Bo96Gt5Z.js";import"./constants-CtEIZ0Vq.js";const mr={title:"Buttons/Cell/Checkbox",component:c,parameters:{...i,...a},decorators:[e,p]},o={args:{defaultChecked:!0},decorators:[(t,m)=>r.jsx(n,{children:r.jsx(u,{Component:"label",before:r.jsx(l,{src:s("user_xyz")}),after:r.jsx(t,{...m.args}),children:"Игорь Федоров"})})]};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...o.parameters?.docs?.source}}};const er=["Playground"];export{o as Playground,er as __namedExportsOrder,mr as default};
