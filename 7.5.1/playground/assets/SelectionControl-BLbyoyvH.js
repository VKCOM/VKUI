import{l as r,j as t,R as p,i as c,T as m,d as _}from"./iframe-DSAhScPT.js";import{D as f}from"./Clickable-6oth1gD7.js";import{T as E}from"./Tappable-41du4Si_.js";import{h as C}from"./react_utils-CSZjvU4X.js";import{F as A}from"./Footnote-BKhvF0_1.js";const y="_host_7qfl8_1",F="_description_7qfl8_14",N="_titleLayout_7qfl8_20",h="_title_7qfl8_20",v="_titleAfter_7qfl8_30",D="_sizeYCompact_7qfl8_36",Y="_sizeYNone_7qfl8_41",u={host:y,description:F,titleLayout:N,title:h,titleAfter:v,sizeYCompact:D,sizeYNone:Y},b={none:u.sizeYNone,compact:u.sizeYCompact};function l({children:e,titleAfter:s,description:a,...d}){const{sizeY:n="none"}=r();return t.jsxs(p,{baseClassName:c(u.host,n!=="regular"&&b[n]),...d,children:[t.jsxs("div",{className:u.titleLayout,children:[t.jsx(m,{className:u.title,children:e}),t.jsx("div",{className:u.titleAfter,children:s})]}),C(a)&&t.jsx(A,{className:u.description,children:a})]})}try{l.displayName="SelectionControlLabel",l.__docgenInfo={description:"",displayName:"SelectionControlLabel",props:{description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"ReactNode"}},titleAfter:{defaultValue:null,description:"",name:"titleAfter",required:!1,type:{name:"ReactNode"}}}}}catch{}const z="_host_1vl1c_1",B="_sizeYCompact_1vl1c_25",L="_sizeYNone_1vl1c_30",i={host:z,sizeYCompact:B,sizeYNone:L},q={none:i.sizeYNone,compact:i.sizeYCompact},o=e=>{const{sizeY:s="none"}=r(),a=_();return t.jsx(E,{Component:"label",baseClassName:c(i.host,s!=="regular"&&q[s]),activeEffectDelay:a==="ios"?100:f,...e})};o.Label=l;try{o.displayName="SelectionControl",o.__docgenInfo={description:"",displayName:"SelectionControl",props:{getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLLabelElement>"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}}}}}catch{}try{o.Label.displayName="SelectionControl.Label",o.Label.__docgenInfo={description:"",displayName:"SelectionControl.Label",props:{description:{defaultValue:null,description:"",name:"description",required:!1,type:{name:"ReactNode"}},titleAfter:{defaultValue:null,description:"",name:"titleAfter",required:!1,type:{name:"ReactNode"}}}}}catch{}export{o as S,l as a};
