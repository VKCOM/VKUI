import{d as R,r as f,n as A,j as _,i as N,l as T,ax as I}from"./iframe-DSAhScPT.js";import{m as V}from"./mergeCalls-Bc-HqyI0.js";import{c as q,C as P}from"./Clickable-6oth1gD7.js";import{a as M}from"./InputUtils-CLCgtllv.js";function S(u){const e=u==null?void 0:u.getBoundingClientRect();return{top:e==null?void 0:e.top,left:e==null?void 0:e.left,width:u==null?void 0:u.offsetWidth,height:u==null?void 0:u.offsetHeight}}const L="_host_a6ta5_1",z="_sizeXCompact_a6ta5_25",H="_sizeXNone_a6ta5_30",O="_borderRadiusInherit_a6ta5_35",x="_stateLayer_a6ta5_42",X="_hasPointerFalse_a6ta5_54",w="_ripple_a6ta5_54",j="_hasPointerNone_a6ta5_59",W="_hoveredBackground_a6ta5_64",U="_activatedBackground_a6ta5_68",Y="_hoveredOpacity_a6ta5_72",G="_activatedOpacity_a6ta5_73",J="_wave_a6ta5_85",t={host:L,sizeXCompact:z,sizeXNone:H,borderRadiusInherit:O,stateLayer:x,hasPointerFalse:X,ripple:w,hasPointerNone:j,hoveredBackground:W,activatedBackground:U,hoveredOpacity:Y,activatedOpacity:G,wave:J},F=(u,e)=>R()==="android"&&!e&&u==="background",K=70,b=225,y=(u,e)=>{const[o,l]=f.useState([]),s=f.useMemo(()=>new Map,[]);f.useEffect(function(){const n=o.length>0?setTimeout(()=>l([]),b):null;return function(){n&&clearTimeout(n)}},[o]);function C(a,n,r){const i=Date.now(),p=o.filter(m=>m.id+b>i);l([...p,{x:a,y:n,id:i,pointerId:r}]),s.delete(r)}const D=a=>{const{top:n,left:r}=S(a.currentTarget),i=a.clientX-(r??0),p=a.clientY-(n??0);s.set(a.pointerId,setTimeout(()=>C(i,p,a.pointerId),K))},d=a=>{const n=s.get(a.pointerId);clearTimeout(n),s.delete(a.pointerId)},E=(!M||e===!1)&&u;return{clicks:o,onPointerDown:E?D:A,onPointerCancel:E?d:A}},v=({needRipple:u=!0,clicks:e})=>_.jsx("span",{"aria-hidden":!0,className:N(t.stateLayer,u&&t.ripple),children:e.map(o=>_.jsx("span",{className:t.wave,style:{top:o.y,left:o.x}},o.id))});try{F.displayName="useMaybeNeedRipple",F.__docgenInfo={description:`Возможно нужен Ripple эффект. Данный хук нужен для отказа
от двойного ререндера.`,displayName:"useMaybeNeedRipple",props:{}}}catch{}try{y.displayName="useRipple",y.__docgenInfo={description:"Хук для создания Ripple эффектов.",displayName:"useRipple",props:{}}}catch{}try{v.displayName="Ripple",v.__docgenInfo={description:"",displayName:"Ripple",props:{needRipple:{defaultValue:{value:"true"},description:"",name:"needRipple",required:!1,type:{name:"boolean"}},clicks:{defaultValue:null,description:"",name:"clicks",required:!0,type:{name:"Wave[]"}}}}}catch{}const c="background",Q={background:t.hoveredBackground,opacity:t.hoveredOpacity,none:""};function h(u=c){const e=Q[u];return e!==void 0?e:u}const Z={background:t.activatedBackground,opacity:t.activatedOpacity,none:""};function B(u=c){const e=Z[u];return e!==void 0?e:u}try{h.displayName="hoverClass",h.__docgenInfo={description:"Определяем класс наведения.",displayName:"hoverClass",props:{}}}catch{}try{B.displayName="activeClass",B.__docgenInfo={description:"Определяем класс наведения.",displayName:"activeClass",props:{}}}catch{}try{c.displayName="DEFAULT_STATE_MODE",c.__docgenInfo={description:"Состояние по умолчанию.",displayName:"DEFAULT_STATE_MODE",props:{}}}catch{}const $={none:t.sizeXNone,compact:t.sizeXCompact};function u4(u){switch(u){case void 0:return t.hasPointerNone;case!1:return t.hasPointerFalse}}const g=({baseClassName:u,borderRadiusMode:e="auto",children:o,hoverMode:l=c,activeMode:s=c,onPointerDown:C,onPointerCancel:D,...d})=>{const E=q(d),{sizeX:a="none",hasPointer:n}=T(),r=F(s,n),{clicks:i,...p}=y(r,n),m=V(p,{onPointerDown:C,onPointerCancel:D}),k=d.Component==="button"?{type:"button"}:{};return _.jsxs(P,{baseClassName:N("vkuiInternalTappable",u,t.host,a!==I.REGULAR&&$[a],e==="inherit"&&t.borderRadiusInherit,u4(n)),hoverClassName:h(l),activeClassName:B(s),...k,...m,...d,children:[o,E&&(l==="background"||s==="background")&&_.jsx(v,{needRipple:r,clicks:i})]})};try{g.displayName="Tappable",g.__docgenInfo={description:"",displayName:"Tappable",props:{borderRadiusMode:{defaultValue:{value:"auto"},description:"Задает border-radius элементу\nВ режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`.",name:"borderRadiusMode",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"auto"'}]}},activeClassName:{defaultValue:null,description:"Стиль подсветки `active`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `activeMode`.",name:"activeClassName",required:!1,type:{name:"string"}},hoverClassName:{defaultValue:null,description:"Стиль подсветки `hover`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `hoverMode`.",name:"hoverClassName",required:!1,type:{name:"string"}},DefaultComponent:{defaultValue:null,description:'Компонент который будет при передаче `onClick`. По умолчанию `"div"`.',name:"DefaultComponent",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},baseClassName:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `className`.",name:"baseClassName",required:!1,type:{name:"string | false"}},baseStyle:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `style`.",name:"baseStyle",required:!1,type:{name:"CSSProperties"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Позволяет управлять `hovered`-состоянием извне.",name:"hovered",required:!1,type:{name:"boolean"}},activated:{defaultValue:null,description:"Позволяет управлять `activated`-состоянием извне.",name:"activated",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},hasHoverWithChildren:{defaultValue:null,description:`Позволяет родительскому компоненту
иметь \`hovered\`-cостояние при наведении
на любой дочерний элемент.
По умолчанию состояние hovered у родителя сбрасывается.

Присваивается родителькому компоненту.
@example <Tappable hasHoverWithChildren>
  <IconButton />
  <IconButton />
  <IconButton />
</Tappable>`,name:"hasHoverWithChildren",required:!1,type:{name:"boolean"}},unlockParentHover:{defaultValue:null,description:`Позволяет родительскому компоненту показывать hovered-состояние при наведении
на текущий дочерний компонент.

Присваивается дочернему компоненту.
@example <Tappable>
  <IconButton unlockParentHover />
  <IconButton unlockParentHover />
  <IconButton />
</Tappable>`,name:"unlockParentHover",required:!1,type:{name:"boolean"}},activeEffectDelay:{defaultValue:null,description:"Длительность показа `active`-состояния.",name:"activeEffectDelay",required:!1,type:{name:"number"}},activeMode:{defaultValue:{value:"background"},description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:{value:"background"},description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}}}}}catch{}export{g as T};
