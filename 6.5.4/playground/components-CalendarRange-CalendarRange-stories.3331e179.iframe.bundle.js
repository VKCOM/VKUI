"use strict";(self.webpackChunk_vkontakte_vkui=self.webpackChunk_vkontakte_vkui||[]).push([[6859],{"./src/components/CalendarRange/CalendarRange.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Playground:()=>Playground,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_storybook_preview_api__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("storybook/internal/preview-api"),_storybook_constants__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/storybook/constants.ts"),_CalendarRange__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/CalendarRange/CalendarRange.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Forms/CalendarRange",component:_CalendarRange__WEBPACK_IMPORTED_MODULE_2__.e,parameters:{..._storybook_constants__WEBPACK_IMPORTED_MODULE_3__.eb,..._storybook_constants__WEBPACK_IMPORTED_MODULE_3__.eC},argTypes:{value:{description:"Используйте startDate и endDate для задания периода",control:!1},startDate:{description:"Дата начала периода",table:{type:{summary:"string"}},control:{type:"date"}},endDate:{description:"Дата окончания периода",table:{type:{summary:"string"}},control:{type:"date"}}}},Playground={render:function Render(){const[{value,startDate,endDate,...args},updateArgs]=(0,_storybook_preview_api__WEBPACK_IMPORTED_MODULE_1__.useArgs)(),parsedStartDate=startDate?new Date(startDate):null,parsedEndDate=endDate?new Date(endDate):null;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_CalendarRange__WEBPACK_IMPORTED_MODULE_2__.e,{...args,value:[parsedStartDate,parsedEndDate],onChange:updatedValue=>{const[changedStartDate,changedEndDate]=updatedValue||[null,null];updateArgs({startDate:changedStartDate?new Date(changedStartDate):null,endDate:changedEndDate?new Date(changedEndDate):null})}})}},__namedExportsOrder=["Playground"];Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"{\n  render: function Render() {\n    const [{\n      value,\n      startDate,\n      endDate,\n      ...args\n    }, updateArgs] = useArgs();\n    const handleDateRangeUpdate: CalendarRangeProps['onChange'] = updatedValue => {\n      const [changedStartDate, changedEndDate] = updatedValue || [null, null];\n      updateArgs({\n        startDate: changedStartDate ? new Date(changedStartDate) : null,\n        endDate: changedEndDate ? new Date(changedEndDate) : null\n      });\n    };\n    const parsedStartDate = startDate ? new Date(startDate) : null;\n    const parsedEndDate = endDate ? new Date(endDate) : null;\n    return <CalendarRange {...args} value={[parsedStartDate, parsedEndDate]} onChange={handleDateRangeUpdate} />;\n  }\n}",...Playground.parameters?.docs?.source}}}}}]);