import{j as m,O as a4,l as F4,r as o,k as D4,i as B4,T as v4,a8 as L,a7 as h4,aa as A4,K as C,aE as y4}from"./iframe-D2wkiYbA.js";import{F as b4}from"./FormField-BCe2hBV2.js";import{I as g4}from"./IconButton-DhTwf-xi.js";import{I as _4}from"./cancel_16-Btdg1xUF.js";import{u as V4,a as R4}from"./useEnsuredControl-BM8G-vFy.js";import{u as I4}from"./useNativeFormResetListener-Csd7wnJj.js";import{C as x4}from"./Chip-DVu16h-a.js";function o4(u){return u?u.replace(/([.*+?^${}()|[\]\/\\])/g,"\\$1"):""}const S=({className:u,onClick:t,...r})=>m.jsx(g4,{Component:"button",label:"Очистить поле",onKeyDown:a4,type:"button",activeMode:"opacity",hoverMode:"opacity",...r,className:u,onClick:a=>{a4(a),a.preventDefault(),t()},children:m.jsx(_4,{})});try{S.displayName="FormFieldClearButton",S.__docgenInfo={description:"",displayName:"FormFieldClearButton",props:{className:{defaultValue:null,description:"`className` для компонента.",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Обработчик нажатия на кнопку.",name:"onClick",required:!0,type:{name:"() => void"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}const K=[],G="";function $(u){return u.value}function U(u){return u.label}function O4(u,t){return{value:u,label:t}}function W(u){const{label:t,...r}=u;return m.jsx(x4,{removable:!u.disabled,...r,children:t})}try{$.displayName="getOptionValueDefault",$.__docgenInfo={description:"",displayName:"getOptionValueDefault",props:{value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{U.displayName="getOptionLabelDefault",U.__docgenInfo={description:"",displayName:"getOptionLabelDefault",props:{value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{W.displayName="renderChipDefault",W.__docgenInfo={description:"",displayName:"renderChipDefault",props:{label:{defaultValue:null,description:"Отображаемый текст чипа.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},value:{defaultValue:null,description:"Значение чипа.",name:"value",required:!1,type:{name:"ChipOptionValue"}},removable:{defaultValue:null,description:"Можно ли удалить чип.",name:"removable",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с чипом.",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Режим только для чтения.",name:"readOnly",required:!1,type:{name:"boolean"}},removeLabel:{defaultValue:null,description:"Текст для кнопки удаления.",name:"removeLabel",required:!1,type:{name:"string"}},before:{defaultValue:null,description:"Контент перед основным содержимым.",name:"before",required:!1,type:{name:"ReactNode"}},after:{defaultValue:null,description:"Контент после основного содержимого.",name:"after",required:!1,type:{name:"ReactNode"}},onRemove:{defaultValue:null,description:"Обработчик удаления чипа.",name:"onRemove",required:!1,type:{name:"((event: MouseEvent<Element, MouseEvent>, value: ChipOptionValue) => void)"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}}}}}catch{}const s4=u=>typeof u=="object"&&"value"in u,n4=u=>u?u.value===G:!0,q4=(u,t)=>{const r=s4(u)?u.value:u;return t.findIndex(a=>a.value===r)},Y=u=>{const t=u&&u.dataset.index;return typeof t=="string"?Number(t):-1},N4=u=>{const t=u&&u.dataset.value;return(u&&u.dataset.valueType)==="number"?Number(t):typeof t=="string"?t:-1},k4=(u,t,r)=>{const a=r-1;switch(t){case"prev":const c=u-1;return c<0?a:c;case"next":const B=u+1;return B>a?0:B;case"last":return a;case"first":return 0;default:return-1}},j4="_host_j893j_1",T4="_listBox_j893j_16",L4="_chip_j893j_25",P4="_el_j893j_30",M4="_hasPlaceholder_j893j_44",z4="_hasInputValue_j893j_45",w4="_sizeYCompact_j893j_79",H4="_sizeYNone_j893j_84",h={host:j4,listBox:T4,chip:L4,el:P4,hasPlaceholder:M4,hasInputValue:z4,sizeYCompact:w4,sizeYNone:H4},Y4={none:h.sizeYNone,compact:h.sizeYCompact},l4=({getRootRef:u,style:t,className:r,before:a,after:c,status:B,mode:P,maxHeight:M,value:b=K,onAddChipOption:g,onRemoveChipOption:_,renderChip:z=W,getRef:v,id:A,inputValue:O=G,placeholder:V,disabled:i,readOnly:p,addOnBlur:R,onBlur:I,onInputChange:w,ClearButton:q=S,clearButtonShown:N,clearButtonTestId:k,onClear:j,chipsListLabel:s="Выбранные элементы","aria-label":F="",...y})=>{const{sizeY:D="none"}=F4(),x=o.useId(),n=D4(v),d=o.useRef(null),f=o.useRef(null),E=b.length,X=E===0,[i4,J]=o.useState(0),Q=e=>{J(0),e.focus()},T=(e,l,C4)=>{const e4=k4(e,l,E),t4=C4.querySelector(`[data-index="${e4}"]`);t4&&(J(e4),t4.focus())},Z=(e,l)=>{!n.current||!f.current||(E>1?l===E-1?T(l,"prev",f.current):T(l,"next",f.current):Q(n.current),_(e))},c4=e=>{const l=e.target;if(!(e.defaultPrevented||!f.current||!A4(l)))switch(e.key){case C.ENTER:{!p&&L(l,n.current)&&n.current&&!n4(n.current)&&(e.preventDefault(),g(n.current.value));break}case C.DELETE:case C.BACKSPACE:{!p&&E>0&&(L(l,n.current)?e.key===C.BACKSPACE&&n4(n.current)&&(e.preventDefault(),T(Y(l),"last",f.current)):(e.preventDefault(),Z(N4(l),Y(l))));break}case C.HOME:case C.END:case C.ARROW_UP:case C.ARROW_LEFT:case C.ARROW_DOWN:case C.ARROW_RIGHT:{E!==0&&!L(l,n.current)&&(e.preventDefault(),T(Y(l),y4(e.key),f.current));break}}},p4=e=>{I&&I(e),R&&!e.defaultPrevented&&n.current&&g(n.current.value)},d4=(e,l)=>{e.preventDefault(),e.stopPropagation(),Z(l,q4(l,b))},E4=e=>{e.defaultPrevented||L(e.currentTarget,h4(e.currentTarget))||n.current&&n.current.focus()},u4=o.useCallback(()=>{n.current&&Q(n.current),j()},[n,j]),H=o.useMemo(()=>{if(N)return m.jsx(q,{onClick:u4,disabled:i,"data-testid":k})},[q,N,k,i,u4]),m4=o.useMemo(()=>{if(H||c)return m.jsxs(m.Fragment,{children:[H,c]})},[c,H]),f4=A||`chips-input-base-generated-id-${x}`;return m.jsx(b4,{Component:"div",getRootRef:u,role:"group","aria-label":F,style:t,disabled:i,before:a,after:m4,status:B,mode:P,className:r,maxHeight:M,onClick:i?void 0:E4,children:m.jsxs("div",{className:B4(h.host,D!=="regular"&&Y4[D],X&&h.hasPlaceholder,O&&h.hasInputValue),ref:d,onKeyDown:i?void 0:c4,children:[m.jsx("div",{className:h.listBox,ref:f,role:"listbox","aria-orientation":"horizontal","aria-disabled":i,"aria-readonly":p,"aria-label":s,children:b.map((e,l)=>m.jsx(o.Fragment,{children:z({Component:"div",value:e.value,label:e.label,disabled:e.disabled||i,readOnly:e.readOnly||p,className:h.chip,onRemove:d4,"data-index":l,"data-value":e.value,"data-value-type":typeof e.value,tabIndex:i4===l?0:-1,role:"option","aria-selected":!0,"aria-posinset":l+1,"aria-setsize":E,"aria-description":"Для удаления используйте Backspace или Delete"},e)},`${typeof e.value}-${e.value}`))}),m.jsx(v4,{autoCapitalize:"none",autoComplete:"off",autoCorrect:"off",spellCheck:!1,...y,"aria-label":F,Component:"input",type:"text",id:f4,getRootRef:n,className:h.el,disabled:i,readOnly:p,placeholder:X?V:void 0,value:O,onChange:w,onBlur:p4})]})})};try{l4.displayName="ChipsInputBase",l4.__docgenInfo={description:"",displayName:"ChipsInputBase",props:{onClear:{defaultValue:null,description:"Обработчик очистки всех выбранных опций.",name:"onClear",required:!0,type:{name:"() => void"}},onAddChipOption:{defaultValue:null,description:"Обработчик добавления новой опции чипа.",name:"onAddChipOption",required:!0,type:{name:"(value: string) => void"}},onRemoveChipOption:{defaultValue:null,description:"Обработчик удаления опции чипа.",name:"onRemoveChipOption",required:!0,type:{name:"(value: ChipOptionValue | O) => void"}},getRootRef:{defaultValue:null,description:"Ссылка на корневой элемент.",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},addOnBlur:{defaultValue:null,description:"Добавляет значение в список на событие `onBlur`.",name:"addOnBlur",required:!1,type:{name:"boolean"}},renderChip:{defaultValue:{value:"Используется [Chip](#/Chip)"},description:"Render prop функция для возврата своего компонента.",name:"renderChip",required:!1,type:{name:"RenderChip<O>"}},clearButtonShown:{defaultValue:null,description:"Показывать ли кнопку для очистки значения.",name:"clearButtonShown",required:!1,type:{name:"boolean"}},clearButtonTestId:{defaultValue:null,description:"(e2e) testId кнопки очистки.",name:"clearButtonTestId",required:!1,type:{name:"string"}},ClearButton:{defaultValue:{value:`({
  className,
  onClick,
  ...restProps
}: FormFieldClearButtonProps): React.ReactNode => {
  return (
    <IconButton
      Component="button"
      label="Очистить поле"
      onKeyDown={stopPropagation}
      type="button"
      activeMode="opacity"
      hoverMode="opacity"
      {...restProps}
      className={className}
      onClick={(e) => {
        stopPropagation(e);
        e.preventDefault();
        onClick();
      }}
    >
      <Icon16Cancel />
    </IconButton>
  );
}`},description:"Кастомная кнопка для очистки значения.\nДолжна принимать обязательное свойство `onClick`.",name:"ClearButton",required:!1,type:{name:"ComponentType<FormFieldClearButtonProps>"}},chipsListLabel:{defaultValue:{value:"Выбранные элементы"},description:"`aria-label` для списка выбранных опций.",name:"chipsListLabel",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:{value:"[]"},description:"Выбранные опции.",name:"value",required:!1,type:{name:"O[]"}},inputValue:{defaultValue:{value:""},description:"Значение поля ввода.",name:"inputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"Обработчик изменения значения в поле ввода.",name:"onInputChange",required:!1,type:{name:"OnInputChange"}},delimiter:{defaultValue:null,description:`Символ или строка, которая будет использоваться как разделитель для автоматического создания опций из текста, введенного в поле ввода.
Принимает:
- \`string\` - простая строка
- \`RegExp\` - регулярное выражение
- \`string[]\` - массив строк, по которым нужно разелять ввод.

Работает в двух сценариях:
1. При вводе разделителя - текст до разделителя автоматически преобразуется в новую опцию.
   Например, при \`delimiter=","\` ввод "опция1," создаст опцию "опция1".

2. При вставке из буфера обмена - если вставляемый текст содержит разделители,
   он будет автоматически разбит на несколько опций.
   Например, при \`delimiter=","\` вставка "опция1,опция2,опция3" создаст
   три отдельные опции: "опция1", "опция2" и "опция3".`,name:"delimiter",required:!1,type:{name:"string | RegExp | string[]"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},align:{defaultValue:null,description:"",name:"align",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},mode:{defaultValue:null,description:"Режим отображения.\n\n- `default` — показывает фон, обводку и, при наличии, текст-подсказку.\n- `plain` — показывает только текст-подсказку.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"plain"'},{value:'"default"'}]}},status:{defaultValue:null,description:"Статус отображения поля в форме.",name:"status",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"valid"'}]}},before:{defaultValue:null,description:"Добавляет иконку слева.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагирующая на нажатие.",name:"before",required:!1,type:{name:"ReactNode"}},after:{defaultValue:null,description:"Добавляет иконку справа.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагируюущая на нажатие.",name:"after",required:!1,type:{name:"ReactNode"}},maxHeight:{defaultValue:null,description:"Максимальная высота поля.",name:"maxHeight",required:!1,type:{name:"number"}}}}}catch{}const S4=(u,t="")=>{try{const r=u.value;u.value=t;const a=u._valueTracker;a&&a.setValue(r);const c=new Event("input",{bubbles:!0});u.dispatchEvent(c)}catch{}},r4=(u,t,r)=>u.map(a=>({...a,label:r(a),value:t(a)}));function K4(u){const t=u.filter(a=>a.length>0);if(t.length===0)return null;const r=t.map(a=>o4(a));return new RegExp(`(?:${r.join("|")})`)}function $4(u){return u instanceof RegExp?u:typeof u=="string"?new RegExp(o4(u)):K4(u)}const uu=({value:u,defaultValue:t=K,onChange:r,getOptionLabel:a=U,getOptionValue:c=$,getNewOptionData:B=O4,inputValue:P,defaultInputValue:M=G,onInputChange:b,disabled:g,delimiter:_})=>{const[z,v]=V4({disabled:g,value:u?r4(u,c,a):void 0,defaultValue:r4(t,c,a),onChange:r}),A=o.useRef(null),[O,V]=R4({disabled:g,value:P,defaultValue:M,onChange:b}),i=o.useCallback((s,F)=>{v(y=>{const D=new Set,x=s.map(d=>{const f=s4(d),E=f?B(d.value,d.label):B(d,typeof d=="string"?d:"");return D.add(E.value),f?{...d,...E}:E}),n=y.filter(d=>!D.has(d.value));return F&&n.push(...x),n})},[v,B]),p=o.useCallback(()=>{A.current&&S4(A.current,"")},[A]),R=o.useCallback(s=>i([s],!0),[i]),I=o.useCallback(s=>i(s,!0),[i]),w=o.useCallback(s=>i([s],!1),[i]),q=o.useCallback(s=>{const F=s.trim();F&&(R(F),p())},[R,p]),N=o.useCallback(()=>{v(t)},[t,v]),k=o.useCallback(()=>{v(K),p()},[p,v]),j=o.useCallback((s,F=!0)=>{const y=s.target.value,D=_?$4(_):null;if(!D||!D.test(y)||!F){V(s);return}const x=y.trim().split(D).map(n=>n.trim()).filter(Boolean);s.target.value="",s.currentTarget.value="",V(s),I(x)},[I,_,V]);return I4(A,N),{value:z,addOption:R,addOptionFromInput:q,removeOption:w,inputRef:A,inputValue:O,onInputChange:j,clearInput:p,clearOptions:k}};export{l4 as C,K as D,$ as a,O4 as b,G as c,U as g,W as r,r4 as t,uu as u};
