import{w as e,b as p,j as r}from"./iframe-DC59t_7s.js";import{D as a,C as i}from"./constants-DdkjnEgz.js";import{g as s}from"./mock-CiudtyON.js";import{A as l}from"./Avatar-2FNTHIuZ.js";import{G as n}from"./Group-BjjfSX7O.js";import{a as c,C as u}from"./Cell-D1-zqLEr.js";import"./preload-helper-PPVm8Dsz.js";import"./ImageBase-Dh1youlf.js";import"./Clickable-k0omQ8uW.js";import"./useFocusVisible-0NkNV9Nj.js";import"./useFocusVisibleClassName-DmFOR7KZ.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-CdzA4sjH.js";import"./useColorScheme-Cf0PiwGW.js";import"./InputUtils-C5RWily7.js";import"./useFocusWithin-9CYA-Xql.js";import"./useIsClient-DeI2OSMJ.js";import"./useConfigDirection-6hDi4KID.js";import"./online_mobile_12-DWpmN_kZ.js";import"./SvgIconRootV2-AN48yvx-.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-B_mvNSI1.js";import"./Removable-qNhpNz2M.js";import"./children-DYOU-AGd.js";import"./IconButton-DlcUkq3s.js";import"./Tappable-CRrpYa-n.js";import"./VisuallyHidden-dUOLTySp.js";import"./useGlobalEventListener-C_qxnlQL.js";import"./useEventListener-D94pK2uE.js";import"./cancel_24-pw3fX9Xb.js";import"./SimpleCell-BLFw8LVq.js";import"./Headline-bNrKkYhC.js";import"./Subhead-CcQWHNvG.js";import"./chevron_compact_right_24-oTms1QP_.js";import"./chevron_16-DtWL8gcK.js";import"./AdaptiveIconRenderer-DnHspDix.js";import"./reorder_ios_24-D9YjfHpX.js";import"./check_box_on_24-B4x-cDuo.js";import"./check_circle_on_24-QLmxxhyq.js";import"./constants-CtEIZ0Vq.js";const mr={title:"Buttons/Cell/Checkbox",component:c,parameters:{...i,...a},decorators:[e,p]},o={args:{defaultChecked:!0},decorators:[(t,m)=>r.jsx(n,{children:r.jsx(u,{Component:"label",before:r.jsx(l,{src:s("user_xyz")}),after:r.jsx(t,{...m.args}),children:"Игорь Федоров"})})]};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...o.parameters?.docs?.source}}};const er=["Playground"];export{o as Playground,er as __namedExportsOrder,mr as default};
