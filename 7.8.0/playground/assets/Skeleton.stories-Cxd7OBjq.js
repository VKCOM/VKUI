import{D as g,C as F}from"./constants-DdkjnEgz.js";import{c as R}from"./createStoryParameters-CcwS40kl.js";import{i as v,j as f,R as P,X as T,h as x,r as i,q as h,$ as L,G as V}from"./iframe-DJZLDe2v.js";import{u as q}from"./useStateWithPrev-DSVTyTdW.js";import{a as O,s as j}from"./animationVisibilityDelay.module-DjZYURHD.js";const G="_host_ytm1y_1",M="_disableAnimation_ytm1y_55",A={host:G,disableAnimation:M},I="--vkui_internal--skeleton_gradient_left";function N(u,e=1.5){const[o,a]=i.useState(!1),t=i.useRef(void 0),s=i.useCallback(()=>{clearTimeout(t.current),a(!1);const n=e*V,r=n-performance.now()%n;return t.current=setTimeout(()=>a(!0),r),()=>clearTimeout(t.current)},[e]);return i.useEffect(()=>{if(u){a(!1);return}if(!o)return s()},[u,o,s]),o}function w(u){const{document:e,window:o}=h(),[[a,t],s]=q("0"),n=i.useCallback(()=>{const r=u.current;if(!r||!e)return;const l=-(r.getBoundingClientRect().left-e.body.getBoundingClientRect().left),c=l===0?"0":`${l}px`;t!==c&&s(c)},[e,t,u,s]);return i.useEffect(n,[n]),L(o,n),a}const D=({width:u,height:e,inlineSize:o,blockSize:a,maxWidth:t,maxInlineSize:s,borderRadius:n,children:r,colorFrom:l,colorTo:c,noAnimation:y=!1,duration:E,margin:C,getRootRef:_,visibilityDelay:p,...S})=>{const B=v(_),k=!N(y,E),b=w(B),d={width:u,height:e,inlineSize:o,blockSize:a,maxWidth:t,maxInlineSize:s,borderRadius:n,margin:C,[I]:b};return l&&(d["--vkui_internal--skeleton_color_from"]=l),c&&(d["--vkui_internal--skeleton_color_to"]=c),Number.isFinite(E)&&(d["--vkui_internal--skeleton_animation_duration"]=`${E}s`),f.jsx(P,{getRootRef:B,Component:"span",baseClassName:x(A.host,k&&A.disableAnimation,p&&j.visibilityDelay),baseStyle:T(d,O(p)),...S,children:r||f.jsx(f.Fragment,{children:"‌"})})};try{D.displayName="Skeleton",D.__docgenInfo={description:`> Старайтесь минимизировать количество заглушек на экране. Не каждый элемент
> на экране должен заменяться заглушкой.
>
> Текстовые блоки лучше сокращать до трёх строк. Ширина последней строки
> скелета вычисляется, как 75% от ширины текстового блока. Высота скелетона
> автоматически подстраивается под размер шрифта, поэтому идеально
> вписывается в слоты компонентов, которые обычно ожидают текст.`,displayName:"Skeleton",props:{colorFrom:{defaultValue:null,description:"Начальный цвет анимации.",name:"colorFrom",required:!1,type:{name:"string"}},colorTo:{defaultValue:null,description:"Финальный цвет анимации.",name:"colorTo",required:!1,type:{name:"string"}},noAnimation:{defaultValue:{value:"false"},description:"Выключает анимацию, в результате чего показывается только один цвет.",name:"noAnimation",required:!1,type:{name:"boolean"}},duration:{defaultValue:null,description:"Длительность анимации в секундах.",name:"duration",required:!1,type:{name:"number"}},visibilityDelay:{defaultValue:null,description:"Задерживает отрисовку элемента на заданное количество миллисекунд.",name:"visibilityDelay",required:!1,type:{name:"number"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLSpanElement | HTMLDivElement>"}}}}}catch{}const $={title:"Feedback/Skeleton",component:D,parameters:R("Skeleton",F,g),tags:["Обратная связь"]},m={};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:"{}",...m.parameters?.docs?.source}}};const z=["Playground"],J=Object.freeze(Object.defineProperty({__proto__:null,Playground:m,__namedExportsOrder:z,default:$},Symbol.toStringTag,{value:"Module"}));export{m as P,D as S,J as a};
