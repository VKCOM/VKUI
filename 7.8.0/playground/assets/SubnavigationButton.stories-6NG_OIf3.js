import{k as F,j as e,h as D,n as B}from"./iframe-DJZLDe2v.js";import{D as h,C as b}from"./constants-DdkjnEgz.js";import{c as _}from"./createStoryParameters-CcwS40kl.js";import{B as y}from"./Badge-DMFQ-jLc.js";import{C as A}from"./Counter-CFpW7C1b.js";import{T as q}from"./Tappable-CY0nsltg.js";import{C as g}from"./Caption-B1NS-klr.js";import{S}from"./Subhead-DeeiPlYW.js";import{I as z}from"./dropdown_16-CUEiXnu9.js";import{c as E}from"./createFieldWithPresets-CEa0erk0.js";const V="_host_hqfwb_1",N="_disabled_hqfwb_7",I="_sizeS_hqfwb_21",M="_sizeM_hqfwb_29",w="_sizeL_hqfwb_37",x="_sizeYCompact_hqfwb_44",P="_sizeYNone_hqfwb_57",T="_before_hqfwb_70",j="_label_hqfwb_75",H="_after_hqfwb_82",O="_chevronIcon_hqfwb_86",R="_modePrimary_hqfwb_108",Y="_modeOutline_hqfwb_113",L="_appearanceNeutral_hqfwb_121",W="_selected_hqfwb_130",k="_modeTertiary_hqfwb_137",G="_appearanceAccent_hqfwb_143",u={host:V,disabled:N,in:"_in_hqfwb_11",sizeS:I,sizeM:M,sizeL:w,sizeYCompact:x,sizeYNone:P,before:T,label:j,after:H,chevronIcon:O,modePrimary:R,modeOutline:Y,appearanceNeutral:L,selected:W,modeTertiary:k,appearanceAccent:G},J={accent:u.appearanceAccent,neutral:u.appearanceNeutral},K={primary:u.modePrimary,outline:u.modeOutline,tertiary:u.modeTertiary},Q={s:u.sizeS,m:u.sizeM,l:u.sizeL},U={none:u.sizeYNone,compact:u.sizeYCompact},X=({textLevel:n,...o})=>n==="1"?e.jsx(S,{...o}):e.jsx(g,{level:n==="2"?"1":"2",...o}),s=({mode:n="primary",appearance:o="accent",size:m="m",selected:p,textLevel:f="1",before:l,after:i,chevron:C,children:v,...c})=>{const{sizeY:d="none"}=F();return e.jsx(q,{hasActive:!1,focusVisibleMode:"outside",...c,baseClassName:D(u.host,Q[m],K[n],J[o],p&&u.selected,d!=="regular"&&U[d],c.disabled&&u.disabled),children:e.jsxs("span",{className:u.in,children:[l&&e.jsx("span",{className:u.before,children:l}),e.jsx(X,{textLevel:f,className:u.label,Component:"span",children:v}),i&&e.jsx("span",{className:u.after,children:i}),C&&e.jsx(z,{className:u.chevronIcon})]})})};try{s.displayName="SubnavigationButton",s.__docgenInfo={description:"",displayName:"SubnavigationButton",props:{mode:{defaultValue:{value:"primary"},description:"Стиль отображения кнопки.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"tertiary"'},{value:'"outline"'}]}},appearance:{defaultValue:{value:"accent"},description:"Тип внешнего вида кнопки.",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"accent"'},{value:'"neutral"'}]}},size:{defaultValue:{value:"m"},description:"Размер кнопки.",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'}]}},selected:{defaultValue:null,description:"Выбранное состояние.",name:"selected",required:!1,type:{name:"boolean"}},textLevel:{defaultValue:{value:"1"},description:"Размер шрифта. Этим свойством рекомендуется пользоваться, чтобы отрегулировать размер шрифта у кнопок в `<SubnavigationBar fixed />`.",name:"textLevel",required:!1,type:{name:"enum",value:[{value:'"1"'},{value:'"2"'},{value:'"3"'}]}},before:{defaultValue:null,description:"Рекомендуется использовать только иконки с размером 24.",name:"before",required:!1,type:{name:"ReactNode"}},after:{defaultValue:null,description:'Рекомендуется использовать только `<Counter size="s" />` или `<Badge />`.',name:"after",required:!1,type:{name:"ReactNode"}},chevron:{defaultValue:null,description:'Нужно ли отображать иконку `"chevron"`.',name:"chevron",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},borderRadiusMode:{defaultValue:null,description:"Задает border-radius элементу\nВ режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`.",name:"borderRadiusMode",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"auto"'}]}},activeClassName:{defaultValue:null,description:"Стиль подсветки `active`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `activeMode`.",name:"activeClassName",required:!1,type:{name:"string"}},hoverClassName:{defaultValue:null,description:"Стиль подсветки `hover`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `hoverMode`.",name:"hoverClassName",required:!1,type:{name:"string"}},baseClassName:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `className`.",name:"baseClassName",required:!1,type:{name:"string | false"}},baseStyle:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `style`.",name:"baseStyle",required:!1,type:{name:"CSSProperties"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Позволяет управлять `hovered`-состоянием извне.",name:"hovered",required:!1,type:{name:"boolean"}},activated:{defaultValue:null,description:"Позволяет управлять `activated`-состоянием извне.",name:"activated",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},hasHoverWithChildren:{defaultValue:null,description:`Позволяет родительскому компоненту
иметь \`hovered\`-cостояние при наведении
на любой дочерний элемент.
По умолчанию состояние hovered у родителя сбрасывается.

Присваивается родителькому компоненту.
@example <Tappable hasHoverWithChildren>
  <IconButton />
  <IconButton />
  <IconButton />
</Tappable>`,name:"hasHoverWithChildren",required:!1,type:{name:"boolean"}},unlockParentHover:{defaultValue:null,description:`Позволяет родительскому компоненту показывать hovered-состояние при наведении
на текущий дочерний компонент.

Присваивается дочернему компоненту.
@example <Tappable>
  <IconButton unlockParentHover />
  <IconButton unlockParentHover />
  <IconButton />
</Tappable>`,name:"unlockParentHover",required:!1,type:{name:"boolean"}},activeEffectDelay:{defaultValue:null,description:"Длительность показа `active`-состояния.",name:"activeEffectDelay",required:!1,type:{name:"number"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}}}}}catch{}const Z={title:"Navigation/SubnavigationBar/SubnavigationButton",component:s,parameters:_("SubnavigationButton",b,h),args:{onClick:B},argTypes:{before:E({iconSizes:["24"],requiredIcons:["Icon24FavoriteOutline"],sizeIconsCount:10}),after:E({additionalPresets:{Counter:e.jsx(A,{size:"s",children:"3"}),Badge:e.jsx(y,{})}})}},a={args:{children:"Размер"}},t={...a,args:{before:"Icon24FavoriteOutline",children:"Избранное",chevron:!0}},r={...a,args:{children:"Фильтры",after:"Counter"}};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:`{
  args: {
    children: 'Размер'
  }
}`,...a.parameters?.docs?.source}}};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  ...Playground,
  args: {
    before: 'Icon24FavoriteOutline',
    children: 'Избранное',
    chevron: true
  }
}`,...t.parameters?.docs?.source}}};r.parameters={...r.parameters,docs:{...r.parameters?.docs,source:{originalSource:`{
  ...Playground,
  args: {
    children: 'Фильтры',
    after: 'Counter'
  }
}`,...r.parameters?.docs?.source}}};const $=["Playground","WithIcon","WithCounter"],c4=Object.freeze(Object.defineProperty({__proto__:null,Playground:a,WithCounter:r,WithIcon:t,__namedExportsOrder:$,default:Z},Symbol.toStringTag,{value:"Module"}));export{a as P,s as S,t as W,r as a,c4 as b};
