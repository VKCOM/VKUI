import{j as B,r as o,l as du,i as I4,h as w4,K as R}from"./iframe-DJZLDe2v.js";import{a as pu}from"./useGlobalOnClickOutside-piARu2k4.js";import{d as C4,D as Eu}from"./DropdownIcon-_1xQ3gYQ.js";import{u as cu,g as B4,a as A4,D as k4,b as P4,c as m4,t as fu,C as Fu,r as mu}from"./useChipsInput-CHDjDV6N.js";import{C as Du}from"./CustomSelectDropdown-DJ2a33B-.js";import{C as L4}from"./CustomSelectOption-DfCxAhCM.js";import{F as Cu}from"./Footnote-D8Ch1fTG.js";import{b as Y}from"./type_checkers-CVMjkZjG.js";function M4(u,n){if(u===n)return!0;if(u==null||n==null||!Y(u)&&!Y(n))return u!==u&&n!==n;if(Y(u)&&Y(n)){if(Object.keys(u).length!==Object.keys(n).length)return!1;for(var l in u)if(u.hasOwnProperty(l)&&n.hasOwnProperty(l)){if(!M4(u[l],n[l]))return!1}else return!1;return!0}return!1}const h4="highlight",y4="Ничего не найдено",F4="next",R4="prev",D4=u=>B.jsx(L4,{...u}),J=u=>u&&"actionText"in u,Q=u=>u&&"placeholder"in u,v=u=>!J(u)&&!Q(u);try{D4.displayName="renderOptionDefault",D4.__docgenInfo={description:"",displayName:"renderOptionDefault",props:{description:{defaultValue:null,description:"Добавляет описание под основным блоком.",name:"description",required:!1,type:{name:"ReactNode"}},before:{defaultValue:null,description:"Вставляет элемент в начало блока перед основным контентом.\nНапример, можно передать компонент `Avatar`, `Icon<Name>` или другие изображения.",name:"before",required:!1,type:{name:"ReactNode"}},after:{defaultValue:null,description:"Вставляет элемент в конец блока после основного контента.\nНапример, можно передать компонент `Avatar`, `Icon<Name>` или другие изображения.",name:"after",required:!1,type:{name:"ReactNode"}},hierarchy:{defaultValue:null,description:"Позволяет создавать вложенность.",name:"hierarchy",required:!1,type:{name:"number"}},selected:{defaultValue:null,description:"Включает состояние выбранного элемента списка.",name:"selected",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Включает состояние наведения.",name:"hovered",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Включает состояние фокуса.",name:"focused",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Блокирует весь блок.\n\n> ⚠️  Важно: если CustomSelectOption используется внутри [Select](https://vkui.io/components/select), [CustomSelect](https://vkui.io/components/custom-select) или [ChipsSelect](https://vkui.io/components/chips-select), то свойство явно должно выставляться только через структуру `options`.\n> Запрещается выставлять `disabled` проп опциям в обход `options`, иначе [CustomSelect](https://vkui.io/components/custom-select) и [ChipsSelect](https://vkui.io/components/chips-select) не будут знать об актуальном состоянии\nопции.",name:"disabled",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}try{J.displayName="isCreateNewOptionPreset",J.__docgenInfo={description:"",displayName:"isCreateNewOptionPreset",props:{value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}},actionText:{defaultValue:null,description:"",name:"actionText",required:!0,type:{name:"any"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"any"}}}}}catch{}try{Q.displayName="isEmptyOptionPreset",Q.__docgenInfo={description:"",displayName:"isEmptyOptionPreset",props:{actionText:{defaultValue:null,description:"",name:"actionText",required:!0,type:{name:"any"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"any"}},value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{v.displayName="isNotServicePreset",v.__docgenInfo={description:"",displayName:"isNotServicePreset",props:{actionText:{defaultValue:null,description:"",name:"actionText",required:!0,type:{name:"any"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"any"}},value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}const Bu=({disabled:u,delimiter:n,value:l,defaultValue:r,onChange:A,getOptionLabel:i=B4,getOptionValue:C=A4,getNewOptionData:_=P4,inputValue:h,defaultInputValue:T=m4,onInputChange:b,creatable:d=!1,emptyText:F=y4,filterFn:p=C4,sortFn:x=!1,selectedBehavior:S=h4,options:k=k4,onClose:j,onOpen:H})=>{const{value:q,inputValue:I,onInputChange:$,...P}=cu({value:l,defaultValue:r,onChange:A,getOptionValue:C,getOptionLabel:i,getNewOptionData:_,inputValue:h,defaultInputValue:T,onInputChange:b,disabled:u,delimiter:n}),[y,Z]=o.useState(!1),[u4,e4]=o.useState(()=>y?N4({value:q,getOptionValue:C,getOptionLabel:i,inputValue:I,emptyText:F,creatable:d,filterFn:p,sortFn:x,options:k,selectedBehavior:S}):[]),[t4,L]=o.useState(0),[w,V]=o.useState(null),M=o.useCallback(g=>{g?H?.():j?.(),Z(g)},[H,j]),n4=o.useCallback(g=>{$(g,!!d),y||(M(!0),L(0))},[$,d,y,M]);return du(function(){y&&e4(U=>{const K=N4({value:q,getOptionValue:C,getOptionLabel:i,inputValue:I,emptyText:F,creatable:d,filterFn:p,sortFn:x,options:k,selectedBehavior:S});return M4(U,K)?U:K})},[y,q,i,C,I,k,d,S,p,x]),{...P,value:q,inputValue:I,onInputChange:n4,options:u4,opened:y,setOpened:M,focusedOption:w,focusedOptionIndex:t4,setFocusedOption:V,setFocusedOptionIndex:L}};function N4({value:u,getOptionValue:n=A4,getOptionLabel:l=B4,inputValue:r=m4,emptyText:A=y4,creatable:i=!1,sortFn:C=!1,filterFn:_=C4,options:h=k4,selectedBehavior:T=h4}){const b=_?h.filter(F=>_(r,F,l)):h;if(b.length===0)return r!==m4&&typeof i=="string"?[{actionText:i}]:[{placeholder:A}];C&&b.sort((F,p)=>C(F,p,r));const d=fu(b,n,l);if(T==="hide"){const F=u.map(p=>p.value);return d.filter(p=>v(p)?!F.includes(p.value):!1)}return d}const Au="_host_h3n6h_1",hu="_empty_h3n6h_5",yu="_popDown_h3n6h_12",Vu="_popUp_h3n6h_17",Ou="_dropdownIcon_h3n6h_22",vu="_dropdownIconWithOffset_h3n6h_26",N={host:Au,empty:hu,popDown:yu,popUp:Vu,dropdownIcon:Ou,dropdownIconWithOffset:vu},T4=(u=[],n=-1)=>n>=u.length-1?-1:u.findIndex((l,r)=>r>n&&(!v(l)||!l.disabled)),x4=(u=[],n=u.length)=>{let l=-1;if(n<=0)return l;for(let r=n-1;r>=0;r--){let A=u[r];if(!v(A)||!A.disabled){l=r;break}}return l},S4=({id:u,getRootRef:n,className:l,status:r="default",icon:A,onChangeStart:i,options:C,placement:_="bottom",closeAfterSelect:h=!0,selectedBehavior:T=h4,emptyText:b=y4,creatable:d=!1,fetching:F=!1,dropdownAutoWidth:p,forceDropdownPortal:x,noMaxHeight:S=!1,filterFn:k=C4,sortFn:j=!1,dropdownTestId:H,onClose:q,onOpen:I,overscrollBehavior:$,renderDropdown:P,getRef:y,value:Z,defaultValue:u4,inputValue:e4,defaultInputValue:t4,disabled:L,readOnly:w,getOptionValue:V=A4,getOptionLabel:M=B4,getNewOptionData:n4=P4,renderChip:g=mu,renderOption:U=D4,onChange:K,onFocus:V4,onInputChange:U4,onBlur:O4,onKeyDown:v4,dropdownOffsetDistance:a4=0,allowClearButton:W4,clearButtonTestId:j4,delimiter:H4,chipsListLabel:$4,...K4})=>{const{value:G,addOptionFromInput:l4,addOption:o4,removeOption:G4,clearOptions:X4,inputRef:z4,inputValue:X,clearInput:r4,onInputChange:Y4,options:m,opened:s,setOpened:D,focusedOption:i4,focusedOptionIndex:c,setFocusedOption:s4,setFocusedOptionIndex:O}=Bu({value:Z,defaultValue:u4,onChange:K,getOptionValue:V,getOptionLabel:M,getNewOptionData:n4,inputValue:e4,defaultInputValue:t4,onInputChange:U4,options:C,emptyText:b,creatable:d,filterFn:k,sortFn:j,selectedBehavior:T,onClose:q,onOpen:I,disabled:L,delimiter:H4}),d4=I4(n),J4=I4(y,z4),[p4,b4]=o.useState(_),Q4=o.useCallback(e=>{e.startsWith("top")?b4("top"):e.startsWith("bottom")&&b4("bottom")},[]),z=o.useId(),Z4=c!==null?`${z}-${c}`:void 0,E4=o.useRef(null),uu=e=>{V4&&V4(e),w||(D(!0),O(null))},eu=e=>{O4&&O4(e),!w&&!e.defaultPrevented&&!d&&e.preventDefault()},c4=o.useRef([]).current,tu=(e,t=!1)=>{const a=E4.current,E=c4[e];if(!E||!a)return;const f=a.offsetHeight,q4=a.scrollTop,W=E.offsetTop,f4=E.offsetHeight;t?a.scrollTop=W-f/2+f4/2:W+f4>f+q4?a.scrollTop=W-f+f4:W<q4&&(a.scrollTop=W)},nu=(e,t)=>{if(e===t)return;const a=m[e];v(a)&&a.disabled||(tu(e),O(e))},g4=(e,t)=>{let a=e===null?-1:e;if(t===F4){const E=T4(m,a);a=E===-1?T4(m):E}else if(t===R4){const E=x4(m,a);a=E===-1?x4(m):E}nu(a,c)},au=e=>{if(v4&&v4(e),!(e.defaultPrevented||w))switch(e.key){case R.ARROW_UP:case R.ARROW_DOWN:e.preventDefault(),s?g4(c,e.key===R.ARROW_UP?R4:F4):(D(!0),g4(null,F4));break;case R.ENTER:{if(!s)break;if(c!=null){const t=m[c];if(t&&v(t)){e.preventDefault(),i&&i(e,t),o4(t),O(null),r4(),h&&D(!1);break}}d||e.preventDefault();break}case R.ESCAPE:case R.TAB:s&&D(!1)}};o.useEffect(()=>{if(c===null)s4(null);else{const e=m[c];e&&v(e)&&s4(e)}},[m,c,s4]);const lu=o.useCallback(()=>{O(null)},[O]),ou=o.useCallback(()=>{D(!1)},[D]);pu("mousedown",ou,s?d4:null,s?E4:null);const ru=o.useCallback(e=>{e.preventDefault(),D(!s)},[s,D]),iu=o.useMemo(()=>{const e=m.map((t,a)=>{const E=`${z}-${a}`;return Q(t)?B.jsx(Cu,{className:N.empty,children:t.placeholder},"empty-text"):J(t)?B.jsx(L4,{id:E,hovered:c===a,onMouseDown:()=>l4(X),onMouseEnter:()=>O(a),children:t.actionText},"create-new-option"):B.jsx(o.Fragment,{children:U({id:E,disabled:t.disabled,hovered:i4?V(t)===V(i4):!1,children:t.label,selected:!!G.find(f=>V(f)===V(t)),getRootRef(f){f&&(c4[a]=f)},onMouseDown(f){t.disabled||(i&&i(f,t),f.defaultPrevented||(h&&D(!1),o4(t),r4()))},onMouseEnter(){O(a)}},t)},`${typeof t.value}-${t.value}`)});return P?P({defaultDropdownContent:e}):e},[o4,l4,c4,r4,h,z,i4,c,V,X,i,m,P,U,O,D,G]),su=o.useMemo(()=>s&&a4===0&&(p4.includes("top")?N.popUp:N.popDown)||void 0,[a4,s,p4]),_4=W4&&(!!G.length||!!X.length);return B.jsxs(B.Fragment,{children:[B.jsx(Fu,{...K4,disabled:L,readOnly:w,clearButtonShown:_4,clearButtonTestId:j4,id:u,getRootRef:d4,className:w4(N.host,su,l),status:r,after:A||B.jsx(Eu,{opened:s,onClick:ru,className:w4(N.dropdownIcon,_4&&N.dropdownIconWithOffset)}),value:G,onAddChipOption:l4,onRemoveChipOption:G4,renderChip:g,onClear:X4,getRef:J4,inputValue:X,onInputChange:Y4,onFocus:uu,onBlur:eu,onKeyDown:au,role:"combobox","aria-expanded":s,"aria-autocomplete":"list","aria-activedescendant":s?Z4:void 0,"aria-haspopup":"listbox",chipsListLabel:$4}),s&&B.jsx(Du,{"data-testid":H,targetRef:d4,placement:p4,scrollBoxRef:E4,onPlacementChange:Q4,onMouseLeave:lu,fetching:F,autoWidth:p,forcePortal:x,noMaxHeight:S,offsetDistance:a4,overscrollBehavior:$,id:z,role:"listbox","aria-labelledby":u,children:iu})]})};try{S4.displayName="ChipsSelect",S4.__docgenInfo={description:"",displayName:"ChipsSelect",props:{placement:{defaultValue:{value:"bottom"},description:"Расположение выпадающего списка.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}},fetching:{defaultValue:{value:"false"},description:"Отрисовка Spinner вместо списка опций в выпадающем списке.",name:"fetching",required:!1,type:{name:"boolean"}},closeAfterSelect:{defaultValue:{value:"true"},description:"Закрытие выпадающего списка после выбора элемента.",name:"closeAfterSelect",required:!1,type:{name:"boolean"}},dropdownAutoWidth:{defaultValue:null,description:"Ширина раскрывающегося списка зависит от контента.",name:"dropdownAutoWidth",required:!1,type:{name:"boolean"}},forceDropdownPortal:{defaultValue:null,description:"Принудительно использовать портал.",name:"forceDropdownPortal",required:!1,type:{name:"boolean"}},dropdownTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна.",name:"dropdownTestId",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"Иконка раскрывающегося списка.",name:"icon",required:!1,type:{name:"ReactNode"}},addOnBlur:{defaultValue:null,description:"Добавляет значение в список на событие `onBlur` (использовать вместе с `creatable`).",name:"addOnBlur",required:!1,type:{name:"boolean"}},noMaxHeight:{defaultValue:{value:"false"},description:"Отключает максимальную высоту по умолчанию.",name:"noMaxHeight",required:!1,type:{name:"boolean"}},renderOption:{defaultValue:{value:`(props: CustomSelectOptionProps): React.ReactNode => (
  <CustomSelectOption {...props} />
)`},description:"Функция для отрисовки кастомной опции в выпадающем списке.",name:"renderOption",required:!1,type:{name:"((props: CustomSelectOptionProps, option: Option) => ReactNode)"}},renderDropdown:{defaultValue:null,description:"Рендер-проп для кастомного рендера содержимого дропдауна.\nВ `defaultDropdownContent` содержится список опций.",name:"renderDropdown",required:!1,type:{name:"(({ defaultDropdownContent, }: { defaultDropdownContent: ReactNode; }) => ReactNode)"}},onChangeStart:{defaultValue:null,description:"Событие срабатывающее перед `onChange`.",name:"onChangeStart",required:!1,type:{name:"((event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>, option: Option) => void)"}},dropdownOffsetDistance:{defaultValue:{value:"0"},description:"Отступ от выпадающего списка.",name:"dropdownOffsetDistance",required:!1,type:{name:"number"}},allowClearButton:{defaultValue:null,description:"Если `true`, то справа будет отображаться кнопка для очистки значения.",name:"allowClearButton",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"Ссылка на корневой элемент.",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},renderChip:{defaultValue:{value:"Используется [Chip](#/Chip)"},description:"Render prop функция для возврата своего компонента.",name:"renderChip",required:!1,type:{name:"RenderChip<Option>"}},clearButtonShown:{defaultValue:null,description:"Показывать ли кнопку для очистки значения.",name:"clearButtonShown",required:!1,type:{name:"boolean"}},clearButtonTestId:{defaultValue:null,description:"(e2e) testId кнопки очистки.",name:"clearButtonTestId",required:!1,type:{name:"string"}},ClearButton:{defaultValue:null,description:"Кастомная кнопка для очистки значения.\nДолжна принимать обязательное свойство `onClick`.",name:"ClearButton",required:!1,type:{name:"ComponentType<FormFieldClearButtonProps>"}},chipsListLabel:{defaultValue:null,description:"`aria-label` для списка выбранных опций.",name:"chipsListLabel",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"Выбранные опции.",name:"value",required:!1,type:{name:"Option[]"}},delimiter:{defaultValue:null,description:`Символ или строка, которая будет использоваться как разделитель для автоматического создания опций из текста, введенного в поле ввода.
Принимает:
- \`string\` - простая строка
- \`RegExp\` - регулярное выражение
- \`string[]\` - массив строк, по которым нужно разелять ввод.

Работает в двух сценариях:
1. При вводе разделителя - текст до разделителя автоматически преобразуется в новую опцию.
   Например, при \`delimiter=","\` ввод "опция1," создаст опцию "опция1".

2. При вставке из буфера обмена - если вставляемый текст содержит разделители,
   он будет автоматически разбит на несколько опций.
   Например, при \`delimiter=","\` вставка "опция1,опция2,опция3" создаст
   три отдельные опции: "опция1", "опция2" и "опция3".`,name:"delimiter",required:!1,type:{name:"string | RegExp | string[]"}},onInputChange:{defaultValue:null,description:"Обработчик изменения значения в поле ввода.",name:"onInputChange",required:!1,type:{name:"OnInputChange"}},inputValue:{defaultValue:null,description:"Значение поля ввода.",name:"inputValue",required:!1,type:{name:"string"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},align:{defaultValue:null,description:"",name:"align",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},options:{defaultValue:null,description:"Список опций в выпадающем списке.",name:"options",required:!1,type:{name:"Option[]"}},creatable:{defaultValue:{value:"false"},description:"Возможность создавать чипы которых нет в списке:\n- `true` – добавление по кнопке Enter;\n- `<текст>` – помимо возможности добавления через Enter, в пункте меню появится кнопка с текстом.\nТекст для пункта, создающего чипы при нажатии, также отвечает за то, будет ли показан этот пункт\n(показывается после того как в списке не останется опций).",name:"creatable",required:!1,type:{name:"string | boolean"}},emptyText:{defaultValue:{value:"Ничего не найдено"},description:"Текст, который показывается если список опций пуст.",name:"emptyText",required:!1,type:{name:"string"}},selectedBehavior:{defaultValue:{value:"highlight"},description:"Показывать или скрывать уже выбранные опции.",name:"selectedBehavior",required:!1,type:{name:"enum",value:[{value:'"hide"'},{value:'"highlight"'}]}},filterFn:{defaultValue:null,description:"Функция для фильтрации опций в списке.",name:"filterFn",required:!1,type:{name:"false | FilterFn<Option>"}},sortFn:{defaultValue:{value:"false"},description:"Функция для сортировки опций в списке.",name:"sortFn",required:!1,type:{name:"false | SortFn<Option>"}},onClose:{defaultValue:null,description:"Будет вызвано в момент скрытия выпадающего списка.",name:"onClose",required:!1,type:{name:"VoidFunction"}},onOpen:{defaultValue:null,description:"Будет вызвано в момент открытия выпадающего списка.",name:"onOpen",required:!1,type:{name:"VoidFunction"}},getOptionValue:{defaultValue:null,description:"Селектор значения.",name:"getOptionValue",required:!1,type:{name:"GetOptionValue<Option>"}},getOptionLabel:{defaultValue:null,description:"Селектор пользовательского представления.",name:"getOptionLabel",required:!1,type:{name:"GetOptionLabel<Option>"}},getNewOptionData:{defaultValue:null,description:"Функция для создания новой опции.",name:"getNewOptionData",required:!1,type:{name:"GetNewOptionData<Option>"}},defaultValue:{defaultValue:null,description:"Выбранные опции по умолчанию.",name:"defaultValue",required:!1,type:{name:"Option[]"}},onChange:{defaultValue:null,description:"Обработчик изменения выбранных опций.",name:"onChange",required:!1,type:{name:"OnChange<Option>"}},defaultInputValue:{defaultValue:null,description:"Значение поля ввода по умолчанию.",name:"defaultInputValue",required:!1,type:{name:"string"}},status:{defaultValue:{value:"default"},description:"Статус отображения поля в форме.",name:"status",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"valid"'}]}},mode:{defaultValue:null,description:"Режим отображения.\n\n- `default` — показывает фон, обводку и, при наличии, текст-подсказку.\n- `plain` — показывает только текст-подсказку.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"plain"'}]}},before:{defaultValue:null,description:"Добавляет иконку слева.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагирующая на нажатие.",name:"before",required:!1,type:{name:"ReactNode"}},overscrollBehavior:{defaultValue:null,description:"Поведение overscroll, подробнее можно почитать в [документации](https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior).",name:"overscrollBehavior",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"auto"'},{value:'"contain"'}]}}}}}catch{}export{S4 as C};
