import{k as F,r as C,j as e,X as B,h as v}from"./iframe-D9ctG7Ns.js";import{h as o}from"./react_utils-CSZjvU4X.js";import{F as y}from"./Footnote-BcHikxS0.js";import{P as j}from"./Paragraph-CL2gUbo0.js";import{V as A}from"./VisuallyHidden-XRinxkJw.js";import{b as k}from"./dropdown_20-CPZmcS09.js";const N="_host_1mjkp_1",b="_hierarchy_1mjkp_14",x="_sizeYRegular_1mjkp_23",R="_sizeYNone_1mjkp_28",g="_disabled_1mjkp_33",V="_hover_1mjkp_38",z="_before_1mjkp_42",S="_main_1mjkp_47",Y="_children_1mjkp_53",q="_after_1mjkp_58",I="_description_1mjkp_65",O="_selectedIcon_1mjkp_69",u={host:N,hierarchy:b,sizeYRegular:x,sizeYNone:R,disabled:g,hover:V,before:z,main:S,children:Y,after:q,description:I,selectedIcon:O},H={none:u.sizeYNone,regular:u.sizeYRegular},m=({children:a,hierarchy:s=0,hovered:p,selected:n,before:i,after:l,description:r,disabled:t,style:E,className:D,onClick:_,...h})=>{const{sizeY:c="none"}=F(),f=C.useMemo(()=>s>0?{"--vkui_internal--custom_select_option_hierarchy_level":s}:void 0,[s]),d=!!(p&&!t);return e.jsxs(j,{...h,onClick:t?void 0:_,Component:"div",role:"option","aria-disabled":t,"aria-selected":n,"data-hovered":d,className:v(u.host,c!=="compact"&&H[c],d&&u.hover,t&&u.disabled,s>0&&u.hierarchy,D),style:B(f,E),children:[o(i)&&e.jsx("div",{className:u.before,children:i}),e.jsxs("div",{className:u.main,children:[e.jsx("div",{className:u.children,children:a}),o(r)&&e.jsxs(y,{className:u.description,children:[e.jsx(A,{children:" "}),r]})]}),e.jsxs("div",{className:u.after,children:[o(l)&&e.jsx("div",{children:l}),n&&e.jsx(k,{className:u.selectedIcon})]})]})};try{m.displayName="CustomSelectOption",m.__docgenInfo={description:"",displayName:"CustomSelectOption",props:{description:{defaultValue:null,description:"Добавляет описание под основным блоком.",name:"description",required:!1,type:{name:"ReactNode"}},before:{defaultValue:null,description:"Вставляет элемент в начало блока перед основным контентом.\nНапример, можно передать компонент `Avatar`, `Icon<Name>` или другие изображения.",name:"before",required:!1,type:{name:"ReactNode"}},after:{defaultValue:null,description:"Вставляет элемент в конец блока после основного контента.\nНапример, можно передать компонент `Avatar`, `Icon<Name>` или другие изображения.",name:"after",required:!1,type:{name:"ReactNode"}},hierarchy:{defaultValue:{value:"0"},description:"Позволяет создавать вложенность.",name:"hierarchy",required:!1,type:{name:"number"}},selected:{defaultValue:null,description:"Включает состояние выбранного элемента списка.",name:"selected",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Включает состояние наведения.",name:"hovered",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Включает состояние фокуса.",name:"focused",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Блокирует весь блок.\n\n> ⚠️  Важно: если CustomSelectOption используется внутри [Select](https://vkui.io/components/select), [CustomSelect](https://vkui.io/components/custom-select) или [ChipsSelect](https://vkui.io/components/chips-select), то свойство явно должно выставляться только через структуру `options`.\n> Запрещается выставлять `disabled` проп опциям в обход `options`, иначе [CustomSelect](https://vkui.io/components/custom-select) и [ChipsSelect](https://vkui.io/components/chips-select) не будут знать об актуальном состоянии\nопции.",name:"disabled",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}export{m as C};
