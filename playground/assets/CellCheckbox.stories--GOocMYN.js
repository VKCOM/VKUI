import{w as i,b as s,j as r}from"./iframe-DvsMcRqO.js";import{D as l,C as n}from"./constants-DdkjnEgz.js";import{g as c}from"./mock-BznupqUM.js";import{A as u}from"./Avatar-ZT3wy4qo.js";import{G as d}from"./Group-CqteXIEy.js";import{a as C,C as x}from"./Cell-8cassXI6.js";import"./preload-helper-Dp1pzeXC.js";import"./ImageBase-CcOjubak.js";import"./Clickable-DquLH6Yl.js";import"./useFocusVisibleClassName-D7HD7T4V.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-C13bCicO.js";import"./useColorScheme-Bl3NVSSg.js";import"./InputUtils-D1AbCbBE.js";import"./useFocusWithin-Bvi6Sdqy.js";import"./useIsClient-BccSIQM3.js";import"./useConfigDirection-CN1nmZoK.js";import"./online_mobile_12-pFagfEAZ.js";import"./SvgIconRootV2-Co4m-cY3.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-BnZcEJ_G.js";import"./Removable-B20LGpmh.js";import"./children-lVZQ7uKR.js";import"./IconButton-B-myA0wM.js";import"./Tappable-Dogw4jpa.js";import"./VisuallyHidden-BGLO0lAS.js";import"./useGlobalEventListener-BdJfJj1z.js";import"./useEventListener-BkrsSu0A.js";import"./cancel_24-CxtMKOmC.js";import"./SimpleCell-Cc4B-ydZ.js";import"./Headline-CDYdreGb.js";import"./Subhead-Bc3iAQV-.js";import"./chevron_compact_right_24-B3rJ9RFm.js";import"./chevron_16-BxodZLo_.js";import"./AdaptiveIconRenderer-BgTnNLug.js";import"./reorder_ios_24-Bjz4Yiy0.js";import"./check_box_on_24-gtYbFFHx.js";import"./check_circle_on_24-D_xf0Bvx.js";import"./constants-CtEIZ0Vq.js";const pr={title:"Buttons/Cell/Checkbox",component:C,parameters:{...n,...l},decorators:[i,s]},o={args:{defaultChecked:!0},decorators:[(p,a)=>r.jsx(d,{children:r.jsx(x,{Component:"label",before:r.jsx(u,{src:c("user_xyz")}),after:r.jsx(p,{...a.args}),children:"Игорь Федоров"})})]};var t,e,m;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...(m=(e=o.parameters)==null?void 0:e.docs)==null?void 0:m.source}}};const ar=["Playground"];export{o as Playground,ar as __namedExportsOrder,pr as default};
