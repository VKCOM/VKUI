import{r as a,s as A4,av as E,K as T,ao as g4,aw as v4,ax as q4,a4 as K,ay as _,az as k4,j as h,R as V4,aA as M4,aB as R4}from"./iframe-BdXaAE5r.js";import{N as S4,n as N4,i as o,u as _4,a as n4,b as l4,C as t4,c as s4}from"./CalendarHeader-Cptk8zp3.js";import{u as x4}from"./useEnsuredControl-dQkhshwS.js";function H4({focusedDay:t,value:s,setFocusedDay:i,viewDates:[r,c],setViewDate:y}){const[D,p]=a.useState(),[d,m]=a.useState(),b=a.useCallback((n,A)=>{const C=A4(n);if(C){if(S4.includes(C)){n.preventDefault();const l=N4(t??s?.[0],C);l&&!E(l,r)&&!E(l,c)&&y(l),A?E(l,r)?p(l):l>r&&m(l):E(l,c)?m(l):l<c&&p(l),i(l);return}if(C===T.TAB){i(void 0),A?p(t):m(t);return}(C===T.ENTER||C===T.SPACE)&&g4(n.target)&&(n.preventDefault(),n.target.click?.())}},[t,s,r,c,i,y]),k=a.useCallback(n=>{b(n,!0)},[b]),x=a.useCallback(n=>{b(n,!1)},[b]),H=a.useCallback(n=>{E(r,n)&&(!D||!o(D,n))&&p(n),E(c,n)&&(!d||!o(d,n))&&m(n)},[r,D,d,c]);return{focusableDayOnFirstCalendar:D,focusableDayOnSecondCalendar:d,handleFirstCalendarKeyDown:k,handleSecondCalendarKeyDown:x,handleDayFocus:H}}function r4({value:t,focusableDayOnFirstCalendar:s,focusableDayOnSecondCalendar:i,viewDate:r,isDayActive:c}){const y=!!(t&&(t[0]&&E(t[0],r)||t[1]&&E(t[1],r))),D=!!(s&&E(s,r)||i&&E(i,r));return a.useCallback(d=>D?!!(s&&o(s,d)||i&&o(i,d)):y?c(d):o(v4(r),d),[D,y,r,c,s,i])}const I4="_host_laqyo_1",T4="_inner_laqyo_14",K4="_header_laqyo_24",q={host:I4,inner:T4,header:K4},o4=(t,s)=>!s?.[0]||!s[1]?!1:R4(t,[K(s[0]),_(s[1])]),i4=({value:t,defaultValue:s,onChange:i,disablePast:r,disableFuture:c,shouldDisableDate:y,weekStartsOn:D=M4,disablePickers:p,prevMonthLabel:d="Предыдущий месяц",nextMonthLabel:m="Следующий месяц",changeMonthLabel:b="Изменить месяц",changeYearLabel:k="Изменить год","aria-label":x="Календарь",prevMonthIcon:H,nextMonthIcon:n,listenDayChangesForUpdate:A,renderDayContent:C,dayTestId:l,leftPartHeaderTestsData:d4,rightPartHeaderTestsData:c4,getRootRef:D4,...F4})=>{const E4=a.useCallback(u=>i?.(u||void 0),[i]),[e,P]=x4({value:t,defaultValue:s,onChange:E4}),{viewDate:g,setViewDate:V,setPrevMonth:C4,setNextMonth:B4,focusedDay:M,setFocusedDay:I,isDayFocused:L,isDayDisabled:j,isMonthDisabled:O,isYearDisabled:w}=_4({value:e,disableFuture:c,disablePast:r,shouldDisableDate:y}),[f,v]=a.useState(),R=q4(g,1),{focusableDayOnFirstCalendar:Y,focusableDayOnSecondCalendar:U,handleFirstCalendarKeyDown:p4,handleSecondCalendarKeyDown:f4,handleDayFocus:z}=H4({focusedDay:M,setFocusedDay:I,value:e,viewDates:[g,R],setViewDate:V}),S=a.useCallback(u=>{const B=!e||e[0]===null&&e[1]===null,h4=e&&!!e[0]&&!!e[1];if(B||h4)return[u,null];const[F]=e;return F&&o(u,F)?[K(F),_(F)]:F&&u<F?[K(u),_(F)]:F&&u>F?[F,_(u)]:e},[e]),G=a.useCallback(u=>{P(S(u)),v(void 0)},[P,S]),W=a.useCallback(u=>o4(u,e),[e]),N=a.useCallback(u=>!!(e?.[0]&&o(u,e[0])||e?.[1]&&o(u,e[1])),[e]),J=a.useCallback((u,B)=>!!(n4(u,B)||e?.[1]&&o(u,e[1])),[e]),Q=a.useCallback((u,B)=>!!(n4(u,B)||f?.[1]&&o(u,f[1])),[f]),X=a.useCallback((u,B)=>!!(l4(u,B)||e?.[0]&&o(u,e[0])),[e]),Z=a.useCallback((u,B)=>!!(l4(u,B)||f?.[0]&&o(u,f[0])),[f]),$=a.useCallback(u=>v(S(u)),[v,S]),u4=a.useCallback(()=>v(void 0),[v]),e4=a.useCallback(u=>o4(u,f),[f]),y4=a.useCallback(u=>V(k4(u)),[V]),m4=r4({value:e,focusableDayOnFirstCalendar:Y,focusableDayOnSecondCalendar:U,viewDate:g,isDayActive:N}),b4=r4({value:e,focusableDayOnFirstCalendar:Y,focusableDayOnSecondCalendar:U,viewDate:R,isDayActive:N}),a4=a.useCallback(u=>{M&&o(M,u)||(I(u),z(u))},[M,z,I]);return h.jsxs(V4,{"aria-label":x,...F4,baseClassName:q.host,getRootRef:D4,children:[h.jsxs("div",{className:q.inner,children:[h.jsx(t4,{viewDate:g,onChange:V,nextMonthHidden:!0,onPrevMonth:C4,disablePickers:p,className:q.header,prevMonthLabel:d,nextMonthLabel:m,changeMonthLabel:b,changeYearLabel:k,prevMonthIcon:H,isMonthDisabled:O,isYearDisabled:w,...d4}),h.jsx(s4,{viewDate:g,value:e,weekStartsOn:D,onKeyDown:p4,onDayFocus:a4,isDayFocused:L,isDayFocusable:m4,onDayChange:G,isDaySelected:W,isDayActive:N,isDaySelectionEnd:J,isDaySelectionStart:X,isDayHinted:e4,onDayEnter:$,onDayLeave:u4,isHintedDaySelectionEnd:Q,isHintedDaySelectionStart:Z,isDayDisabled:j,listenDayChangesForUpdate:A,renderDayContent:C,dayTestId:l})]}),h.jsxs("div",{className:q.inner,children:[h.jsx(t4,{viewDate:R,onChange:y4,prevMonthHidden:!0,onNextMonth:B4,disablePickers:p,className:q.header,prevMonthLabel:d,nextMonthLabel:m,changeMonthLabel:b,changeYearLabel:k,nextMonthIcon:n,isMonthDisabled:O,isYearDisabled:w,...c4}),h.jsx(s4,{viewDate:R,value:e,weekStartsOn:D,onKeyDown:f4,onDayFocus:a4,isDayFocused:L,isDayFocusable:b4,onDayChange:G,isDaySelected:W,isDayActive:N,isDaySelectionEnd:J,isDaySelectionStart:X,isDayHinted:e4,onDayEnter:$,onDayLeave:u4,isHintedDaySelectionEnd:Q,isHintedDaySelectionStart:Z,isDayDisabled:j,listenDayChangesForUpdate:A,renderDayContent:C,dayTestId:l})]})]})};try{i4.displayName="CalendarRange",i4.__docgenInfo={description:"",displayName:"CalendarRange",props:{value:{defaultValue:null,description:"Текущий выбранный промежуток.",name:"value",required:!1,type:{name:"DateRangeType | null"}},defaultValue:{defaultValue:null,description:"Начальный промежуток при монтировании.",name:"defaultValue",required:!1,type:{name:"DateRangeType | null"}},disablePast:{defaultValue:null,description:"Запрещает выбор даты в прошлом.\nПрименяется, если не заданы `shouldDisableDate` и `disableFuture`.",name:"disablePast",required:!1,type:{name:"boolean"}},disableFuture:{defaultValue:null,description:"Запрещает выбор даты в будущем.\nПрименяется, если не задано `shouldDisableDate`.",name:"disableFuture",required:!1,type:{name:"boolean"}},disablePickers:{defaultValue:null,description:"Отключает селекторы выбора месяца/года.",name:"disablePickers",required:!1,type:{name:"boolean"}},changeDayLabel:{defaultValue:null,description:`\`aria-label\` для изменения дня.
@deprecated Since 7.4.0.

Будет удалeно в **VKUI v8**. Использовалось для задания aria-label для контейнера дней в календаре.
Теперь этот контейнер является таблицей (с помощью role="grid") и
в aria-label рендерится текущий открытый в календаре месяц и год.`,name:"changeDayLabel",required:!1,type:{name:"string"}},weekStartsOn:{defaultValue:{value:"1"},description:"День недели, с которого начинается неделя.",name:"weekStartsOn",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"},{value:"2"},{value:"3"},{value:"4"},{value:"5"},{value:"6"}]}},onChange:{defaultValue:null,description:"Обработчик изменения выбранного промежутка.",name:"onChange",required:!1,type:{name:"((value: DateRangeType) => void)"}},shouldDisableDate:{defaultValue:null,description:"Функция для проверки запрета выбора даты.",name:"shouldDisableDate",required:!1,type:{name:"((value: Date) => boolean)"}},onClose:{defaultValue:null,description:"@deprecated Свойство не используется.",name:"onClose",required:!1,type:{name:"(() => void)"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},prevMonthLabel:{defaultValue:{value:"Предыдущий месяц"},description:"`aria-label` для кнопки предыдущего месяца.",name:"prevMonthLabel",required:!1,type:{name:"string"}},nextMonthLabel:{defaultValue:{value:"Следующий месяц"},description:"`aria-label` для кнопки следующего месяца.",name:"nextMonthLabel",required:!1,type:{name:"string"}},changeMonthLabel:{defaultValue:{value:"Изменить месяц"},description:"`aria-label` для селектора месяца.",name:"changeMonthLabel",required:!1,type:{name:"string"}},changeYearLabel:{defaultValue:{value:"Изменить год"},description:"`aria-label` для селектора года.",name:"changeYearLabel",required:!1,type:{name:"string"}},prevMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки предыдущего месяца.",name:"prevMonthIcon",required:!1,type:{name:"ReactNode"}},nextMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки следующего месяца.",name:"nextMonthIcon",required:!1,type:{name:"ReactNode"}},listenDayChangesForUpdate:{defaultValue:null,description:"Следить за изменениями дней для обновления UI.",name:"listenDayChangesForUpdate",required:!1,type:{name:"boolean"}},renderDayContent:{defaultValue:null,description:"Кастомизация отображения содержимого дня.",name:"renderDayContent",required:!1,type:{name:"((day: Date) => ReactNode)"}},dayTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дня в календаре.",name:"dayTestId",required:!1,type:{name:"string | ((day: Date) => string)"}},leftPartHeaderTestsData:{defaultValue:null,description:"Передает атрибуты `data-testid` для интерактивных элементов в заголовке календаря в левой части.",name:"leftPartHeaderTestsData",required:!1,type:{name:"CalendarHeaderTestsProps"}},rightPartHeaderTestsData:{defaultValue:null,description:"Передает атрибуты `data-testid` для интерактивных элементов в заголовке календаря в правой части.",name:"rightPartHeaderTestsData",required:!1,type:{name:"CalendarHeaderTestsProps"}}}}}catch{}export{i4 as C};
