import{w as e,b as p,j as r}from"./iframe-DvQ0hW0I.js";import{D as a,C as i}from"./constants-DdkjnEgz.js";import{g as s}from"./mock-CiudtyON.js";import{A as l}from"./Avatar-BTwGZh-N.js";import{G as n}from"./Group-DlJj6tsg.js";import{a as c,C as u}from"./Cell-BAZKofZQ.js";import"./preload-helper-PPVm8Dsz.js";import"./ImageBase-w-7-HB2A.js";import"./Clickable-CBovrC6X.js";import"./useFocusVisible-B22Xi0Zg.js";import"./useFocusVisibleClassName-DuyMNLO7.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-DWb_Z3tD.js";import"./useColorScheme-Du5ZuGtY.js";import"./InputUtils-BSmatczf.js";import"./useFocusWithin-C0XX_iqt.js";import"./useIsClient-DWoS3R9Q.js";import"./useConfigDirection-DmTY1Se6.js";import"./online_mobile_12-C81mBZXT.js";import"./SvgIconRootV2-L_sEShSp.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-DYSqrBFj.js";import"./Removable-B6FxApdQ.js";import"./children-BdLlg6DR.js";import"./IconButton-Dmx4oOAb.js";import"./Tappable-CzBKs2NQ.js";import"./VisuallyHidden-CGlAvVNH.js";import"./useGlobalEventListener-Cq3tChGi.js";import"./useEventListener-BWoYhQmZ.js";import"./cancel_24-BcD8qa0A.js";import"./SimpleCell-B1KXyTvt.js";import"./Headline-U_eDzwn1.js";import"./Subhead-DE0FovKO.js";import"./chevron_compact_right_24-CrJLC7s5.js";import"./chevron_16-m8pRWD8o.js";import"./AdaptiveIconRenderer-Co7qE9ki.js";import"./reorder_ios_24-BZR57aXa.js";import"./check_box_on_24-DzSBkyrV.js";import"./check_circle_on_24-DystyaVO.js";import"./constants-CtEIZ0Vq.js";const mr={title:"Buttons/Cell/Checkbox",component:c,parameters:{...i,...a},decorators:[e,p]},o={args:{defaultChecked:!0},decorators:[(t,m)=>r.jsx(n,{children:r.jsx(u,{Component:"label",before:r.jsx(l,{src:s("user_xyz")}),after:r.jsx(t,{...m.args}),children:"Игорь Федоров"})})]};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...o.parameters?.docs?.source}}};const er=["Playground"];export{o as Playground,er as __namedExportsOrder,mr as default};
