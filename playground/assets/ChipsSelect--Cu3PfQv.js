import{j as h,r as o,l as yu,v as Vu,i as T4,h as N4,K as N}from"./iframe-BdXaAE5r.js";import{a as bu}from"./useGlobalOnClickOutside-DjhN-IgT.js";import{d as C4,D as vu}from"./DropdownIcon-8qOBQz0J.js";import{u as Ou,g as B4,a as A4,D as M4,b as H4,c as m4,t as gu,C as _u,r as qu}from"./useChipsInput-DK4aBw31.js";import{C as Iu}from"./CustomSelectDropdown-B1W3rkKd.js";import{C as U4}from"./CustomSelectOption-C_1P28cN.js";import{F as Ru}from"./Footnote-ByXPLsYQ.js";import{b as z}from"./type_checkers-CVMjkZjG.js";function W4(u,n){if(u===n)return!0;if(u==null||n==null||!z(u)&&!z(n))return u!==u&&n!==n;if(z(u)&&z(n)){if(Object.keys(u).length!==Object.keys(n).length)return!1;for(var l in u)if(u.hasOwnProperty(l)&&n.hasOwnProperty(l)){if(!W4(u[l],n[l]))return!1}else return!1;return!0}return!1}const h4="highlight",y4="Ничего не найдено",F4="next",x4="prev",D4=u=>h.jsx(U4,{...u}),Y=u=>u&&"actionText"in u,J=u=>u&&"placeholder"in u,O=u=>!Y(u)&&!J(u);try{D4.displayName="renderOptionDefault",D4.__docgenInfo={description:"",displayName:"renderOptionDefault",props:{description:{defaultValue:null,description:"Добавляет описание под основным блоком.",name:"description",required:!1,type:{name:"ReactNode"}},before:{defaultValue:null,description:"Вставляет элемент в начало блока перед основным контентом.\nНапример, можно передать компонент `Avatar`, `Icon<Name>` или другие изображения.",name:"before",required:!1,type:{name:"ReactNode"}},after:{defaultValue:null,description:"Вставляет элемент в конец блока после основного контента.\nНапример, можно передать компонент `Avatar`, `Icon<Name>` или другие изображения.",name:"after",required:!1,type:{name:"ReactNode"}},hierarchy:{defaultValue:null,description:"Позволяет создавать вложенность.",name:"hierarchy",required:!1,type:{name:"number"}},selected:{defaultValue:null,description:"Включает состояние выбранного элемента списка.",name:"selected",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Включает состояние наведения.",name:"hovered",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Включает состояние фокуса.",name:"focused",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Блокирует весь блок.\n\n> ⚠️  Важно: если CustomSelectOption используется внутри [Select](https://vkui.io/components/select), [CustomSelect](https://vkui.io/components/custom-select) или [ChipsSelect](https://vkui.io/components/chips-select), то свойство явно должно выставляться только через структуру `options`.\n> Запрещается выставлять `disabled` проп опциям в обход `options`, иначе [CustomSelect](https://vkui.io/components/custom-select) и [ChipsSelect](https://vkui.io/components/chips-select) не будут знать об актуальном состоянии\nопции.",name:"disabled",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}try{Y.displayName="isCreateNewOptionPreset",Y.__docgenInfo={description:"",displayName:"isCreateNewOptionPreset",props:{value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}},actionText:{defaultValue:null,description:"",name:"actionText",required:!0,type:{name:"any"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"any"}}}}}catch{}try{J.displayName="isEmptyOptionPreset",J.__docgenInfo={description:"",displayName:"isEmptyOptionPreset",props:{actionText:{defaultValue:null,description:"",name:"actionText",required:!0,type:{name:"any"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"any"}},value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{O.displayName="isNotServicePreset",O.__docgenInfo={description:"",displayName:"isNotServicePreset",props:{actionText:{defaultValue:null,description:"",name:"actionText",required:!0,type:{name:"any"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!0,type:{name:"any"}},value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}const wu=({disabled:u,delimiter:n,value:l,defaultValue:r,onChange:s,getOptionLabel:C=B4,getOptionValue:B=A4,getNewOptionData:y=H4,inputValue:_,defaultInputValue:S=m4,onInputChange:A,creatable:f=!1,emptyText:F=y4,filterFn:d=C4,sortFn:P=!1,selectedBehavior:k=h4,options:L=M4,onClose:H,onOpen:U})=>{const{value:q,inputValue:I,onInputChange:R,...Q}=Ou({value:l,defaultValue:r,onChange:s,getOptionValue:B,getOptionLabel:C,getNewOptionData:y,inputValue:_,defaultInputValue:S,onInputChange:A,disabled:u,delimiter:n}),[V,Z]=o.useState(!1),[u4,e4]=o.useState(()=>V?S4({value:q,getOptionValue:B,getOptionLabel:C,inputValue:I,emptyText:F,creatable:f,filterFn:d,sortFn:P,options:L,selectedBehavior:k}):[]),[b,W]=o.useState(0),[t4,n4]=o.useState(null),w=o.useCallback(g=>{g?U?.():H?.(),Z(g)},[U,H]),a4=o.useCallback(g=>{R(g,!!f),V||(w(!0),W(0))},[R,f,V,w]);return yu(function(){V&&e4(T=>{const j=S4({value:q,getOptionValue:B,getOptionLabel:C,inputValue:I,emptyText:F,creatable:f,filterFn:d,sortFn:P,options:L,selectedBehavior:k});return W4(T,j)?T:j})},[V,q,C,B,I,L,f,k,d,P]),{...Q,value:q,inputValue:I,onInputChange:a4,options:u4,opened:V,setOpened:w,focusedOption:t4,focusedOptionIndex:b,setFocusedOption:n4,setFocusedOptionIndex:W}};function S4({value:u,getOptionValue:n=A4,getOptionLabel:l=B4,inputValue:r=m4,emptyText:s=y4,creatable:C=!1,sortFn:B=!1,filterFn:y=C4,options:_=M4,selectedBehavior:S=h4}){const A=y?_.filter(F=>y(r,F,l)):_;if(A.length===0)return r!==m4&&typeof C=="string"?[{actionText:C}]:[{placeholder:s}];B&&A.sort((F,d)=>B(F,d,r));const f=gu(A,n,l);if(S==="hide"){const F=u.map(d=>d.value);return f.filter(d=>O(d)?!F.includes(d.value):!1)}return f}const Tu="_host_h3n6h_1",Nu="_empty_h3n6h_5",xu="_popDown_h3n6h_12",Su="_popUp_h3n6h_17",Pu="_dropdownIcon_h3n6h_22",ku="_dropdownIconWithOffset_h3n6h_26",x={host:Tu,empty:Nu,popDown:xu,popUp:Su,dropdownIcon:Pu,dropdownIconWithOffset:ku},P4=(u=[],n=-1)=>n>=u.length-1?-1:u.findIndex((l,r)=>r>n&&(!O(l)||!l.disabled)),k4=(u=[],n=u.length)=>{let l=-1;if(n<=0)return l;for(let r=n-1;r>=0;r--){let s=u[r];if(!O(s)||!s.disabled){l=r;break}}return l},L4=({getRootRef:u,className:n,status:l="default",icon:r,onChangeStart:s,options:C,placement:B="bottom",closeAfterSelect:y=!0,selectedBehavior:_=h4,emptyText:S=y4,creatable:A=!1,fetching:f=!1,dropdownAutoWidth:F,forceDropdownPortal:d,noMaxHeight:P=!1,filterFn:k=C4,sortFn:L=!1,dropdownTestId:H,onClose:U,onOpen:q,overscrollBehavior:I,renderDropdown:R,getRef:Q,value:V,defaultValue:Z,inputValue:u4,defaultInputValue:e4,getOptionValue:b=A4,getOptionLabel:W=B4,getNewOptionData:t4=H4,renderChip:n4=qu,renderOption:w=D4,onChange:a4,onInputChange:g,dropdownOffsetDistance:T=0,allowClearButton:j,clearButtonTestId:j4,delimiter:K4,chipsListLabel:$4,disabled:G4,readOnly:X4,id:z4,onFocus:Y4,onBlur:J4,onKeyDown:Q4,slotProps:V4,...Z4})=>{const{getRootRef:uu,value:eu,defaultValue:tu,onChange:nu,disabled:b4,readOnly:K,id:v4,onFocus:O4,onBlur:g4,onKeyDown:_4,...au}=Vu({getRootRef:Q,value:u4,defaultValue:e4,onChange:g,disabled:G4,readOnly:X4,id:z4,onFocus:Y4,onBlur:J4,onKeyDown:Q4},V4?.input),{value:$,addOptionFromInput:l4,addOption:o4,removeOption:lu,clearOptions:ou,inputRef:ru,inputValue:G,clearInput:r4,onInputChange:iu,options:m,opened:i,setOpened:D,focusedOption:i4,focusedOptionIndex:E,setFocusedOption:s4,setFocusedOptionIndex:v}=wu({value:V,defaultValue:Z,onChange:a4,getOptionValue:b,getOptionLabel:W,getNewOptionData:t4,inputValue:eu,defaultInputValue:tu,onInputChange:nu,options:C,emptyText:S,creatable:A,filterFn:k,sortFn:L,selectedBehavior:_,onClose:U,onOpen:q,disabled:b4,delimiter:K4}),d4=T4(u),su=T4(uu,ru),[p4,q4]=o.useState(B),du=o.useCallback(e=>{e.startsWith("top")?q4("top"):e.startsWith("bottom")&&q4("bottom")},[]),X=o.useId(),pu=E!==null?`${X}-${E}`:void 0,E4=o.useRef(null),Eu=e=>{O4&&O4(e),K||(D(!0),v(null))},cu=e=>{g4&&g4(e),!K&&!e.defaultPrevented&&!A&&e.preventDefault()},c4=o.useRef([]).current,fu=(e,t=!1)=>{const a=E4.current,p=c4[e];if(!p||!a)return;const c=a.offsetHeight,w4=a.scrollTop,M=p.offsetTop,f4=p.offsetHeight;t?a.scrollTop=M-c/2+f4/2:M+f4>c+w4?a.scrollTop=M-c+f4:M<w4&&(a.scrollTop=M)},Fu=(e,t)=>{if(e===t)return;const a=m[e];O(a)&&a.disabled||(fu(e),v(e))},I4=(e,t)=>{let a=e===null?-1:e;if(t===F4){const p=P4(m,a);a=p===-1?P4(m):p}else if(t===x4){const p=k4(m,a);a=p===-1?k4(m):p}Fu(a,E)},mu=e=>{if(_4&&_4(e),!(e.defaultPrevented||K))switch(e.key){case N.ARROW_UP:case N.ARROW_DOWN:e.preventDefault(),i?I4(E,e.key===N.ARROW_UP?x4:F4):(D(!0),I4(null,F4));break;case N.ENTER:{if(!i)break;if(E!=null){const t=m[E];if(t&&O(t)){e.preventDefault(),s&&s(e,t),o4(t),v(null),r4(),y&&D(!1);break}}A||e.preventDefault();break}case N.ESCAPE:case N.TAB:i&&D(!1)}};o.useEffect(()=>{if(E===null)s4(null);else{const e=m[E];e&&O(e)&&s4(e)}},[m,E,s4]);const Du=o.useCallback(()=>{v(null)},[v]),Cu=o.useCallback(()=>{D(!1)},[D]);bu("mousedown",Cu,i?d4:null,i?E4:null);const Bu=o.useCallback(e=>{e.preventDefault(),D(!i)},[i,D]),Au=o.useMemo(()=>{const e=m.map((t,a)=>{const p=`${X}-${a}`;return J(t)?h.jsx(Ru,{className:x.empty,children:t.placeholder},"empty-text"):Y(t)?h.jsx(U4,{id:p,hovered:E===a,onMouseDown:()=>l4(G),onMouseEnter:()=>v(a),children:t.actionText},"create-new-option"):h.jsx(o.Fragment,{children:w({id:p,disabled:t.disabled,hovered:i4?b(t)===b(i4):!1,children:t.label,selected:!!$.find(c=>b(c)===b(t)),getRootRef(c){c&&(c4[a]=c)},onMouseDown(c){t.disabled||(s&&s(c,t),c.defaultPrevented||(y&&D(!1),o4(t),r4()))},onMouseEnter(){v(a)}},t)},`${typeof t.value}-${t.value}`)});return R?R({defaultDropdownContent:e}):e},[o4,l4,c4,r4,y,X,i4,E,b,G,s,m,R,w,v,D,$]),hu=o.useMemo(()=>i&&T===0&&(p4.includes("top")?x.popUp:x.popDown)||void 0,[T,i,p4]),R4=j&&(!!$.length||!!G.length);return h.jsxs(h.Fragment,{children:[h.jsx(_u,{clearButtonShown:R4,clearButtonTestId:j4,getRootRef:d4,className:N4(x.host,hu,n),status:l,after:r||h.jsx(vu,{opened:i,onClick:Bu,className:N4(x.dropdownIcon,R4&&x.dropdownIconWithOffset)}),value:$,onAddChipOption:l4,onRemoveChipOption:lu,renderChip:n4,onClear:ou,chipsListLabel:$4,slotProps:{...V4,input:{role:"combobox","aria-expanded":i,"aria-autocomplete":"list","aria-activedescendant":i?pu:void 0,"aria-haspopup":"listbox",getRootRef:su,value:G,onChange:iu,disabled:b4,readOnly:K,id:v4,onFocus:Eu,onBlur:cu,onKeyDown:mu,...au}},...Z4}),i&&h.jsx(Iu,{"data-testid":H,targetRef:d4,placement:p4,scrollBoxRef:E4,onPlacementChange:du,onMouseLeave:Du,fetching:f,autoWidth:F,forcePortal:d,noMaxHeight:P,offsetDistance:T,overscrollBehavior:I,id:X,role:"listbox","aria-labelledby":v4,children:Au})]})};try{L4.displayName="ChipsSelect",L4.__docgenInfo={description:"",displayName:"ChipsSelect",props:{placement:{defaultValue:{value:"bottom"},description:"Расположение выпадающего списка.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'}]}},fetching:{defaultValue:{value:"false"},description:"Отрисовка Spinner вместо списка опций в выпадающем списке.",name:"fetching",required:!1,type:{name:"boolean"}},closeAfterSelect:{defaultValue:{value:"true"},description:"Закрытие выпадающего списка после выбора элемента.",name:"closeAfterSelect",required:!1,type:{name:"boolean"}},dropdownAutoWidth:{defaultValue:null,description:"Ширина раскрывающегося списка зависит от контента.",name:"dropdownAutoWidth",required:!1,type:{name:"boolean"}},forceDropdownPortal:{defaultValue:null,description:"Принудительно использовать портал.",name:"forceDropdownPortal",required:!1,type:{name:"boolean"}},dropdownTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дропдауна.",name:"dropdownTestId",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"Иконка раскрывающегося списка.",name:"icon",required:!1,type:{name:"ReactNode"}},addOnBlur:{defaultValue:null,description:"Добавляет значение в список на событие `onBlur` (использовать вместе с `creatable`).",name:"addOnBlur",required:!1,type:{name:"boolean"}},noMaxHeight:{defaultValue:{value:"false"},description:"Отключает максимальную высоту по умолчанию.",name:"noMaxHeight",required:!1,type:{name:"boolean"}},renderOption:{defaultValue:{value:`(props: CustomSelectOptionProps): React.ReactNode => (
  <CustomSelectOption {...props} />
)`},description:"Функция для отрисовки кастомной опции в выпадающем списке.",name:"renderOption",required:!1,type:{name:"((props: CustomSelectOptionProps, option: Option) => ReactNode)"}},renderDropdown:{defaultValue:null,description:"Рендер-проп для кастомного рендера содержимого дропдауна.\nВ `defaultDropdownContent` содержится список опций.",name:"renderDropdown",required:!1,type:{name:"(({ defaultDropdownContent, }: { defaultDropdownContent: ReactNode; }) => ReactNode)"}},onChangeStart:{defaultValue:null,description:"Событие срабатывающее перед `onChange`.",name:"onChangeStart",required:!1,type:{name:"((event: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>, option: Option) => void)"}},dropdownOffsetDistance:{defaultValue:{value:"0"},description:"Отступ от выпадающего списка.",name:"dropdownOffsetDistance",required:!1,type:{name:"number"}},allowClearButton:{defaultValue:null,description:"Если `true`, то справа будет отображаться кнопка для очистки значения.",name:"allowClearButton",required:!1,type:{name:"boolean"}},getRef:{defaultValue:null,description:"@deprecated Since 7.9.0. Вместо этого используйте `slotProps={ input: { getRootRef: ... } }`.",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},slotProps:{defaultValue:null,description:"Свойства, которые можно прокинуть внутрь компонента:\n- `root`: свойства для прокидывания в корень компонента;\n- `input`: свойства для прокидывания в поле ввода.",name:"slotProps",required:!1,type:{name:"{ root?: (HTMLAttributes<HTMLDivElement> & HasRootRef<HTMLDivElement> & HasDataAttribute); input?: (InputHTMLAttributes<...> & ... 1 more ... & HasDataAttribute); } | undefined"}},renderChip:{defaultValue:{value:"Используется [Chip](#/Chip)"},description:"Render prop функция для возврата своего компонента.",name:"renderChip",required:!1,type:{name:"RenderChip<Option>"}},clearButtonShown:{defaultValue:null,description:"Показывать ли кнопку для очистки значения.",name:"clearButtonShown",required:!1,type:{name:"boolean"}},clearButtonTestId:{defaultValue:null,description:"(e2e) testId кнопки очистки.",name:"clearButtonTestId",required:!1,type:{name:"string"}},ClearButton:{defaultValue:null,description:"Кастомная кнопка для очистки значения.\nДолжна принимать обязательное свойство `onClick`.",name:"ClearButton",required:!1,type:{name:"ComponentType<FormFieldClearButtonProps>"}},chipsListLabel:{defaultValue:null,description:"`aria-label` для списка выбранных опций.",name:"chipsListLabel",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"Выбранные опции.",name:"value",required:!1,type:{name:"Option[]"}},inputValue:{defaultValue:null,description:"Значение поля ввода.",name:"inputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"Обработчик изменения значения в поле ввода.",name:"onInputChange",required:!1,type:{name:"OnInputChange"}},delimiter:{defaultValue:null,description:`Символ или строка, которая будет использоваться как разделитель для автоматического создания опций из текста, введенного в поле ввода.
Принимает:
- \`string\` - простая строка
- \`RegExp\` - регулярное выражение
- \`string[]\` - массив строк, по которым нужно разелять ввод.

Работает в двух сценариях:
1. При вводе разделителя - текст до разделителя автоматически преобразуется в новую опцию.
   Например, при \`delimiter=","\` ввод "опция1," создаст опцию "опция1".

2. При вставке из буфера обмена - если вставляемый текст содержит разделители,
   он будет автоматически разбит на несколько опций.
   Например, при \`delimiter=","\` вставка "опция1,опция2,опция3" создаст
   три отдельные опции: "опция1", "опция2" и "опция3".`,name:"delimiter",required:!1,type:{name:"string | RegExp | string[]"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},align:{defaultValue:null,description:"",name:"align",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},options:{defaultValue:null,description:"Список опций в выпадающем списке.",name:"options",required:!1,type:{name:"Option[]"}},creatable:{defaultValue:{value:"false"},description:"Возможность создавать чипы которых нет в списке:\n- `true` – добавление по кнопке Enter;\n- `<текст>` – помимо возможности добавления через Enter, в пункте меню появится кнопка с текстом.\nТекст для пункта, создающего чипы при нажатии, также отвечает за то, будет ли показан этот пункт\n(показывается после того как в списке не останется опций).",name:"creatable",required:!1,type:{name:"string | boolean"}},emptyText:{defaultValue:{value:"Ничего не найдено"},description:"Текст, который показывается если список опций пуст.",name:"emptyText",required:!1,type:{name:"string"}},selectedBehavior:{defaultValue:{value:"highlight"},description:"Показывать или скрывать уже выбранные опции.",name:"selectedBehavior",required:!1,type:{name:"enum",value:[{value:'"hide"'},{value:'"highlight"'}]}},filterFn:{defaultValue:null,description:"Функция для фильтрации опций в списке.",name:"filterFn",required:!1,type:{name:"false | FilterFn<Option>"}},sortFn:{defaultValue:{value:"false"},description:"Функция для сортировки опций в списке.",name:"sortFn",required:!1,type:{name:"false | SortFn<Option>"}},onClose:{defaultValue:null,description:"Будет вызвано в момент скрытия выпадающего списка.",name:"onClose",required:!1,type:{name:"VoidFunction"}},onOpen:{defaultValue:null,description:"Будет вызвано в момент открытия выпадающего списка.",name:"onOpen",required:!1,type:{name:"VoidFunction"}},getOptionValue:{defaultValue:null,description:"Селектор значения.",name:"getOptionValue",required:!1,type:{name:"GetOptionValue<Option>"}},getOptionLabel:{defaultValue:null,description:"Селектор пользовательского представления.",name:"getOptionLabel",required:!1,type:{name:"GetOptionLabel<Option>"}},getNewOptionData:{defaultValue:null,description:"Функция для создания новой опции.",name:"getNewOptionData",required:!1,type:{name:"GetNewOptionData<Option>"}},defaultValue:{defaultValue:null,description:"Выбранные опции по умолчанию.",name:"defaultValue",required:!1,type:{name:"Option[]"}},onChange:{defaultValue:null,description:"Обработчик изменения выбранных опций.",name:"onChange",required:!1,type:{name:"OnChange<Option>"}},defaultInputValue:{defaultValue:null,description:"Значение поля ввода по умолчанию.",name:"defaultInputValue",required:!1,type:{name:"string"}},status:{defaultValue:{value:"default"},description:"Статус отображения поля в форме.",name:"status",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"valid"'}]}},before:{defaultValue:null,description:"Добавляет иконку слева.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагирующая на нажатие.",name:"before",required:!1,type:{name:"ReactNode"}},mode:{defaultValue:null,description:"Режим отображения.\n\n- `default` — показывает фон, обводку и, при наличии, текст-подсказку.\n- `plain` — показывает только текст-подсказку.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"plain"'}]}},overscrollBehavior:{defaultValue:null,description:"Поведение overscroll, подробнее можно почитать в [документации](https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior).",name:"overscrollBehavior",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"auto"'},{value:'"contain"'}]}}}}}catch{}export{L4 as C};
