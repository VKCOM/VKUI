import{u as D,j as e,r as c,h as o}from"./iframe-BdXaAE5r.js";import{C as m}from"./CustomSelect-Cu036XGx.js";import{N as f}from"./NativeSelect-BsrUAl_n.js";const E=({children:r,className:n,...l})=>{const{options:i=[],searchable:B,emptyText:A,onInputChange:C,filterFn:v,popupDirection:y,renderOption:g,renderDropdown:V,fetching:b,onClose:h,onOpen:q,icon:T,ClearButton:S,allowClearButton:R,clearButtonTestId:I,dropdownOffsetDistance:w,dropdownAutoWidth:x,forceDropdownPortal:P,noMaxHeight:L,labelTextTestId:O,nativeSelectTestId:H,after:N,mode:M,pattern:_,minLength:k,maxLength:j,readOnly:K,getSelectInputRef:W,overscrollBehavior:U,beforeAlign:$,afterAlign:z,onInputKeyDown:G,accessible:J,fetchingCompletedLabel:Q,fetchingInProgressLabel:X,slotProps:t,...d}=l,{deviceType:u}=D(),s=d;return e.jsxs(c.Fragment,{children:[u.desktop&&e.jsx(m,{className:o(n,u.desktop.className),slotProps:t,...l}),u.mobile&&e.jsx(f,{className:o(n,u.mobile.className),slotProps:{select:t?.select,root:t?.root},...s,children:i.map(({label:p,value:a,disabled:F})=>e.jsx("option",{value:a,disabled:F,children:p},`${a}`))})]})};try{E.displayName="Select",E.__docgenInfo={description:"",displayName:"Select",props:{slotProps:{defaultValue:null,description:"Свойства, которые можно прокинуть внутрь компонента:\n- `root`: свойства для прокидывания в корень компонента;\n- `select`: свойства для прокидывания в нативный `select`;\n- `input`: свойства для прокидывания в нативный `input`.",name:"slotProps",required:!1,type:{name:'({ root?: (Omit<HTMLAttributes<HTMLDivElement>, "children"> & HasDataAttribute & HasRootRef<HTMLDivElement>); select?: (NativeHTMLSelectProps & ... 1 more ... & HasDataAttribute); } & { ...; }) | undefined'}},getSelectInputRef:{defaultValue:null,description:"@deprecated Since 7.9.0. Вместо этого используйте `slotProps={ input: { getRootRef: ... } }`.\n\nRef на внутрений компонент input.",name:"getSelectInputRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},searchable:{defaultValue:null,description:"Если `true`, то при нажатии на `CustomSelect` в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\nпроизводится по `option.label`.",name:"searchable",required:!1,type:{name:"boolean"}},emptyText:{defaultValue:null,description:"Текст, который будет отображен, если приходит пустой `options`.",name:"emptyText",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"Событие изменения текстового поля.",name:"onInputChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}},options:{defaultValue:null,description:"Список опций в списке.",name:"options",required:!0,type:{name:"OptionT[]"}},filterFn:{defaultValue:null,description:"Функция для кастомной фильтрации. По умолчанию поиск производится по `option.label`.",name:"filterFn",required:!1,type:{name:"false | FilterFn<OptionT>"}},popupDirection:{defaultValue:null,description:"Направление раскрытия выпадающего списка.",name:"popupDirection",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'}]}},renderOption:{defaultValue:null,description:"Рендер-проп для кастомного рендера опции.\nВ объекте аргумента приходят [свойства опции](https://vkui.io/components/custom-select#custom-select-option-api).\n\n> ⚠️  Важно: свойство опции `disabled` должно выставляться только через проп `options`.\n> Запрещается выставлять `disabled` проп опциям в обход `options`, иначе `CustomSelect` не будет знать об актуальном состоянии\nопции.",name:"renderOption",required:!1,type:{name:"((props: CustomSelectRenderOption<OptionT>) => ReactNode)"}},renderDropdown:{defaultValue:null,description:"Рендер-проп для кастомного рендера содержимого дропдауна.\nВ `defaultDropdownContent` содержится список опций в виде скроллящегося блока.",name:"renderDropdown",required:!1,type:{name:"(({ defaultDropdownContent, }: { defaultDropdownContent: ReactNode; }) => ReactNode)"}},fetching:{defaultValue:null,description:'Если `true`, то в дропдауне вместо списка опций рисуется спиннер. При переданных `renderDropdown` и `fetching: true`\n"победит" `renderDropdown`.',name:"fetching",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Обработчик закрытия выпадающего списка.",name:"onClose",required:!1,type:{name:"VoidFunction"}},onOpen:{defaultValue:null,description:"Обработчик открытия выпадающего списка.",name:"onOpen",required:!1,type:{name:"VoidFunction"}},icon:{defaultValue:null,description:"Иконка раскрывающегося списка.",name:"icon",required:!1,type:{name:"ReactNode"}},ClearButton:{defaultValue:null,description:"Кастомная кнопка для очистки значения.\nДолжна принимать обязательное свойство `onClick`.",name:"ClearButton",required:!1,type:{name:"ComponentType<CustomSelectClearButtonProps>"}},allowClearButton:{defaultValue:null,description:"Если `true`, то справа будет отображаться кнопка для очистки значения.",name:"allowClearButton",required:!1,type:{name:"boolean"}},clearButtonTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для кнопки очистки.",name:"clearButtonTestId",required:!1,type:{name:"string"}},dropdownOffsetDistance:{defaultValue:null,description:"Отступ от выпадающего списка.",name:"dropdownOffsetDistance",required:!1,type:{name:"number"}},dropdownAutoWidth:{defaultValue:null,description:"Ширина раскрывающегося списка зависит от контента.",name:"dropdownAutoWidth",required:!1,type:{name:"boolean"}},forceDropdownPortal:{defaultValue:null,description:"Использовать Portal для рендеринга выпадающего списка.",name:"forceDropdownPortal",required:!1,type:{name:"boolean"}},selectType:{defaultValue:null,description:"Тип отображения компонента.",name:"selectType",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"plain"'},{value:'"accent"'}]}},noMaxHeight:{defaultValue:null,description:"Отключает максимальную высоту по умолчанию.",name:"noMaxHeight",required:!1,type:{name:"boolean"}},labelTextTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для элемента, внутри которого отображается текст выбранной опции `CustomSelect` или плейсхолдер.",name:"labelTextTestId",required:!1,type:{name:"string"}},nativeSelectTestId:{defaultValue:null,description:"@deprecated Since 7.9.0. Вместо этого используйте `slotProps={ select: { 'data-testid': ... } }`.\n\nПередает атрибут `data-testid` для нативного элемента `select`.",name:"nativeSelectTestId",required:!1,type:{name:"string"}},onInputKeyDown:{defaultValue:null,description:"Обработчик события `keyDown` в поле ввода.",name:"onInputKeyDown",required:!1,type:{name:"((e: KeyboardEvent<Element>, isOpen: boolean) => void)"}},accessible:{defaultValue:null,description:"Включает режим в котором выбранное значение `CustomSelect` читается скринридерами корректно.\nВ данном режиме введенное в поле ввода значение не сбрасывается при потере фокуса.",name:"accessible",required:!1,type:{name:"boolean"}},fetchingInProgressLabel:{defaultValue:null,description:'Текстовая метка для индикации процесса загрузки данных для пользователей скринридерами. По умолчанию: `"Список опций загружается..."`.',name:"fetchingInProgressLabel",required:!1,type:{name:"string"}},fetchingCompletedLabel:{defaultValue:null,description:'Текстовая метка для индикации завершения процесса загрузки данных для пользователей скринридерами. По умолчанию: `"Загружено опций: ${options.length}"`.',name:"fetchingCompletedLabel",required:!1,type:{name:"string | ((optionsCount: number) => string)"}},placeholder:{defaultValue:null,description:"Текст-подсказка при отсутствии выбранного значения.",name:"placeholder",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Выбранное значение.\n\n> ⚠️  Важно: При прокидывании `undefined` компонент будет считаться `Uncontrolled`.\n>\n> Не используйте `undefined`, чтобы показать невыбранное состояние. Вместо этого используйте `null`.",name:"value",required:!1,type:{name:"SelectValue"}},defaultValue:{defaultValue:null,description:"См. `value`.",name:"defaultValue",required:!1,type:{name:"SelectValue"}},onChange:{defaultValue:null,description:`Обработчик, срабатывающий при изменении выбранного значения.
Вторым параметром прокидывается новое значение.

> ⚠️ Лучше использовать второй параметр при работе с компонентом.`,name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLSelectElement>, newValue: SelectValue) => void)"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},status:{defaultValue:null,description:"Статус отображения поля в форме.",name:"status",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"valid"'}]}},before:{defaultValue:null,description:"Добавляет иконку слева.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагирующая на нажатие.",name:"before",required:!1,type:{name:"ReactNode"}},multiline:{defaultValue:null,description:"Флаг для включения многострочного режима.",name:"multiline",required:!1,type:{name:"boolean"}},getRef:{defaultValue:null,description:"@deprecated Since 7.9.0. Вместо этого используйте `slotProps={ select: { getRootRef: ... } }`.",name:"getRef",required:!1,type:{name:"Ref<HTMLSelectElement>"}},align:{defaultValue:null,description:"",name:"align",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},after:{defaultValue:null,description:"Добавляет иконку справа.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагируюущая на нажатие.",name:"after",required:!1,type:{name:"ReactNode"}},mode:{defaultValue:null,description:"Режим отображения.\n\n- `default` — показывает фон, обводку и, при наличии, текст-подсказку.\n- `plain` — показывает только текст-подсказку.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"plain"'}]}},beforeAlign:{defaultValue:null,description:"Вертикальное выравнивание иконки слева.",name:"beforeAlign",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"center"'},{value:'"end"'}]}},afterAlign:{defaultValue:null,description:"Вертикальное выравнивание иконки справа.",name:"afterAlign",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"center"'},{value:'"end"'}]}},overscrollBehavior:{defaultValue:null,description:"Поведение overscroll, подробнее можно почитать в [документации](https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior).",name:"overscrollBehavior",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"auto"'},{value:'"contain"'}]}}}}}catch{}export{E as S};
