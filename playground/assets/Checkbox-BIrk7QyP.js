import{i as V,c as _,u as v,r as F,j as u,R as q,h as d,k}from"./iframe-Bz8JpgqB.js";import{h as g}from"./react_utils-CSZjvU4X.js";import{S as O,a as N}from"./SelectionControl-RCO_2tN9.js";import{V as M}from"./VisuallyHidden-Civmtkn4.js";import{I as T,a as j,b as z,c as L}from"./check_box_on_24-CqvgWjWx.js";import{I as H}from"./check_box_indetermanate_20-CCCwbpIX.js";import{T as Y}from"./Tappable-DGSycWIS.js";const S="_host_27ho6_1",w="_iconOn_27ho6_5",P="_iconIndeterminate_27ho6_6",$="_iconOff_27ho6_10",G="_input_27ho6_14",t={host:S,iconOn:w,iconIndeterminate:P,iconOff:$,input:G};function b(e,c){e.indeterminate=c}function A({className:e,style:c,getRootRef:m,getRef:f,indeterminate:o,defaultIndeterminate:r,onChange:s,IconOnCompact:E=T,IconOnRegular:D=j,IconOffCompact:p=z,IconOffRegular:B=L,IconIndeterminate:l=H,...i}){const a=V(f),C=_(),{sizeY:n}=v();F.useEffect(()=>{const y=o===void 0?r:o;a.current&&b(a.current,!!y)},[r,o,a]);const R=F.useCallback(y=>{r!==void 0&&o===void 0&&i.checked===void 0&&a.current&&b(a.current,!1),o!==void 0&&a.current&&b(a.current,!!o),s&&s(y)},[r,o,i.checked,s,a]);return u.jsxs(q,{baseClassName:t.host,className:e,style:c,getRootRef:m,children:[u.jsx(M,{...i,Component:"input",type:"checkbox",onChange:R,className:t.input,getRootRef:a}),C==="vkcom"?u.jsx(E,{className:t.iconOn}):u.jsxs(F.Fragment,{children:[n.compact&&u.jsx(E,{className:d(t.iconOn,n.compact.className)}),n.regular&&u.jsx(D,{className:d(t.iconOn,n.regular.className)})]}),C==="vkcom"?u.jsx(p,{className:t.iconOff}):u.jsxs(F.Fragment,{children:[n.compact&&u.jsx(p,{className:d(t.iconOff,n.compact.className)}),n.regular&&u.jsx(B,{className:d(t.iconOff,n.regular.className)})]}),C==="vkcom"?u.jsx(l,{width:20,height:20,className:t.iconIndeterminate}):u.jsxs(F.Fragment,{children:[n.compact&&u.jsx(l,{className:d(t.iconIndeterminate,n.compact.className),width:20,height:20}),n.regular&&u.jsx(l,{className:d(t.iconIndeterminate,n.regular.className),width:24,height:24})]})]})}try{A.displayName="CheckboxInput",A.__docgenInfo={description:"",displayName:"CheckboxInput",props:{indeterminate:{defaultValue:null,description:"Неопределенное состояние чекбокса.",name:"indeterminate",required:!1,type:{name:"boolean"}},defaultIndeterminate:{defaultValue:null,description:"Неопределенное состояние чекбокса по умолчанию.",name:"defaultIndeterminate",required:!1,type:{name:"boolean"}},IconOnCompact:{defaultValue:null,description:"Иконка для включенного состояния в компактном режиме.",name:"IconOnCompact",required:!1,type:{name:"CheckboxInputIconType"}},IconOnRegular:{defaultValue:null,description:"Иконка для включенного состояния в обычном режиме.",name:"IconOnRegular",required:!1,type:{name:"CheckboxInputIconType"}},IconOffCompact:{defaultValue:null,description:"Иконка для выключенного состояния в компактном режиме.",name:"IconOffCompact",required:!1,type:{name:"CheckboxInputIconType"}},IconOffRegular:{defaultValue:null,description:"Иконка для выключенного состояния в обычном режиме.",name:"IconOffRegular",required:!1,type:{name:"CheckboxInputIconType"}},IconIndeterminate:{defaultValue:null,description:"Иконка для неопределенного состояния.",name:"IconIndeterminate",required:!1,type:{name:"CheckboxInputIconType"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}}}}}catch{}const J="_host_xscvz_1",K="_withPadding_xscvz_9",Q="_sizeYCompact_xscvz_23",U="_sizeYNone_xscvz_29",h={host:J,withPadding:K,sizeYCompact:Q,sizeYNone:U},W={none:h.sizeYNone,compact:h.sizeYCompact};function x({children:e,className:c,style:m,getRootRef:f,description:o,hoverMode:r,activeMode:s,hasHover:E,hasActive:D,focusVisibleMode:p,titleAfter:B,noPadding:l,...i}){const{sizeY:a="none"}=k(),C=r||(l?"opacity":"background"),n=s||(l?"opacity":"background");return u.jsx(Y,{className:d(c,h.host,!l&&h.withPadding,a!=="regular"&&W[a]),style:m,disabled:i.disabled,getRootRef:f,hoverMode:C,activeMode:n,hasHover:E,hasActive:D,focusVisibleMode:p,Component:"label",children:u.jsx(A,{...i})})}try{x.displayName="CheckboxSimple",x.__docgenInfo={description:"",displayName:"CheckboxSimple",props:{description:{defaultValue:null,description:"Подпись под основным текстом.",name:"description",required:!1,type:{name:"ReactNode"}},titleAfter:{defaultValue:null,description:"Контент, идущий за основным текстом.",name:"titleAfter",required:!1,type:{name:"ReactNode"}},noPadding:{defaultValue:null,description:'Отключает отступы у чекбокса. При использовании этого свойства, значение по умолчанию для свойств `hoverMode` и `activeMode` становится `"opacity"`.',name:"noPadding",required:!1,type:{name:"boolean"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},indeterminate:{defaultValue:null,description:"Неопределенное состояние чекбокса.",name:"indeterminate",required:!1,type:{name:"boolean"}},defaultIndeterminate:{defaultValue:null,description:"Неопределенное состояние чекбокса по умолчанию.",name:"defaultIndeterminate",required:!1,type:{name:"boolean"}},IconOnCompact:{defaultValue:null,description:"Иконка для включенного состояния в компактном режиме.",name:"IconOnCompact",required:!1,type:{name:"CheckboxInputIconType"}},IconOnRegular:{defaultValue:null,description:"Иконка для включенного состояния в обычном режиме.",name:"IconOnRegular",required:!1,type:{name:"CheckboxInputIconType"}},IconOffCompact:{defaultValue:null,description:"Иконка для выключенного состояния в компактном режиме.",name:"IconOffCompact",required:!1,type:{name:"CheckboxInputIconType"}},IconOffRegular:{defaultValue:null,description:"Иконка для выключенного состояния в обычном режиме.",name:"IconOffRegular",required:!1,type:{name:"CheckboxInputIconType"}},IconIndeterminate:{defaultValue:null,description:"Иконка для неопределенного состояния.",name:"IconIndeterminate",required:!1,type:{name:"CheckboxInputIconType"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLLabelElement>"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}}}}}catch{}const X=({children:e,className:c,style:m,getRootRef:f,description:o,hoverMode:r,activeMode:s,hasHover:E,hasActive:D,focusVisibleMode:p,titleAfter:B,noPadding:l,...i})=>u.jsxs(O,{className:c,style:m,disabled:i.disabled,getRootRef:f,hoverMode:r,activeMode:s,hasHover:E,hasActive:D,focusVisibleMode:p,noPadding:l,children:[u.jsx(A,{...i}),u.jsx(N,{titleAfter:B,description:o,children:e})]}),I=e=>g(e.children)||g(e.description)?u.jsx(X,{...e}):u.jsx(x,{...e});I.Input=A;try{I.displayName="Checkbox",I.__docgenInfo={description:"",displayName:"Checkbox",props:{description:{defaultValue:null,description:"Подпись под основным текстом.",name:"description",required:!1,type:{name:"ReactNode"}},titleAfter:{defaultValue:null,description:"Контент, идущий за основным текстом.",name:"titleAfter",required:!1,type:{name:"ReactNode"}},noPadding:{defaultValue:null,description:'Отключает отступы у чекбокса. При использовании этого свойства, значение по умолчанию для свойств `hoverMode` и `activeMode` становится `"opacity"`.',name:"noPadding",required:!1,type:{name:"boolean"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},indeterminate:{defaultValue:null,description:"Неопределенное состояние чекбокса.",name:"indeterminate",required:!1,type:{name:"boolean"}},defaultIndeterminate:{defaultValue:null,description:"Неопределенное состояние чекбокса по умолчанию.",name:"defaultIndeterminate",required:!1,type:{name:"boolean"}},IconOnCompact:{defaultValue:null,description:"Иконка для включенного состояния в компактном режиме.",name:"IconOnCompact",required:!1,type:{name:"CheckboxInputIconType"}},IconOnRegular:{defaultValue:null,description:"Иконка для включенного состояния в обычном режиме.",name:"IconOnRegular",required:!1,type:{name:"CheckboxInputIconType"}},IconOffCompact:{defaultValue:null,description:"Иконка для выключенного состояния в компактном режиме.",name:"IconOffCompact",required:!1,type:{name:"CheckboxInputIconType"}},IconOffRegular:{defaultValue:null,description:"Иконка для выключенного состояния в обычном режиме.",name:"IconOffRegular",required:!1,type:{name:"CheckboxInputIconType"}},IconIndeterminate:{defaultValue:null,description:"Иконка для неопределенного состояния.",name:"IconIndeterminate",required:!1,type:{name:"CheckboxInputIconType"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLLabelElement>"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}}}}}catch{}try{I.Input.displayName="Checkbox.Input",I.Input.__docgenInfo={description:"",displayName:"Checkbox.Input",props:{indeterminate:{defaultValue:null,description:"Неопределенное состояние чекбокса.",name:"indeterminate",required:!1,type:{name:"boolean"}},defaultIndeterminate:{defaultValue:null,description:"Неопределенное состояние чекбокса по умолчанию.",name:"defaultIndeterminate",required:!1,type:{name:"boolean"}},IconOnCompact:{defaultValue:null,description:"Иконка для включенного состояния в компактном режиме.",name:"IconOnCompact",required:!1,type:{name:"CheckboxInputIconType"}},IconOnRegular:{defaultValue:null,description:"Иконка для включенного состояния в обычном режиме.",name:"IconOnRegular",required:!1,type:{name:"CheckboxInputIconType"}},IconOffCompact:{defaultValue:null,description:"Иконка для выключенного состояния в компактном режиме.",name:"IconOffCompact",required:!1,type:{name:"CheckboxInputIconType"}},IconOffRegular:{defaultValue:null,description:"Иконка для выключенного состояния в обычном режиме.",name:"IconOffRegular",required:!1,type:{name:"CheckboxInputIconType"}},IconIndeterminate:{defaultValue:null,description:"Иконка для неопределенного состояния.",name:"IconIndeterminate",required:!1,type:{name:"CheckboxInputIconType"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}}}}}catch{}export{I as C};
