import{j as t,h as r,W as v}from"./iframe-CkliH7Ym.js";import{h as n}from"./react_utils-CSZjvU4X.js";import{A as _}from"./Avatar-BEa0enZg.js";import{T as b}from"./Tappable-fZc2zE5Y.js";import{C as y}from"./Caption-XD0QEt-A.js";import{F as d}from"./Footnote-CVpuTKzI.js";import{S as h}from"./Subhead-DmZ-gnSD.js";const z="_host_uc4bl_1",g="_image_uc4bl_5",S="_body_uc4bl_10",x="_content_uc4bl_21",V="_subtitle_uc4bl_28",q="_sized_uc4bl_36",N="_customSize_uc4bl_40",M="_sizeS_uc4bl_44",H="_noPadding_uc4bl_51",R="_textAlignCenter_uc4bl_66",T="_textAlignEnd_uc4bl_70",L="_sizeM_uc4bl_84",P="_sizeL_uc4bl_88",j="_sizeXL_uc4bl_92",I="_sizeAuto_uc4bl_96",u={host:z,image:g,body:S,content:x,subtitle:V,sized:q,customSize:N,sizeS:M,noPadding:H,textAlignCenter:R,textAlignEnd:T,sizeM:L,sizeL:P,sizeXL:j,sizeAuto:I},k="--vkui_internal--cell_width",W={s:u.sizeS,m:u.sizeM,l:u.sizeL,xl:u.sizeXL,auto:u.sizeAuto},X={center:u.textAlignCenter,end:u.textAlignEnd},c=({className:i,title:a,style:m,subtitle:l,size:e="s",children:o=t.jsx(_,{size:56}),getRootRef:F,getRef:p,extraSubtitle:s,textAlign:E=e==="s"?"center":"start",noPadding:C=!1,TitleComponent:D=e==="s"?y:h,...B})=>{const f=n(a)||n(l)||n(s),A=typeof e=="number"?{[k]:`${e}px`}:void 0;return t.jsx("div",{ref:F,style:v(A,m),className:r(u.host,typeof e=="string"&&W[e],e!=="auto"&&u.sized,typeof e=="number"&&u.customSize,C&&u.noPadding,i),children:t.jsxs(b,{className:u.body,getRootRef:p,...B,children:[n(o)&&t.jsx("div",{className:u.image,children:o}),f&&t.jsxs("div",{className:r(u.content,E!=="start"&&X[E]),children:[n(a)&&t.jsx(D,{children:a}),n(l)&&t.jsx(d,{className:u.subtitle,children:l}),n(s)&&t.jsx(d,{className:u.subtitle,children:s})]})]})})};try{c.displayName="HorizontalCell",c.__docgenInfo={description:"",displayName:"HorizontalCell",props:{size:{defaultValue:{value:"s"},description:"Ширина компонента.\n\nЗначения `'s' | 'm' | 'l' | 'xl'` определяются дизайн-системой.\nЗначение `auto` позволяет задать динамическую ширину, определяемую контентом.\nПользовательскую ширину можно задать через числовое значение.",name:"size",required:!1,type:{name:"LiteralUnion<HorizontalCellSizes, number>"}},title:{defaultValue:null,description:"Заголовок.",name:"title",required:!1,type:{name:"ReactNode"}},subtitle:{defaultValue:null,description:"Дополнительная строка текста под `children`.",name:"subtitle",required:!1,type:{name:"ReactNode"}},extraSubtitle:{defaultValue:null,description:"Дополнительная строка текста под `children` и `subtitle`.",name:"extraSubtitle",required:!1,type:{name:"ReactNode"}},textAlign:{defaultValue:{value:"size === 's' ? 'center' : 'start'"},description:"Задает выравнивание типографики. По умолчанию `center` для `size=s`, иначе `start`.",name:"textAlign",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'}]}},noPadding:{defaultValue:{value:"false"},description:`Отключает формирование отступов у крайних элементов.

Актуально для использования в многострочных списках.`,name:"noPadding",required:!1,type:{name:"boolean"}},TitleComponent:{defaultValue:{value:"size === 's' ? Caption : Subhead"},description:"Позволяет передать типографический компонент, используемый для `title`.\nПо умолчанию `Caption` для `size=s`, иначе `Subhead`.",name:"TitleComponent",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},activeClassName:{defaultValue:null,description:"Стиль подсветки `active`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `activeMode`.",name:"activeClassName",required:!1,type:{name:"string"}},hoverClassName:{defaultValue:null,description:"Стиль подсветки `hover`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `hoverMode`.",name:"hoverClassName",required:!1,type:{name:"string"}},baseClassName:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `className`.",name:"baseClassName",required:!1,type:{name:"string | false"}},baseStyle:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `style`.",name:"baseStyle",required:!1,type:{name:"CSSProperties"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Позволяет управлять `hovered`-состоянием извне.",name:"hovered",required:!1,type:{name:"boolean"}},activated:{defaultValue:null,description:"Позволяет управлять `activated`-состоянием извне.",name:"activated",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},hasHoverWithChildren:{defaultValue:null,description:`Позволяет родительскому компоненту
иметь \`hovered\`-cостояние при наведении
на любой дочерний элемент.
По умолчанию состояние hovered у родителя сбрасывается.

Присваивается родителькому компоненту.
@example <Tappable hasHoverWithChildren>
  <IconButton />
  <IconButton />
  <IconButton />
</Tappable>`,name:"hasHoverWithChildren",required:!1,type:{name:"boolean"}},unlockParentHover:{defaultValue:null,description:`Позволяет родительскому компоненту показывать hovered-состояние при наведении
на текущий дочерний компонент.

Присваивается дочернему компоненту.
@example <Tappable>
  <IconButton unlockParentHover />
  <IconButton unlockParentHover />
  <IconButton />
</Tappable>`,name:"unlockParentHover",required:!1,type:{name:"boolean"}},activeEffectDelay:{defaultValue:null,description:"Длительность показа `active`-состояния.",name:"activeEffectDelay",required:!1,type:{name:"number"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}export{c as H};
