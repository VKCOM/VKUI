import{r as p,j as a,h as S,aH as i4}from"./iframe-DvsMcRqO.js";import{a as P,u as B4,b as D4}from"./useFloatingElement-CUfWLw26.js";import{A as s4}from"./AppRootPortal-DhnXzNcV.js";import{F as d4,D as C4,a as F4,b as m4}from"./FloatingArrow-DvhJwnsr.js";import{F as f4}from"./FocusTrap-CH7eC_Xz.js";const u={"-anim-transform-origin-top":"_-anim-transform-origin-top_vljab_1","-anim-transform-origin-top-start":"_-anim-transform-origin-top-start_vljab_5","-anim-transform-origin-top-end":"_-anim-transform-origin-top-end_vljab_9","-anim-transform-origin-right":"_-anim-transform-origin-right_vljab_13","-anim-transform-origin-right-start":"_-anim-transform-origin-right-start_vljab_17","-anim-transform-origin-right-end":"_-anim-transform-origin-right-end_vljab_21","-anim-transform-origin-bottom":"_-anim-transform-origin-bottom_vljab_25","-anim-transform-origin-bottom-start":"_-anim-transform-origin-bottom-start_vljab_29","-anim-transform-origin-bottom-end":"_-anim-transform-origin-bottom-end_vljab_33","-anim-transform-origin-left":"_-anim-transform-origin-left_vljab_37","-anim-transform-origin-left-start":"_-anim-transform-origin-left-start_vljab_41","-anim-transform-origin-left-end":"_-anim-transform-origin-left-end_vljab_45"},p4={top:u["-anim-transform-origin-top"],"top-start":u["-anim-transform-origin-top-start"],"top-end":u["-anim-transform-origin-top-end"],right:u["-anim-transform-origin-right"],"right-start":u["-anim-transform-origin-right-start"],"right-end":u["-anim-transform-origin-right-end"],bottom:u["-anim-transform-origin-bottom"],"bottom-start":u["-anim-transform-origin-bottom-start"],"bottom-end":u["-anim-transform-origin-bottom-end"],left:u["-anim-transform-origin-left"],"left-start":u["-anim-transform-origin-left-start"],"left-end":u["-anim-transform-origin-left-end"]},A4="_host_ilq2d_1",c4="_inWithStyling_ilq2d_16",g4="_arrow_ilq2d_22",h4="_hidden_ilq2d_26",n={host:A4,in:"_in_ilq2d_12",inWithStyling:c4,arrow:g4,hidden:h4},A=({arrow:e,arrowHeight:o=F4,arrowPadding:i=m4,placement:B="bottom-start",onPlacementChange:D,disableFlipMiddleware:s=!1,disableShiftMiddleware:H=!1,trigger:M="click",strategy:O,content:E,hoverDelay:T=150,closeAfterClick:I,offsetByMainAxis:W=8,offsetByCrossAxis:k=0,sameWidth:j,hideWhenReferenceHidden:G,onReferenceHiddenChange:N,disabled:L,disableInteractive:d,disableCloseOnClickOutside:z,disableCloseOnEscKey:K,keepMounted:C=!1,customMiddlewares:U,defaultShown:$=!1,shown:J,onShownChange:X,onShownChanged:Z,usePortal:c=!0,arrowProps:g,ArrowIcon:h=C4,autoFocus:b=!0,restoreFocus:F=!0,className:y,noStyling:m=!1,zIndex:v="var(--vkui--z_index_popout)",disableFocusTrap:_,role:t="dialog",...V})=>{const Q=p.useCallback(({shown:r,middlewareData:f,placement:w,setArrowRef:a4,floatingRef:E4,floatingProps:q,willBeHide:t4,onRestoreFocus:r4,onClose:l4})=>{if(!r&&!C)return null;const l=C&&!r;let R=null;if(e){const{arrow:o4}=f;R=a.jsx(d4,{iconClassName:m?void 0:n.arrow,...g,coords:o4,placement:w,getRootRef:a4,Icon:h})}return a.jsx(s4,{usePortal:c,children:a.jsx("div",{ref:E4,className:S(n.host,l&&n.hidden),...q,style:{zIndex:l?void 0:v,...q.style},children:a.jsxs(f4,{...V,role:t,className:S(n.in,m?void 0:n.inWithStyling,t4?P.out:P.in,p4[w],y),mount:!l,disabled:l||_,autoFocus:d?!1:b,restoreFocus:F?()=>r4(F):!1,children:[R,typeof E=="function"?E({onClose:l4}):E]})})})},[h,g,b,y,E,_,d,C,m,V,F,t,c,e,v]),Y=p.useCallback(({shown:r,...f})=>i4(f,r,t),[t]),{anchorRef:u4,anchorProps:e4,component:n4}=B4({arrow:e,arrowHeight:o,arrowPadding:i,placement:B,offsetByMainAxis:W,offsetByCrossAxis:k,sameWidth:j,hideWhenReferenceHidden:G,disableFlipMiddleware:s,disableShiftMiddleware:H,customMiddlewares:U,trigger:M,strategy:O,hoverDelay:T,onReferenceHiddenChange:N,closeAfterClick:I,disabled:L,disableInteractive:d,disableCloseOnClickOutside:z,disableCloseOnEscKey:K,defaultShown:$,shown:J,onShownChange:X,onShownChanged:Z,onPlacementChange:D,renderFloatingComponent:Q,remapReferenceProps:Y});return{anchorRef:u4,anchorProps:e4,popover:n4}};try{A.displayName="usePopover",A.__docgenInfo={description:"",displayName:"usePopover",props:{disabled:{defaultValue:null,description:"Блокирует изменение состояния.",name:"disabled",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:{value:"true"},description:"Управление автоматическим фокусом при открытии всплывающего элемента.",name:"autoFocus",required:!1,type:{name:'boolean | "root"'}},content:{defaultValue:null,description:`Содержимое всплывающего окна.

При передаче контента в виде [render prop](https://react.dev/reference/react/cloneElement#passing-data-with-a-render-prop),
в аргументе функции можно получить метод \`onClose\`, с помощью которого можно программно закрывать
всплывающее окно.`,name:"content",required:!1,type:{name:"ReactNode | FloatingContentRenderProp"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},placement:{defaultValue:{value:"bottom-start"},description:"По умолчанию компонент выберет наилучшее расположение сам, но приоритетное можно задать с помощью этого свойства.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"left"'},{value:'"right"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top"'},{value:'"bottom"'},{value:'"left-start"'},{value:'"left-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'}]}},restoreFocus:{defaultValue:{value:"true"},description:"Нужно ли после закрытия всплывающего элемента возвращать фокус на предыдущий активный элемент.",name:"restoreFocus",required:!1,type:{name:"RestoreFocusType"}},usePortal:{defaultValue:{value:"true"},description:"По умолчанию используется document.body.",name:"usePortal",required:!1,type:{name:"boolean | HTMLElement | RefObject<HTMLElement>"}},disableFocusTrap:{defaultValue:null,description:"Позволяет отключить захват фокуса.",name:"disableFocusTrap",required:!1,type:{name:"boolean"}},keepMounted:{defaultValue:{value:"false"},description:"Используется для того, чтобы не удалять всплывающий элемент из DOM дерева при скрытии.",name:"keepMounted",required:!1,type:{name:"boolean"}},zIndex:{defaultValue:{value:"var(--vkui--z_index_popout)"},description:"Перебивает zIndex заданный по умолчанию.",name:"zIndex",required:!1,type:{name:"string | number"}},arrowHeight:{defaultValue:{value:"8"},description:"Высота стрелки. Складывается с `mainAxis`, чтобы стрелка не залезала на якорный элемент.",name:"arrowHeight",required:!1,type:{name:"number"}},arrowPadding:{defaultValue:{value:"10"},description:"Безопасная зона вокруг стрелки, чтобы та не выходила за края контента.",name:"arrowPadding",required:!1,type:{name:"number"}},offsetByMainAxis:{defaultValue:{value:"8"},description:"Отступ по главной оси.",name:"offsetByMainAxis",required:!1,type:{name:"number"}},offsetByCrossAxis:{defaultValue:{value:"0"},description:"Отступ по вспомогательной оси.",name:"offsetByCrossAxis",required:!1,type:{name:"number"}},shown:{defaultValue:null,description:"Если передан, то всплывающий элемент будет показано/скрыто в зависимости от значения свойства.",name:"shown",required:!1,type:{name:"boolean"}},onPlacementChange:{defaultValue:null,description:`В зависимости от области видимости, позиция может смениться на более оптимальную,
чтобы всплывающий элемент вместился в эту область видимости.`,name:"onPlacementChange",required:!1,type:{name:"OnPlacementChange"}},disableFlipMiddleware:{defaultValue:{value:"false"},description:"Указанное значение `placement` форсируется, даже если для выпадающего элемента недостаточно места.\nНе оказывает влияния при `placement` значениях - `'auto' | 'auto-start' | 'auto-end'`",name:"disableFlipMiddleware",required:!1,type:{name:"boolean"}},disableShiftMiddleware:{defaultValue:{value:"false"},description:`Позволяет отключить смещение по главной оси,
которое не даёт всплывающему элементу выходить за границы видимой области.`,name:"disableShiftMiddleware",required:!1,type:{name:"boolean"}},arrowProps:{defaultValue:null,description:"Позволяет набросить на стрелку пользовательские атрибуты.",name:"arrowProps",required:!1,type:{name:"PopoverArrowProps"}},ArrowIcon:{defaultValue:{value:`(props: React.SVGAttributes<SVGSVGElement>): React.ReactNode => {
  return (
    <svg
      width={DEFAULT_ARROW_WIDTH}
      height={ARROW_HEIGHT_WITH_WHITE_SPACE}
      viewBox={\`0 0 \${DEFAULT_ARROW_WIDTH} \${ARROW_HEIGHT_WITH_WHITE_SPACE}\`}
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path d="M10 0c3 0 6 8 10 8v1H0V8c3.975 0 7-8 10-8Z" fill="currentColor" />
    </svg>
  );
}`},description:'Пользовательская SVG иконка.\n\nТребования:\n\n1. Иконка по умолчанию должна быть направлена вверх (a.k.a `IconUp`).\n2. Чтобы избежать проблемы с пространством между стрелкой и контентом на некоторых экранах,\n   растяните кривую по высоте на `1px` и увеличьте на этот размер `height` и `viewBox` SVG.\n   (смотри https://github.com/VKCOM/VKUI/pull/4496).\n3. Передайте высоту иконки в параметр `arrowHeight`. В значении высоты можно исключить хак с `1px` из п.2.\n4. Убедитесь, что компонент принимает все валидные для SVG параметры.\n5. Убедитесь, что SVG и её элементы наследует цвет через `fill="currentColor"`.',name:"ArrowIcon",required:!1,type:{name:"ComponentType<SVGAttributes<SVGSVGElement>>"}},strategy:{defaultValue:null,description:'Стратегия позиционирования всплывающего элемента.\n\n- `"fixed"` - позиционируется, используя `position: fixed`. Является значением по умолчанию\n- `"absolute"` - позиционируется, используя `position: absolute`, относительно ближайшего элемента с `position: relative`\n\n> `strategy="absolute"` Рекомендуется использовать с `usePortal={false}`. И нужно не забыть обернуть в элемент с `position: relative`',name:"strategy",required:!1,type:{name:"enum",value:[{value:'"fixed"'},{value:'"absolute"'}]}},trigger:{defaultValue:{value:"click"},description:'Механика вызова всплывающего элемента.\n\n- `"click"` – показывается/скрывается только при нажатии.\n- `"hover"` – будет показываться/скрывается при наведении/отведении мыши.\n- `"focus"` – будет показываться/скрывается при фокусе/потере фокуса мыши.\n- `"manual"` – будет показываться/скрывается только через свойство `shown`. `onShownChange`\n   будет вызываться при нажатии за пределы целевого и всплывающего элементов, а также по кнопке\n   ESC.\n\n> ⚠️`"hover"` на тач-устройствах будет работать как `"click"`, с одним лишь нюансом, что\n> не будет закрываться при повторном нажатии на целевой элемент. Для закрытия необходимо нажать\n> на область вне целевого элемента и выпадающего окна.\n\n**Избегайте использования `trigger="hover"` как единственного механизма активации, так как пользователи клавиатуры или скринридеров не смогут использовать компонент**',name:"trigger",required:!1,type:{name:"TriggerType"}},hoverDelay:{defaultValue:{value:"150"},description:`Количество миллисекунд, после которых произойдёт показ/скрытие всплывающего элемента
при наведении.

> Чтобы задать разное время на показ и скрытие, передайте массив типа \`[<показ>, <скрытие>]\`.

> Используется только для \`trigger="hover"\`.`,name:"hoverDelay",required:!1,type:{name:"number | [number, number]"}},closeAfterClick:{defaultValue:null,description:'При `trigger="hover"` закрывает всплывающий элемент при нажатии на целевой элемент.',name:"closeAfterClick",required:!1,type:{name:"boolean"}},disableInteractive:{defaultValue:null,description:"Отключает взаимодействие со всплывающим элементом.",name:"disableInteractive",required:!1,type:{name:"boolean"}},disableCloseOnClickOutside:{defaultValue:null,description:"Отключает закрытие нажатием на область вне целевого и всплывающего элемента.",name:"disableCloseOnClickOutside",required:!1,type:{name:"boolean"}},disableCloseOnEscKey:{defaultValue:null,description:"Отключает закрытие нажатием на кнопку ESC.",name:"disableCloseOnEscKey",required:!1,type:{name:"boolean"}},defaultShown:{defaultValue:{value:"false"},description:"Начальное состояние всплывающего элемента.",name:"defaultShown",required:!1,type:{name:"boolean"}},onShownChange:{defaultValue:null,description:"Вызывается при каждом изменении видимости всплывающего элемента.",name:"onShownChange",required:!1,type:{name:"OnShownChange"}},onShownChanged:{defaultValue:null,description:"Вызывается при каждом изменении видимости всплывающего элемента, но после завершении анимации.",name:"onShownChanged",required:!1,type:{name:"OnShownChange"}},arrow:{defaultValue:null,description:"Отображать ли стрелку, указывающую на якорный элемент.",name:"arrow",required:!1,type:{name:"boolean"}},hideWhenReferenceHidden:{defaultValue:null,description:"Принудительно скрывает компонент если целевой элемент вышел за область видимости.",name:"hideWhenReferenceHidden",required:!1,type:{name:"boolean"}},onReferenceHiddenChange:{defaultValue:null,description:"Событие скрытия / раскрытия компонента при использовании свойства `hideWhenReferenceHidden`.\n\n> Стоит иметь ввиду, что событие также будет вызвано и при новом рендере компонента",name:"onReferenceHiddenChange",required:!1,type:{name:"((hidden: boolean) => void)"}},sameWidth:{defaultValue:null,description:"Выставлять ширину равной target элементу.",name:"sameWidth",required:!1,type:{name:"boolean"}},customMiddlewares:{defaultValue:null,description:"Массив кастомных модификаторов для Popper (необходимо мемоизировать).",name:"customMiddlewares",required:!1,type:{name:"{ name: string; options?: any; fn: (state: { placement: Placement; platform: Platform; strategy: Strategy; x: number; y: number; initialPlacement: Placement; middlewareData: MiddlewareData; rects: ElementRects; elements: Elements; }) => Promisable<...>; }[]"}},noStyling:{defaultValue:{value:"false"},description:`Отключает у всплывающего элемента стилизацию по умолчанию.

У \`content\`:
- _background_
- _border-radius_
- _box-shadow_.

У \`arrow\`:
- _color_.

Используется в случае, если необходимо стилизовать по своему. Для \`arrow\` _color_ можно
определить через в \`arrowProps.iconClassName\` или \`arrowProps.iconStyle\`.`,name:"noStyling",required:!1,type:{name:"boolean"}}}}}catch{}const x=({children:e,...o})=>{const{anchorRef:i,anchorProps:B,popover:D}=A(o),s=D4(e,B,i);return a.jsxs(p.Fragment,{children:[s,D]})};try{x.displayName="Popover",x.__docgenInfo={description:"",displayName:"Popover",props:{noStyling:{defaultValue:null,description:`Отключает у всплывающего элемента стилизацию по умолчанию.

У \`content\`:
- _background_
- _border-radius_
- _box-shadow_.

У \`arrow\`:
- _color_.

Используется в случае, если необходимо стилизовать по своему. Для \`arrow\` _color_ можно
определить через в \`arrowProps.iconClassName\` или \`arrowProps.iconStyle\`.`,name:"noStyling",required:!1,type:{name:"boolean"}},arrowProps:{defaultValue:null,description:"Позволяет набросить на стрелку пользовательские атрибуты.",name:"arrowProps",required:!1,type:{name:"PopoverArrowProps"}},ArrowIcon:{defaultValue:null,description:'Пользовательская SVG иконка.\n\nТребования:\n\n1. Иконка по умолчанию должна быть направлена вверх (a.k.a `IconUp`).\n2. Чтобы избежать проблемы с пространством между стрелкой и контентом на некоторых экранах,\n   растяните кривую по высоте на `1px` и увеличьте на этот размер `height` и `viewBox` SVG.\n   (смотри https://github.com/VKCOM/VKUI/pull/4496).\n3. Передайте высоту иконки в параметр `arrowHeight`. В значении высоты можно исключить хак с `1px` из п.2.\n4. Убедитесь, что компонент принимает все валидные для SVG параметры.\n5. Убедитесь, что SVG и её элементы наследует цвет через `fill="currentColor"`.',name:"ArrowIcon",required:!1,type:{name:"ComponentType<SVGAttributes<SVGSVGElement>>"}},keepMounted:{defaultValue:null,description:"Используется для того, чтобы не удалять всплывающий элемент из DOM дерева при скрытии.",name:"keepMounted",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"Управление автоматическим фокусом при открытии всплывающего элемента.",name:"autoFocus",required:!1,type:{name:'boolean | "root"'}},children:{defaultValue:null,description:"Целевой элемент. Всплывающее окно появится возле него.\n\n> ⚠️ Если это пользовательский компонент, то он должен:\n> 1. предоставлять параметры либо `getRootRef`, либо `ref` (cм. `React.forwardRef()`) для получения ссылки на DOM-узел;\n> 2. принимать DOM атрибуты и события.",name:"children",required:!1,type:{name:"ReactElement<unknown, string | JSXElementConstructor<any>>"}},disabled:{defaultValue:null,description:"Блокирует изменение состояния.",name:"disabled",required:!1,type:{name:"boolean"}},content:{defaultValue:null,description:`Содержимое всплывающего окна.

При передаче контента в виде [render prop](https://react.dev/reference/react/cloneElement#passing-data-with-a-render-prop),
в аргументе функции можно получить метод \`onClose\`, с помощью которого можно программно закрывать
всплывающее окно.`,name:"content",required:!1,type:{name:"ReactNode | FloatingContentRenderProp"}},placement:{defaultValue:null,description:"По умолчанию компонент выберет наилучшее расположение сам, но приоритетное можно задать с помощью этого свойства.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"left"'},{value:'"right"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top"'},{value:'"bottom"'},{value:'"left-start"'},{value:'"left-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'}]}},restoreFocus:{defaultValue:null,description:"Нужно ли после закрытия всплывающего элемента возвращать фокус на предыдущий активный элемент.",name:"restoreFocus",required:!1,type:{name:"RestoreFocusType"}},usePortal:{defaultValue:null,description:"По умолчанию используется document.body.",name:"usePortal",required:!1,type:{name:"boolean | HTMLElement | RefObject<HTMLElement>"}},disableFocusTrap:{defaultValue:null,description:"Позволяет отключить захват фокуса.",name:"disableFocusTrap",required:!1,type:{name:"boolean"}},zIndex:{defaultValue:null,description:"Перебивает zIndex заданный по умолчанию.",name:"zIndex",required:!1,type:{name:"string | number"}},arrowHeight:{defaultValue:null,description:"Высота стрелки. Складывается с `mainAxis`, чтобы стрелка не залезала на якорный элемент.",name:"arrowHeight",required:!1,type:{name:"number"}},arrowPadding:{defaultValue:null,description:"Безопасная зона вокруг стрелки, чтобы та не выходила за края контента.",name:"arrowPadding",required:!1,type:{name:"number"}},offsetByMainAxis:{defaultValue:null,description:"Отступ по главной оси.",name:"offsetByMainAxis",required:!1,type:{name:"number"}},offsetByCrossAxis:{defaultValue:null,description:"Отступ по вспомогательной оси.",name:"offsetByCrossAxis",required:!1,type:{name:"number"}},shown:{defaultValue:null,description:"Если передан, то всплывающий элемент будет показано/скрыто в зависимости от значения свойства.",name:"shown",required:!1,type:{name:"boolean"}},onPlacementChange:{defaultValue:null,description:`В зависимости от области видимости, позиция может смениться на более оптимальную,
чтобы всплывающий элемент вместился в эту область видимости.`,name:"onPlacementChange",required:!1,type:{name:"OnPlacementChange"}},disableFlipMiddleware:{defaultValue:null,description:"Указанное значение `placement` форсируется, даже если для выпадающего элемента недостаточно места.\nНе оказывает влияния при `placement` значениях - `'auto' | 'auto-start' | 'auto-end'`",name:"disableFlipMiddleware",required:!1,type:{name:"boolean"}},disableShiftMiddleware:{defaultValue:null,description:`Позволяет отключить смещение по главной оси,
которое не даёт всплывающему элементу выходить за границы видимой области.`,name:"disableShiftMiddleware",required:!1,type:{name:"boolean"}},strategy:{defaultValue:null,description:'Стратегия позиционирования всплывающего элемента.\n\n- `"fixed"` - позиционируется, используя `position: fixed`. Является значением по умолчанию\n- `"absolute"` - позиционируется, используя `position: absolute`, относительно ближайшего элемента с `position: relative`\n\n> `strategy="absolute"` Рекомендуется использовать с `usePortal={false}`. И нужно не забыть обернуть в элемент с `position: relative`',name:"strategy",required:!1,type:{name:"enum",value:[{value:'"fixed"'},{value:'"absolute"'}]}},trigger:{defaultValue:null,description:'Механика вызова всплывающего элемента.\n\n- `"click"` – показывается/скрывается только при нажатии.\n- `"hover"` – будет показываться/скрывается при наведении/отведении мыши.\n- `"focus"` – будет показываться/скрывается при фокусе/потере фокуса мыши.\n- `"manual"` – будет показываться/скрывается только через свойство `shown`. `onShownChange`\n   будет вызываться при нажатии за пределы целевого и всплывающего элементов, а также по кнопке\n   ESC.\n\n> ⚠️`"hover"` на тач-устройствах будет работать как `"click"`, с одним лишь нюансом, что\n> не будет закрываться при повторном нажатии на целевой элемент. Для закрытия необходимо нажать\n> на область вне целевого элемента и выпадающего окна.\n\n**Избегайте использования `trigger="hover"` как единственного механизма активации, так как пользователи клавиатуры или скринридеров не смогут использовать компонент**',name:"trigger",required:!1,type:{name:"TriggerType"}},hoverDelay:{defaultValue:null,description:`Количество миллисекунд, после которых произойдёт показ/скрытие всплывающего элемента
при наведении.

> Чтобы задать разное время на показ и скрытие, передайте массив типа \`[<показ>, <скрытие>]\`.

> Используется только для \`trigger="hover"\`.`,name:"hoverDelay",required:!1,type:{name:"number | [number, number]"}},closeAfterClick:{defaultValue:null,description:'При `trigger="hover"` закрывает всплывающий элемент при нажатии на целевой элемент.',name:"closeAfterClick",required:!1,type:{name:"boolean"}},disableInteractive:{defaultValue:null,description:"Отключает взаимодействие со всплывающим элементом.",name:"disableInteractive",required:!1,type:{name:"boolean"}},disableCloseOnClickOutside:{defaultValue:null,description:"Отключает закрытие нажатием на область вне целевого и всплывающего элемента.",name:"disableCloseOnClickOutside",required:!1,type:{name:"boolean"}},disableCloseOnEscKey:{defaultValue:null,description:"Отключает закрытие нажатием на кнопку ESC.",name:"disableCloseOnEscKey",required:!1,type:{name:"boolean"}},defaultShown:{defaultValue:null,description:"Начальное состояние всплывающего элемента.",name:"defaultShown",required:!1,type:{name:"boolean"}},onShownChange:{defaultValue:null,description:"Вызывается при каждом изменении видимости всплывающего элемента.",name:"onShownChange",required:!1,type:{name:"OnShownChange"}},onShownChanged:{defaultValue:null,description:"Вызывается при каждом изменении видимости всплывающего элемента, но после завершении анимации.",name:"onShownChanged",required:!1,type:{name:"OnShownChange"}},arrow:{defaultValue:null,description:"Отображать ли стрелку, указывающую на якорный элемент.",name:"arrow",required:!1,type:{name:"boolean"}},hideWhenReferenceHidden:{defaultValue:null,description:"Принудительно скрывает компонент если целевой элемент вышел за область видимости.",name:"hideWhenReferenceHidden",required:!1,type:{name:"boolean"}},onReferenceHiddenChange:{defaultValue:null,description:"Событие скрытия / раскрытия компонента при использовании свойства `hideWhenReferenceHidden`.\n\n> Стоит иметь ввиду, что событие также будет вызвано и при новом рендере компонента",name:"onReferenceHiddenChange",required:!1,type:{name:"((hidden: boolean) => void)"}},sameWidth:{defaultValue:null,description:"Выставлять ширину равной target элементу.",name:"sameWidth",required:!1,type:{name:"boolean"}},customMiddlewares:{defaultValue:null,description:"Массив кастомных модификаторов для Popper (необходимо мемоизировать).",name:"customMiddlewares",required:!1,type:{name:"{ name: string; options?: any; fn: (state: { placement: Placement; platform: Platform; strategy: Strategy; x: number; y: number; initialPlacement: Placement; middlewareData: MiddlewareData; rects: ElementRects; elements: Elements; }) => Promisable<...>; }[]"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}export{x as P};
