import{d as b,j as o,i as y,T as k}from"./iframe-D2wkiYbA.js";import{i as s}from"./react_utils-CSZjvU4X.js";import{T as V}from"./Tappable-D1Sdra8V.js";import{T as q}from"./Title-CKYO1nSQ.js";const C="_host_13aui_1",P="_primitive_13aui_22",N="_rtl_13aui_30",H="_ios_13aui_39",M="_backIos_13aui_62",S="_android_13aui_70",g="_notPrimitive_13aui_70",T="_vkcom_13aui_84",x="_backVkcom_13aui_89",I="_hover_13aui_100",B="_active_13aui_102",R="_backHasLabel_13aui_116",j="_backSizeXCompact_13aui_121",z="_label_13aui_126",E="_backSizeXNone_13aui_131",e={host:C,primitive:P,rtl:N,ios:H,backIos:M,android:S,notPrimitive:g,vkcom:T,backVkcom:x,hover:I,active:B,backHasLabel:R,backSizeXCompact:j,label:z,backSizeXNone:E},c={ios:e.ios,android:e.android,vkcom:e.vkcom},v=({primary:a,children:n})=>{const t=b();return t==="ios"?o.jsx(q,{Component:"span",level:"3",weight:a?"1":"3",children:n}):o.jsx(k,{weight:t==="vkcom"?void 0:"2",children:n})},f=({children:a,primary:n=!1,label:t,...u})=>{const d=s(a),m=s(t),l=b();let i,r;switch(l){case"ios":i="background",r="opacity";break;case"vkcom":i=e.hover,r=e.active;break;default:i="background",r="background"}const p=[t,a].filter(h=>!!h),_=p.length===1&&s(p[0]);return o.jsxs(V,{Component:u.href?"a":"button",hoverMode:i,activeEffectDelay:200,activeMode:r,...u,baseClassName:y(e.host,c.hasOwnProperty(l)?c[l]:c.android,_&&e.primitive,!d&&!m&&e.notPrimitive),children:[d?o.jsx(v,{primary:n,children:a}):a,m?o.jsx(v,{primary:n,className:e.label,children:t}):t]})};try{f.displayName="PanelHeaderButton",f.__docgenInfo={description:"",displayName:"PanelHeaderButton",props:{primary:{defaultValue:{value:"false"},description:`Флаг для обозначения первичной кнопки
Влияет на стилизацию кнопки.`,name:"primary",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Текст или содержимое кнопки.",name:"label",required:!1,type:{name:"ReactNode"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},borderRadiusMode:{defaultValue:null,description:"Задает border-radius элементу\nВ режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`.",name:"borderRadiusMode",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"inherit"'}]}},activeClassName:{defaultValue:null,description:"Стиль подсветки `active`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `activeMode`.",name:"activeClassName",required:!1,type:{name:"string"}},hoverClassName:{defaultValue:null,description:"Стиль подсветки `hover`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `hoverMode`.",name:"hoverClassName",required:!1,type:{name:"string"}},baseClassName:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `className`.",name:"baseClassName",required:!1,type:{name:"string | false"}},baseStyle:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `style`.",name:"baseStyle",required:!1,type:{name:"CSSProperties"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Позволяет управлять `hovered`-состоянием извне.",name:"hovered",required:!1,type:{name:"boolean"}},activated:{defaultValue:null,description:"Позволяет управлять `activated`-состоянием извне.",name:"activated",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},hasHoverWithChildren:{defaultValue:null,description:`Позволяет родительскому компоненту
иметь \`hovered\`-cостояние при наведении
на любой дочерний элемент.
По умолчанию состояние hovered у родителя сбрасывается.

Присваивается родителькому компоненту.
@example <Tappable hasHoverWithChildren>
  <IconButton />
  <IconButton />
  <IconButton />
</Tappable>`,name:"hasHoverWithChildren",required:!1,type:{name:"boolean"}},unlockParentHover:{defaultValue:null,description:`Позволяет родительскому компоненту показывать hovered-состояние при наведении
на текущий дочерний компонент.

Присваивается дочернему компоненту.
@example <Tappable>
  <IconButton unlockParentHover />
  <IconButton unlockParentHover />
  <IconButton />
</Tappable>`,name:"unlockParentHover",required:!1,type:{name:"boolean"}},activeEffectDelay:{defaultValue:null,description:"Длительность показа `active`-состояния.",name:"activeEffectDelay",required:!1,type:{name:"number"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}}}}}catch{}export{f as P,e as s};
