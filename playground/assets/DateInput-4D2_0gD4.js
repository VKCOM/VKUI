import{r as t,l as su,k as iu,m as ou,c as du,j as a,i as l4,T as r4}from"./iframe-DTUKIQpa.js";import{u as Eu,d as D,N as b,I as V}from"./DateInput.module-_k_JItMG.js";import{c as Du,a as Fu,i as cu,p as mu,f as Bu}from"./date-D1ciwgPe.js";import{C as fu}from"./Calendar-BH8o_Gm8.js";import{F as pu}from"./FocusTrap-Dj4RiGIf.js";import{F as Cu}from"./FormField-bYsVG-1L.js";import{I as s4}from"./IconButton-Dy9SRYqV.js";import{P as Au}from"./Popper-BSgRPBX2.js";import{V as O}from"./VisuallyHidden-B0Nb8Auz.js";import{t as bu,s as vu}from"./CalendarHeader-DMAGB71Q.js";import{I as yu}from"./calendar_outline_20-D8_X0THl.js";import{I as hu}from"./clear_16-CAUQYn8x.js";function gu(u,e){const l=bu(u,e==null?void 0:e.in);return l.setSeconds(0,0),l}const q=(u,e)=>Du(u,e)||null,Vu=(u,e)=>Fu(u,e),i4=(u,e,l,n)=>q(e!==void 0?e:l!==void 0?l:u,n),qu=({value:u,defaultValue:e,onChange:l,timezone:n})=>{const[x,F]=t.useState(i4(null,u,e,n)),c=t.useRef(i4(null,u,e,n)),m=u!==void 0;t.useEffect(()=>{if(m){const o=q(u,n);F(o),c.current=o}},[m,n,u]);const I=t.useCallback(()=>c.current,[]),R=t.useCallback(o=>{m||(F(o),c.current=o);const v=Vu(o,n);return l==null||l(v),v},[m,l,n]);return{value:x,updateValue:R,setInternalValue:F,getLastUpdatedValue:I,clearValue:()=>{F(null),c.current=null,l==null||l(void 0)}}},xu={none:D.sizeYNone,compact:D.sizeYCompact},o4=u=>{let e=2,l=1,n=0;switch(u){case 0:n=31;break;case 1:n=12;break;case 2:n=2100,l=1900,e=4;break;case 3:n=23;break;case 4:n=59;break}return{length:e,min:l,max:n}},Iu=u=>{const e=["","","","",""];return u&&(e[0]=String(u.getDate()).padStart(2,"0"),e[1]=String(u.getMonth()+1).padStart(2,"0"),e[2]=String(u.getFullYear()).padStart(4,"0"),e[3]=String(u.getHours()).padStart(2,"0"),e[4]=String(u.getMinutes()).padStart(2,"0")),e},Ru={childList:!0,subtree:!0,attributes:!0,attributeFilter:["tabindex"]},d4=({enableTime:u,shouldDisableDate:e,disableFuture:l,disablePast:n,minDateTime:x,maxDateTime:F,value:c,defaultValue:m,onChange:I,calendarPlacement:R="bottom-start",style:K,className:o,doneButtonText:v,DoneButton:E4,closeOnChange:U=!0,disablePickers:D4,getRootRef:F4,name:c4,autoFocus:m4,disabled:$,accessible:d,calendarLabel:B4="Календарь",prevMonthLabel:f4="Предыдущий месяц",nextMonthLabel:p4="Следующий месяц",changeDayLabel:C4="День",changeMonthLabel:Y="Месяц",changeYearLabel:z="Год",changeHoursLabel:Z="Час",changeMinutesLabel:G="Минута",clearFieldLabel:A4="Очистить поле",showCalendarLabel:b4="Показать календарь",showNeighboringMonth:v4,size:y4,viewDate:h4,onHeaderChange:g4,onNextMonth:V4,onPrevMonth:q4,prevMonthIcon:x4,nextMonthIcon:I4,renderDayContent:R4,onCalendarOpenChanged:T4,calendarTestsProps:M4,dayFieldTestId:L4,monthFieldTestId:j4,yearFieldTestId:k4,hourFieldTestId:w4,minuteFieldTestId:N4,showCalendarButtonTestId:S4,clearButtonTestId:P4,id:_4,onApply:y,renderCustomValue:h,timezone:H4,restoreFocus:O4,disableFocusTrap:K4,readOnly:i,disableCalendar:U4=!1,"aria-label":J="",...$4})=>{const T=t.useRef(null),M=t.useRef(null),L=t.useRef(null),j=t.useRef(null),k=t.useRef(null),Q=i?!0:U4,{value:r,updateValue:B,setInternalValue:w,getLastUpdatedValue:W,clearValue:Y4}=qu({value:c,defaultValue:m,onChange:I,timezone:H4}),N=u?4:2,z4=t.useCallback(s=>{for(let E=0;E<=N;E+=1)if(s[E].length<o4(E).length)return;let _=`${s[0]}.${s[1]}.${s[2]}`,H="dd.MM.yyyy";if(u&&(_+=` ${s[3]}:${s[4]}`,H+=" HH:mm"),cu(_,H)){const E=new Date;B(mu(_,H,r??(u?gu(E):vu(E))))}},[u,N,B,r]),Z4=t.useMemo(()=>[T,M,L,j,k],[T,M,L,j,k]),{rootRef:X,calendarRef:G4,open:f,internalValue:p,handleKeyDown:C,setFocusedElement:A,handleFieldEnter:S,clear:J4,removeFocusFromField:g,closeCalendar:Q4,toggleCalendar:W4,openCalendar:u4,handleRestoreFocus:X4}=Eu({maxElement:N,refs:Z4,autoFocus:m4,disabled:$||i,elementsConfig:o4,onClear:Y4,onInternalValueChange:z4,getInternalValue:Iu,value:r,onCalendarOpenChanged:T4,accessible:d}),{sizeY:e4="none"}=su(),uu=iu(X,F4);ou(function(){f||w(W())},[f,W]);const eu=t.useCallback(s=>{if(s){if(u){w(s);return}B(s),U&&g()}},[u,B,U,w,g]),au=t.useCallback(()=>{if(!r)return;const s=B(r);y==null||y(s),g()},[y,g,B,r]),P=t.useMemo(()=>!f&&(h==null?void 0:h(r||void 0)),[f,h,r]),[tu,nu]=t.useState(R),{locale:lu}=du(),a4=r?new Intl.DateTimeFormat(lu,{weekday:"long",year:"numeric",month:"long",day:"numeric"}).format(r):null,t4=t.useId(),n4=t.useId(),ru=t.useCallback(()=>{S(),d&&u4()},[S,u4,d]);return a.jsxs(Cu,{style:K,className:l4(e4!=="regular"&&xu[e4],o),getRootRef:uu,role:"group","aria-labelledby":`${n4} ${t4}`,after:a.jsxs(t.Fragment,{children:[!Q&&(d||!d&&!r)?a.jsx(s4,{hoverMode:"opacity",label:b4,onClick:W4,"data-testid":S4,children:a.jsx(yu,{})}):null,r&&!i?a.jsx(s4,{hoverMode:"opacity",label:A4,onClick:J4,"data-testid":P4,children:a.jsx(hu,{})}):null]}),disabled:$,...$4,children:[a.jsxs("div",{className:D.wrapper,children:[J&&a.jsx(O,{id:n4,children:J}),a4&&a.jsx(O,{id:t4,children:a4}),a.jsx(O,{id:_4,Component:"input",readOnly:!0,"aria-hidden":!0,tabIndex:i?0:-1,name:c4,value:r?Bu(r,u?"dd.MM.yyyy'T'HH:mm":"dd.MM.yyyy"):"",onFocus:S}),a.jsxs(r4,{className:l4(D.input,P&&D.hidden),normalize:!1,Component:"span",onClick:ru,children:[a.jsx(b,{value:p[0],minValue:1,maxValue:31,length:2,getRootRef:T,index:0,onKeyDown:C,onElementSelect:A,label:C4,readOnly:i,"data-testid":L4}),a.jsx(V,{children:"."}),a.jsx(b,{value:p[1],minValue:1,maxValue:12,length:2,getRootRef:M,index:1,onElementSelect:A,onKeyDown:C,readOnly:i,label:Y,"data-testid":j4}),a.jsx(V,{children:"."}),a.jsx(b,{value:p[2],minValue:1,maxValue:275750,length:4,getRootRef:L,index:2,onElementSelect:A,readOnly:i,label:z,onKeyDown:C,"data-testid":k4}),u&&a.jsxs(t.Fragment,{children:[a.jsx(V,{className:D.inputTimeDivider,children:" "}),a.jsx(b,{value:p[3],minValue:1,maxValue:24,length:2,getRootRef:j,index:3,onElementSelect:A,readOnly:i,label:Z,onKeyDown:C,"data-testid":w4}),a.jsx(V,{children:":"}),a.jsx(b,{value:p[4],minValue:1,maxValue:59,length:2,getRootRef:k,index:4,onElementSelect:A,readOnly:i,label:G,onKeyDown:C,"data-testid":N4})]})]}),P&&a.jsx(r4,{className:D.customValue,"aria-hidden":!0,children:P})]}),f&&!Q&&a.jsx(Au,{targetRef:X,offsetByMainAxis:8,placement:tu,onPlacementChange:nu,autoUpdateOnTargetResize:!0,children:a.jsx(pu,{onClose:Q4,disabled:K4??!d,restoreFocus:O4??(!!d&&X4),captureEscapeKeyboardEvent:!1,mutationObserverOptions:Ru,children:a.jsx(fu,{"aria-label":B4,role:"dialog",value:r,onChange:eu,enableTime:u,disablePast:n,disableFuture:l,shouldDisableDate:e,onDoneButtonClick:au,getRootRef:G4,doneButtonText:v,DoneButton:E4,disablePickers:D4,changeHoursLabel:Z,changeMinutesLabel:G,prevMonthLabel:f4,nextMonthLabel:p4,changeMonthLabel:Y,changeYearLabel:z,showNeighboringMonth:v4,renderDayContent:R4,size:y4,viewDate:h4,onHeaderChange:g4,onNextMonth:V4,onPrevMonth:q4,prevMonthIcon:x4,nextMonthIcon:I4,minDateTime:x,maxDateTime:F,...M4})})})]})};try{d4.displayName="DateInput",d4.__docgenInfo={description:"",displayName:"DateInput",props:{calendarTestsProps:{defaultValue:null,description:"Передает атрибуты `data-testid` для интерактивных элементов в календаре.",name:"calendarTestsProps",required:!1,type:{name:"CalendarTestsProps"}},calendarPlacement:{defaultValue:null,description:"Расположение календаря относительно поля ввода.",name:"calendarPlacement",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"left"'},{value:'"right"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top"'},{value:'"bottom"'},{value:'"left-start"'},{value:'"left-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'}]}},closeOnChange:{defaultValue:{value:"true"},description:"Автоматически закрывать календарь при изменениях.",name:"closeOnChange",required:!1,type:{name:"boolean"}},calendarLabel:{defaultValue:{value:"Календарь"},description:"`aria-label` для календаря.",name:"calendarLabel",required:!1,type:{name:"string"}},clearFieldLabel:{defaultValue:{value:"Очистить поле"},description:"Label для кнопки очистки. Делает доступным для ассистивных технологий.",name:"clearFieldLabel",required:!1,type:{name:"string"}},showCalendarLabel:{defaultValue:{value:"Показать календарь"},description:"Label для кнопки открытия календаря. Делает доступным для ассистивных технологий.",name:"showCalendarLabel",required:!1,type:{name:"string"}},disableCalendar:{defaultValue:null,description:"Отключение открытия календаря.",name:"disableCalendar",required:!1,type:{name:"boolean"}},onCalendarOpenChanged:{defaultValue:null,description:"Обработчик изменения состояния открытия календаря.",name:"onCalendarOpenChanged",required:!1,type:{name:"((opened: boolean) => void)"}},changeDayLabel:{defaultValue:{value:"День"},description:"`aria-label` для поля изменения дня.",name:"changeDayLabel",required:!1,type:{name:"string"}},onApply:{defaultValue:null,description:'Обработчик нажатия на кнопку `"Done"`. Используется совместно с флагом `enableTime`.',name:"onApply",required:!1,type:{name:"((value?: Date) => void)"}},renderCustomValue:{defaultValue:null,description:`Функция для кастомного форматирования отображаемого значения даты.
Позволяет переопределить стандартное отображение даты и вернуть собственное представление.`,name:"renderCustomValue",required:!1,type:{name:"((date: Date) => ReactNode)"}},timezone:{defaultValue:null,description:"Часовой пояс для отображения даты.",name:"timezone",required:!1,type:{name:"string"}},accessible:{defaultValue:null,description:`Включает режим в котором DateInput доступен
для ассистивных технологий.
В этом режиме:
- календарь больше не открывает при фокусе на DateInput;
- иконка календаря видна всегда, чтобы пользователи
ассистивных технологий могли открыть календарь по клику на иконку;
- календарь при открытии получает фокус, клавиатурный
фокус зациклен и не выходит за пределы календаря пока календарь не закрыт.`,name:"accessible",required:!1,type:{name:"boolean"}},disableFocusTrap:{defaultValue:null,description:"Позволяет отключить захват фокуса при появлении календаря.",name:"disableFocusTrap",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:"Начальная дата при монтировании.",name:"defaultValue",required:!1,type:{name:"Date | null"}},onChange:{defaultValue:null,description:"Обработчик изменения выбранной даты.",name:"onChange",required:!1,type:{name:"((value?: Date) => void)"}},size:{defaultValue:null,description:"Размер календаря.",name:"size",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},value:{defaultValue:null,description:"Текущая выбранная дата.",name:"value",required:!1,type:{name:"Date | null"}},prevMonthLabel:{defaultValue:{value:"Предыдущий месяц"},description:"`aria-label` для кнопки предыдущего месяца.",name:"prevMonthLabel",required:!1,type:{name:"string"}},nextMonthLabel:{defaultValue:{value:"Следующий месяц"},description:"`aria-label` для кнопки следующего месяца.",name:"nextMonthLabel",required:!1,type:{name:"string"}},changeMonthLabel:{defaultValue:{value:"Месяц"},description:"`aria-label` для селектора месяца.",name:"changeMonthLabel",required:!1,type:{name:"string"}},changeYearLabel:{defaultValue:{value:"Год"},description:"`aria-label` для селектора года.",name:"changeYearLabel",required:!1,type:{name:"string"}},prevMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки предыдущего месяца.",name:"prevMonthIcon",required:!1,type:{name:"ReactNode"}},nextMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки следующего месяца.",name:"nextMonthIcon",required:!1,type:{name:"ReactNode"}},renderDayContent:{defaultValue:null,description:"Кастомизация отображения содержимого дня.",name:"renderDayContent",required:!1,type:{name:"((day: Date) => ReactNode)"}},disablePast:{defaultValue:null,description:"Запрещает выбор даты в прошлом.\nПрименяется, если не заданы `shouldDisableDate` и `disableFuture`.",name:"disablePast",required:!1,type:{name:"boolean"}},disableFuture:{defaultValue:null,description:"Запрещает выбор даты в будущем.\nПрименяется, если не задано `shouldDisableDate`.",name:"disableFuture",required:!1,type:{name:"boolean"}},shouldDisableDate:{defaultValue:null,description:"Функция для проверки запрета выбора даты.",name:"shouldDisableDate",required:!1,type:{name:"((value: Date) => boolean)"}},weekStartsOn:{defaultValue:null,description:"День недели, с которого начинается неделя.",name:"weekStartsOn",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"},{value:"2"},{value:"3"},{value:"4"},{value:"5"},{value:"6"}]}},disablePickers:{defaultValue:null,description:"Отключает селекторы выбора месяца/года.",name:"disablePickers",required:!1,type:{name:"boolean"}},changeHoursLabel:{defaultValue:{value:"Час"},description:"Текст выпадающего списка с выбором часов. Делает его доступным для ассистивных технологий.",name:"changeHoursLabel",required:!1,type:{name:"string"}},changeMinutesLabel:{defaultValue:{value:"Минута"},description:"Текст выпадающего списка с выбором минут. Делает его доступным для ассистивных технологий.",name:"changeMinutesLabel",required:!1,type:{name:"string"}},onNextMonth:{defaultValue:null,description:"Нажатие на кнопку переключения на следующий месяц.",name:"onNextMonth",required:!1,type:{name:"(() => void)"}},onPrevMonth:{defaultValue:null,description:"Нажатие на кнопку переключения на предыдущий месяц.",name:"onPrevMonth",required:!1,type:{name:"(() => void)"}},enableTime:{defaultValue:null,description:"Включает выбор времени.",name:"enableTime",required:!1,type:{name:"boolean"}},doneButtonText:{defaultValue:null,description:'Текст отображаемый в кнопке `"Done"`.',name:"doneButtonText",required:!1,type:{name:"string"}},DoneButton:{defaultValue:null,description:'Кастомное отображение кнопки `"Done"`.',name:"DoneButton",required:!1,type:{name:"ComponentType<ButtonProps>"}},showNeighboringMonth:{defaultValue:null,description:"Показывать дни соседних месяцев.",name:"showNeighboringMonth",required:!1,type:{name:"boolean"}},viewDate:{defaultValue:null,description:`Дата отображаемого месяца.
При использовании обновление даты должно происходить вне компонента.`,name:"viewDate",required:!1,type:{name:"Date"}},onHeaderChange:{defaultValue:null,description:"Обработчик изменения даты в шапке календаря.",name:"onHeaderChange",required:!1,type:{name:"((value: Date) => void)"}},minDateTime:{defaultValue:null,description:"Минимальные дата и время, которые можно выбрать.\nПрименяется, если не заданы `shouldDisableDate` и `disablePast`/`disableFuture`.",name:"minDateTime",required:!1,type:{name:"Date"}},maxDateTime:{defaultValue:null,description:"Максимальные дата и время, которые можно выбрать.\nПрименяется, если не заданы `shouldDisableDate` и `disablePast`/`disableFuture`.",name:"maxDateTime",required:!1,type:{name:"Date"}},restoreFocus:{defaultValue:{value:"true"},description:"",name:"restoreFocus",required:!1,type:{name:"boolean | (() => boolean | HTMLElement)"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},mode:{defaultValue:null,description:"Режим отображения.\n\n- `default` — показывает фон, обводку и, при наличии, текст-подсказку.\n- `plain` — показывает только текст-подсказку.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"plain"'},{value:'"default"'}]}},status:{defaultValue:null,description:"Статус отображения поля в форме.",name:"status",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"valid"'}]}},after:{defaultValue:null,description:"Добавляет иконку справа.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkcom.github.io/VKUI/#/IconButton), если вам нужна иконка, реагируюущая на нажатие.",name:"after",required:!1,type:{name:"ReactNode"}},before:{defaultValue:null,description:"Добавляет иконку слева.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkcom.github.io/VKUI/#/IconButton), если вам нужна иконка, реагирующая на нажатие.",name:"before",required:!1,type:{name:"ReactNode"}},beforeAlign:{defaultValue:null,description:"Вертикальное выравнивание иконки слева.",name:"beforeAlign",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'}]}},afterAlign:{defaultValue:null,description:"Вертикальное выравнивание иконки справа.",name:"afterAlign",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"start"'},{value:'"end"'}]}},dayFieldTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для поля ввода дня.",name:"dayFieldTestId",required:!1,type:{name:"string"}},monthFieldTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для поля ввода месяца.",name:"monthFieldTestId",required:!1,type:{name:"string"}},yearFieldTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для поля ввода года.",name:"yearFieldTestId",required:!1,type:{name:"string"}},hourFieldTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для поля ввода часа.",name:"hourFieldTestId",required:!1,type:{name:"string"}},minuteFieldTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для поля ввода минут.",name:"minuteFieldTestId",required:!1,type:{name:"string"}},showCalendarButtonTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для кнопки показа календаря.",name:"showCalendarButtonTestId",required:!1,type:{name:"string"}},clearButtonTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для кнопки очистки даты.",name:"clearButtonTestId",required:!1,type:{name:"string"}}}}}catch{}export{d4 as D};
