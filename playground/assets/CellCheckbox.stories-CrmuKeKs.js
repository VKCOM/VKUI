import{w as i,b as s,j as r}from"./iframe-Bz8JpgqB.js";import{D as l,C as n}from"./constants-DdkjnEgz.js";import{g as c}from"./mock-BznupqUM.js";import{A as u}from"./Avatar-Djz9XYEE.js";import{G as d}from"./Group-DTDZzv4b.js";import{a as C,C as x}from"./Cell-49yG8G3y.js";import"./preload-helper-Dp1pzeXC.js";import"./ImageBase-ClmHHqwk.js";import"./Clickable-C8sAptP9.js";import"./useFocusVisible-DI7o-w5D.js";import"./useFocusVisibleClassName-DeYZ6Bju.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-UmCFkqsi.js";import"./useColorScheme-DVyOIIkN.js";import"./InputUtils-C36z3TAr.js";import"./useFocusWithin-DoazkeVF.js";import"./useIsClient-BRGUFVjE.js";import"./useConfigDirection-1j4RIbQo.js";import"./online_mobile_12-BjrG8SuA.js";import"./SvgIconRootV2-PiPT7FW9.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-CXG5ZQyY.js";import"./Removable-BGzPp3kl.js";import"./children-CZEp9rCJ.js";import"./IconButton-SCSZUFVl.js";import"./Tappable-DGSycWIS.js";import"./VisuallyHidden-Civmtkn4.js";import"./useGlobalEventListener-CHrHveT6.js";import"./useEventListener-D6V4uhmf.js";import"./cancel_24-RdK71gIA.js";import"./SimpleCell-BZ1hDoNl.js";import"./Headline-DOUR4p3R.js";import"./Subhead-CQ9JxnC_.js";import"./chevron_compact_right_24-DCACY6v7.js";import"./chevron_16-r7AvM1qe.js";import"./AdaptiveIconRenderer-Dqx16JeB.js";import"./reorder_ios_24-C1cTNx6s.js";import"./check_box_on_24-CqvgWjWx.js";import"./check_circle_on_24-DEFiirW7.js";import"./constants-CtEIZ0Vq.js";const ar={title:"Buttons/Cell/Checkbox",component:C,parameters:{...n,...l},decorators:[i,s]},o={args:{defaultChecked:!0},decorators:[(p,a)=>r.jsx(d,{children:r.jsx(x,{Component:"label",before:r.jsx(u,{src:c("user_xyz")}),after:r.jsx(p,{...a.args}),children:"Игорь Федоров"})})]};var t,m,e;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...(e=(m=o.parameters)==null?void 0:m.docs)==null?void 0:e.source}}};const ir=["Playground"];export{o as Playground,ir as __namedExportsOrder,ar as default};
