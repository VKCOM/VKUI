import{l as f,r as F,j as e,W as B,i as v}from"./iframe-DTUKIQpa.js";import{h as o}from"./react_utils-CSZjvU4X.js";import{F as y}from"./Footnote-rQhC0WQs.js";import{P as j}from"./Paragraph-D0uPZqgj.js";import{V as A}from"./VisuallyHidden-B0Nb8Auz.js";import{b}from"./dropdown_20-DR-0bnZ1.js";const N="_host_1mjkp_1",k="_hierarchy_1mjkp_14",g="_sizeYRegular_1mjkp_23",V="_sizeYNone_1mjkp_28",S="_disabled_1mjkp_33",x="_hover_1mjkp_38",R="_before_1mjkp_42",I="_main_1mjkp_47",z="_children_1mjkp_53",Y="_after_1mjkp_58",q="_description_1mjkp_65",K="_selectedIcon_1mjkp_69",u={host:N,hierarchy:k,sizeYRegular:g,sizeYNone:V,disabled:S,hover:x,before:R,main:I,children:z,after:Y,description:q,selectedIcon:K},U={none:u.sizeYNone,regular:u.sizeYRegular},m=({children:a,hierarchy:t=0,hovered:E,selected:i,before:n,after:l,description:r,disabled:s,style:p,className:h,onClick:D,..._})=>{const{sizeY:c="none"}=f(),C=F.useMemo(()=>t>0?{"--vkui_internal--custom_select_option_hierarchy_level":t}:void 0,[t]),d=!!(E&&!s);return e.jsxs(j,{..._,onClick:s?void 0:D,Component:"div",role:"option","aria-disabled":s,"aria-selected":i,"data-hovered":d,className:v(u.host,c!=="compact"&&U[c],d&&u.hover,s&&u.disabled,t>0&&u.hierarchy,h),style:B(C,p),children:[o(n)&&e.jsx("div",{className:u.before,children:n}),e.jsxs("div",{className:u.main,children:[e.jsx("div",{className:u.children,children:a}),o(r)&&e.jsxs(y,{className:u.description,children:[e.jsx(A,{children:" "}),r]})]}),e.jsxs("div",{className:u.after,children:[o(l)&&e.jsx("div",{children:l}),i&&e.jsx(b,{className:u.selectedIcon})]})]})};try{m.displayName="CustomSelectOption",m.__docgenInfo={description:"",displayName:"CustomSelectOption",props:{description:{defaultValue:null,description:"Добавляет описание под основным блоком.",name:"description",required:!1,type:{name:"ReactNode"}},before:{defaultValue:null,description:"Вставляет элемент в начало блока перед основным контентом.\nНапример, можно передать компонент `Avatar`, `Icon<Name>` или другие изображения.",name:"before",required:!1,type:{name:"ReactNode"}},after:{defaultValue:null,description:"Вставляет элемент в конец блока после основного контента.\nНапример, можно передать компонент `Avatar`, `Icon<Name>` или другие изображения.",name:"after",required:!1,type:{name:"ReactNode"}},hierarchy:{defaultValue:{value:"0"},description:"Позволяет создавать вложенность.",name:"hierarchy",required:!1,type:{name:"number"}},selected:{defaultValue:null,description:"Включает состояние выбранного элемента списка.",name:"selected",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Включает состояние наведения.",name:"hovered",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"Включает состояние фокуса.",name:"focused",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Блокирует весь блок.\n\n> ⚠️  Важно: если CustomSelectOption используется внутри [Select](https://vkcom.github.io/VKUI/#/Select), [CustomSelect](https://vkcom.github.io/VKUI/#/CustomSelect) или [ChipsSelect](https://vkcom.github.io/VKUI/#/ChipsSelect), то свойство явно должно выставляться только через структуру `options`.\n> Запрещается выставлять `disabled` проп опциям в обход `options`, иначе [CustomSelect](https://vkcom.github.io/VKUI/#/CustomSelect) и [ChipsSelect](https://vkcom.github.io/VKUI/#/ChipsSelect) не будут знать об актуальном состоянии\nопции.",name:"disabled",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}export{m as C};
