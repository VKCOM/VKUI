import{w as e,b as p,j as r}from"./iframe-CjlHPZNU.js";import{D as a,C as i}from"./constants-DdkjnEgz.js";import{g as s}from"./mock-CiudtyON.js";import{A as l}from"./Avatar-YfEV_zp7.js";import{G as n}from"./Group-Bb5VOzgg.js";import{a as c,C as u}from"./Cell-DlH0uhGu.js";import"./preload-helper-PPVm8Dsz.js";import"./ImageBase-CwOR86Dk.js";import"./Clickable-CtpofEGa.js";import"./useFocusVisible-HzppoRHk.js";import"./useFocusVisibleClassName-Cac-cBWX.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-BRgNofzo.js";import"./useColorScheme-BIeu6EL3.js";import"./InputUtils-DGnaA_Jg.js";import"./useFocusWithin-CtqEkwtt.js";import"./useIsClient-DEeP5e_N.js";import"./useConfigDirection-CtCMtXRC.js";import"./online_mobile_12-BNtKxVLF.js";import"./SvgIconRootV2-BfpHNNsb.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-OilvUFbZ.js";import"./Removable-8x1bU61T.js";import"./children-DXLPnz61.js";import"./IconButton-DL_Qecp_.js";import"./Tappable-B5zgJODm.js";import"./VisuallyHidden-BhHQTREx.js";import"./useGlobalEventListener-B-Bh84II.js";import"./useEventListener-B0Sz5sam.js";import"./cancel_24-DoQTGG5W.js";import"./SimpleCell-B9ylNtQr.js";import"./Headline-5QXk0_9F.js";import"./Subhead-LlQLYw53.js";import"./chevron_compact_right_24-D4IlNfKx.js";import"./chevron_16-CdgPvfwT.js";import"./AdaptiveIconRenderer-Bf6_Ojz6.js";import"./reorder_ios_24-Bsdplb-r.js";import"./check_box_on_24-DQrHUw8r.js";import"./check_circle_on_24-DDCkNJvr.js";import"./constants-CtEIZ0Vq.js";const mr={title:"Buttons/Cell/Checkbox",component:c,parameters:{...i,...a},decorators:[e,p]},o={args:{defaultChecked:!0},decorators:[(t,m)=>r.jsx(n,{children:r.jsx(u,{Component:"label",before:r.jsx(l,{src:s("user_xyz")}),after:r.jsx(t,{...m.args}),children:"Игорь Федоров"})})]};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...o.parameters?.docs?.source}}};const er=["Playground"];export{o as Playground,er as __namedExportsOrder,mr as default};
