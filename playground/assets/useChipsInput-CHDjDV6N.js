import{j as f,Q as n4,k as v4,r as o,i as h4,h as A4,T as y4,aj as a4,ah as g,ag as l4,K as C,aW as g4}from"./iframe-DJZLDe2v.js";import{F as b4}from"./FormField-Cnff4fSG.js";import{I as _4}from"./IconButton-CMOFK_Ua.js";import{I as V4}from"./cancel_16-Df48sQ_x.js";import{u as R4,a as I4}from"./useEnsuredControl-Cp0sdS7L.js";import{u as x4}from"./useNativeFormResetListener-BGJH0uzL.js";import{C as O4}from"./Chip-C4TRKV98.js";function i4(u){return u?u.replace(/([.*+?^${}()|[\]\/\\])/g,"\\$1"):""}const S=({className:u,onClick:t,...r})=>f.jsx(_4,{Component:"button",label:"Очистить поле",onKeyDown:n4,type:"button",activeMode:"opacity",hoverMode:"opacity",...r,className:u,onClick:a=>{n4(a),a.preventDefault(),t()},children:f.jsx(V4,{})});try{S.displayName="FormFieldClearButton",S.__docgenInfo={description:"",displayName:"FormFieldClearButton",props:{className:{defaultValue:null,description:"`className` для компонента.",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Обработчик нажатия на кнопку.",name:"onClick",required:!0,type:{name:"() => void"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}const K=[],G="";function $(u){return u.value}function U(u){return u.label}function q4(u,t){return{value:u,label:t}}function W(u){const{label:t,...r}=u;return f.jsx(O4,{removable:!u.disabled,...r,children:t})}try{$.displayName="getOptionValueDefault",$.__docgenInfo={description:"",displayName:"getOptionValueDefault",props:{value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{U.displayName="getOptionLabelDefault",U.__docgenInfo={description:"",displayName:"getOptionLabelDefault",props:{value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{W.displayName="renderChipDefault",W.__docgenInfo={description:"",displayName:"renderChipDefault",props:{label:{defaultValue:null,description:"Отображаемый текст чипа.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},mode:{defaultValue:null,description:"Режим отображения компонента.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},value:{defaultValue:null,description:"Значение чипа.",name:"value",required:!1,type:{name:"ChipOptionValue"}},removable:{defaultValue:null,description:"Можно ли удалить чип.",name:"removable",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с чипом.",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Режим только для чтения.",name:"readOnly",required:!1,type:{name:"boolean"}},removeLabel:{defaultValue:null,description:"Текст для кнопки удаления.",name:"removeLabel",required:!1,type:{name:"string"}},before:{defaultValue:null,description:"Контент перед основным содержимым.",name:"before",required:!1,type:{name:"ReactNode"}},after:{defaultValue:null,description:"Контент после основного содержимого.",name:"after",required:!1,type:{name:"ReactNode"}},onRemove:{defaultValue:null,description:"Обработчик удаления чипа.",name:"onRemove",required:!1,type:{name:"((event: MouseEvent<Element, MouseEvent>, value: ChipOptionValue) => void)"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}}}}}catch{}const c4=u=>typeof u=="object"&&"value"in u,r4=u=>u?u.value===G:!0,N4=(u,t)=>{const r=c4(u)?u.value:u;return t.findIndex(a=>a.value===r)},Y=u=>{const t=u&&u.dataset.index;return typeof t=="string"?Number(t):-1},k4=u=>{const t=u&&u.dataset.value;return(u&&u.dataset.valueType)==="number"?Number(t):typeof t=="string"?t:-1},j4=(u,t,r)=>{const a=r-1;switch(t){case"prev":const p=u-1;return p<0?a:p;case"next":const B=u+1;return B>a?0:B;case"last":return a;case"first":return 0;default:return-1}},T4="_host_j893j_1",L4="_listBox_j893j_16",P4="_chip_j893j_25",M4="_el_j893j_30",w4="_hasPlaceholder_j893j_44",z4="_hasInputValue_j893j_45",H4="_sizeYCompact_j893j_79",Y4="_sizeYNone_j893j_84",h={host:T4,listBox:L4,chip:P4,el:M4,hasPlaceholder:w4,hasInputValue:z4,sizeYCompact:H4,sizeYNone:Y4},S4={none:h.sizeYNone,compact:h.sizeYCompact},o4=({getRootRef:u,style:t,className:r,before:a,after:p,status:B,mode:P,maxHeight:M,value:b=K,onAddChipOption:_,onRemoveChipOption:V,renderChip:w=W,getRef:v,id:A,inputValue:q=G,placeholder:R,disabled:i,readOnly:d,addOnBlur:I,onBlur:x,onInputChange:z,ClearButton:N=S,clearButtonShown:k,clearButtonTestId:j,onClear:T,chipsListLabel:s="Выбранные элементы","aria-label":F="",...y})=>{const{sizeY:D="none"}=v4(),O=o.useId(),l=h4(v),E=o.useRef(null),c=o.useRef(null),m=b.length,Q=m===0,[p4,X]=o.useState(0),J=e=>{X(0),e.focus()},L=(e,n,B4)=>{const e4=j4(e,n,m),t4=B4.querySelector(`[data-index="${e4}"]`);t4&&(X(e4),t4.focus())},Z=(e,n)=>{!l.current||!c.current||(m>1?n===m-1?L(n,"prev",c.current):L(n,"next",c.current):J(l.current),V(e))},d4=e=>{const n=e.target;if(!(e.defaultPrevented||!c.current||!a4(n)))switch(e.key){case C.ENTER:{!d&&g(n,l.current)&&l.current&&!r4(l.current)&&(e.preventDefault(),_(l.current.value));break}case C.DELETE:case C.BACKSPACE:{!d&&m>0&&(g(n,l.current)?e.key===C.BACKSPACE&&r4(l.current)&&(e.preventDefault(),L(Y(n),"last",c.current)):(e.preventDefault(),Z(k4(n),Y(n))));break}case C.HOME:case C.END:case C.ARROW_UP:case C.ARROW_LEFT:case C.ARROW_DOWN:case C.ARROW_RIGHT:{m!==0&&!g(n,l.current)&&(e.preventDefault(),L(Y(n),g4(e.key),c.current));break}}},E4=e=>{x&&x(e),I&&!e.defaultPrevented&&l.current&&_(l.current.value)},m4=(e,n)=>{e.preventDefault(),e.stopPropagation(),Z(n,N4(n,b))},f4=e=>{const n=l4(e.currentTarget);e.defaultPrevented||g(e.currentTarget,n)||l.current&&l.current.focus()},u4=o.useCallback(()=>{l.current&&J(l.current),T()},[l,T]),H=o.useMemo(()=>{if(k)return f.jsx(N,{onClick:u4,disabled:i,"data-testid":j})},[N,k,j,i,u4]),C4=o.useMemo(()=>{if(H||p)return f.jsxs(f.Fragment,{children:[H,p]})},[p,H]),F4=A||`chips-input-base-generated-id-${O}`,D4=e=>{if(a4(e.target)&&g(c.current,e.target)&&c.current!==e.target)return;const n=l4(e.currentTarget);g(c.current,n)||e.target!==l.current&&e.preventDefault()};return f.jsx(b4,{Component:"div",getRootRef:u,role:"group","aria-label":F,style:t,disabled:i,before:a,after:C4,status:B,mode:P,className:r,maxHeight:M,onClick:i?void 0:f4,onMouseDown:D4,children:f.jsxs("div",{className:A4(h.host,D!=="regular"&&S4[D],Q&&h.hasPlaceholder,q&&h.hasInputValue),ref:E,onKeyDown:i?void 0:d4,children:[f.jsx("div",{className:h.listBox,ref:c,role:"listbox","aria-orientation":"horizontal","aria-disabled":i,"aria-readonly":d,"aria-label":s,children:b.map((e,n)=>f.jsx(o.Fragment,{children:w({Component:"div",value:e.value,label:e.label,disabled:e.disabled||i,readOnly:e.readOnly||d,className:h.chip,onRemove:m4,"data-index":n,"data-value":e.value,"data-value-type":typeof e.value,tabIndex:p4===n?0:-1,role:"option","aria-selected":!0,"aria-posinset":n+1,"aria-setsize":m,"aria-description":"Для удаления используйте Backspace или Delete"},e)},`${typeof e.value}-${e.value}`))}),f.jsx(y4,{autoCapitalize:"none",autoComplete:"off",autoCorrect:"off",spellCheck:!1,...y,"aria-label":F,Component:"input",type:"text",id:F4,getRootRef:l,className:h.el,disabled:i,readOnly:d,placeholder:Q?R:void 0,value:q,onChange:z,onBlur:E4})]})})};try{o4.displayName="ChipsInputBase",o4.__docgenInfo={description:"",displayName:"ChipsInputBase",props:{onClear:{defaultValue:null,description:"Обработчик очистки всех выбранных опций.",name:"onClear",required:!0,type:{name:"() => void"}},onAddChipOption:{defaultValue:null,description:"Обработчик добавления новой опции чипа.",name:"onAddChipOption",required:!0,type:{name:"(value: string) => void"}},onRemoveChipOption:{defaultValue:null,description:"Обработчик удаления опции чипа.",name:"onRemoveChipOption",required:!0,type:{name:"(value: ChipOptionValue | O) => void"}},getRootRef:{defaultValue:null,description:"Ссылка на корневой элемент.",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},addOnBlur:{defaultValue:null,description:"Добавляет значение в список на событие `onBlur`.",name:"addOnBlur",required:!1,type:{name:"boolean"}},renderChip:{defaultValue:{value:"Используется [Chip](#/Chip)"},description:"Render prop функция для возврата своего компонента.",name:"renderChip",required:!1,type:{name:"RenderChip<O>"}},clearButtonShown:{defaultValue:null,description:"Показывать ли кнопку для очистки значения.",name:"clearButtonShown",required:!1,type:{name:"boolean"}},clearButtonTestId:{defaultValue:null,description:"(e2e) testId кнопки очистки.",name:"clearButtonTestId",required:!1,type:{name:"string"}},ClearButton:{defaultValue:{value:`({
  className,
  onClick,
  ...restProps
}: FormFieldClearButtonProps): React.ReactNode => {
  return (
    <IconButton
      Component="button"
      label="Очистить поле"
      onKeyDown={stopPropagation}
      type="button"
      activeMode="opacity"
      hoverMode="opacity"
      {...restProps}
      className={className}
      onClick={(e) => {
        stopPropagation(e);
        e.preventDefault();
        onClick();
      }}
    >
      <Icon16Cancel />
    </IconButton>
  );
}`},description:"Кастомная кнопка для очистки значения.\nДолжна принимать обязательное свойство `onClick`.",name:"ClearButton",required:!1,type:{name:"ComponentType<FormFieldClearButtonProps>"}},chipsListLabel:{defaultValue:{value:"Выбранные элементы"},description:"`aria-label` для списка выбранных опций.",name:"chipsListLabel",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:{value:"[]"},description:"Выбранные опции.",name:"value",required:!1,type:{name:"O[]"}},delimiter:{defaultValue:null,description:`Символ или строка, которая будет использоваться как разделитель для автоматического создания опций из текста, введенного в поле ввода.
Принимает:
- \`string\` - простая строка
- \`RegExp\` - регулярное выражение
- \`string[]\` - массив строк, по которым нужно разелять ввод.

Работает в двух сценариях:
1. При вводе разделителя - текст до разделителя автоматически преобразуется в новую опцию.
   Например, при \`delimiter=","\` ввод "опция1," создаст опцию "опция1".

2. При вставке из буфера обмена - если вставляемый текст содержит разделители,
   он будет автоматически разбит на несколько опций.
   Например, при \`delimiter=","\` вставка "опция1,опция2,опция3" создаст
   три отдельные опции: "опция1", "опция2" и "опция3".`,name:"delimiter",required:!1,type:{name:"string | RegExp | string[]"}},onInputChange:{defaultValue:null,description:"Обработчик изменения значения в поле ввода.",name:"onInputChange",required:!1,type:{name:"OnInputChange"}},inputValue:{defaultValue:{value:""},description:"Значение поля ввода.",name:"inputValue",required:!1,type:{name:"string"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},align:{defaultValue:null,description:"",name:"align",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},status:{defaultValue:null,description:"Статус отображения поля в форме.",name:"status",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"valid"'}]}},mode:{defaultValue:null,description:"Режим отображения.\n\n- `default` — показывает фон, обводку и, при наличии, текст-подсказку.\n- `plain` — показывает только текст-подсказку.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"plain"'}]}},after:{defaultValue:null,description:"Добавляет иконку справа.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагируюущая на нажатие.",name:"after",required:!1,type:{name:"ReactNode"}},before:{defaultValue:null,description:"Добавляет иконку слева.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагирующая на нажатие.",name:"before",required:!1,type:{name:"ReactNode"}},maxHeight:{defaultValue:null,description:"Максимальная высота поля.",name:"maxHeight",required:!1,type:{name:"number"}}}}}catch{}const K4=(u,t="")=>{try{const r=u.value;u.value=t;const a=u._valueTracker;a&&a.setValue(r);const p=new Event("input",{bubbles:!0});u.dispatchEvent(p)}catch{}},s4=(u,t,r)=>u.map(a=>({...a,label:r(a),value:t(a)}));function $4(u){const t=u.filter(a=>a.length>0);if(t.length===0)return null;const r=t.map(a=>i4(a));return new RegExp(`(?:${r.join("|")})`)}function U4(u){return u instanceof RegExp?u:typeof u=="string"?new RegExp(i4(u)):$4(u)}const eu=({value:u,defaultValue:t=K,onChange:r,getOptionLabel:a=U,getOptionValue:p=$,getNewOptionData:B=q4,inputValue:P,defaultInputValue:M=G,onInputChange:b,disabled:_,delimiter:V})=>{const[w,v]=R4({disabled:_,value:u?s4(u,p,a):void 0,defaultValue:s4(t,p,a),onChange:r}),A=o.useRef(null),[q,R]=I4({disabled:_,value:P,defaultValue:M,onChange:b}),i=o.useCallback((s,F)=>{v(y=>{const D=new Set,O=s.map(E=>{const c=c4(E),m=c?B(E.value,E.label):B(E,typeof E=="string"?E:"");return D.add(m.value),c?{...E,...m}:m}),l=y.filter(E=>!D.has(E.value));return F&&l.push(...O),l})},[v,B]),d=o.useCallback(()=>{A.current&&K4(A.current,"")},[A]),I=o.useCallback(s=>i([s],!0),[i]),x=o.useCallback(s=>i(s,!0),[i]),z=o.useCallback(s=>i([s],!1),[i]),N=o.useCallback(s=>{const F=s.trim();F&&(I(F),d())},[I,d]),k=o.useCallback(()=>{v(t)},[t,v]),j=o.useCallback(()=>{v(K),d()},[d,v]),T=o.useCallback((s,F=!0)=>{const y=s.target.value,D=V?U4(V):null;if(!D||!D.test(y)||!F){R(s);return}const O=y.trim().split(D).map(l=>l.trim()).filter(Boolean);s.target.value="",s.currentTarget.value="",R(s),x(O)},[x,V,R]);return x4(A,k),{value:w,addOption:I,addOptionFromInput:N,removeOption:z,inputRef:A,inputValue:q,onInputChange:T,clearInput:d,clearOptions:j}};export{o4 as C,K as D,$ as a,q4 as b,G as c,U as g,W as r,s4 as t,eu as u};
