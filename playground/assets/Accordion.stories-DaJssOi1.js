import{r as C,n as _,i as V,l as g,j as e,h as D}from"./iframe-DvQ0hW0I.js";import{D as q,C as x}from"./constants-DdkjnEgz.js";import{c as S}from"./createStoryParameters-CcwS40kl.js";import{D as R}from"./Div-C63Bwut4.js";import{G as N}from"./Group-DlJj6tsg.js";import{u as I}from"./useEnsuredControl-CswA9P61.js";import{u as T}from"./useCSSKeyframesAnimationController-B-asaqHF.js";import{c as M}from"./callMultiple-ChqatQlo.js";import{S as H}from"./SimpleCell-B1KXyTvt.js";import{a as P,I as k}from"./chevron_up_24-D5XC5yKX.js";const v=C.createContext({labelId:"",contentId:"",expanded:!1,unmountOnCollapsed:!1,onChange:_});try{v.displayName="AccordionContext",v.__docgenInfo={description:"",displayName:"AccordionContext",props:{}}}catch{}const j="_icon_hc0xt_1",O="_host_hc0xt_5",L="_inEnter_hc0xt_24",z="_inEntered_hc0xt_34",W="_inExit_hc0xt_38",w="_inExited_hc0xt_48",t={icon:j,host:O,in:"_in_hc0xt_9",inEnter:L,inEntered:z,inExit:W,inExited:w},F="--vkui_internal--AccordionContent_height",G={enter:t.inEnter,entering:t.inEnter,entered:t.inEntered,exit:t.inExit,exiting:t.inExit,exited:t.inExited},b=({getRootRef:u,getRef:l,className:i,children:d,...c})=>{const{expanded:s,labelId:f,contentId:p,unmountOnCollapsed:r}=C.useContext(v),o=V(l),[n,E]=T(s?"enter":"exit",void 0,!0);return g(()=>{const m=o.current;if(m)switch(n){case"enter":case"exit":m.style.setProperty(F,`${m.scrollHeight}px`);break;case"entered":case"exited":m.style.removeProperty(F);break}},[n,o]),r&&n==="exited"?null:e.jsx("div",{ref:u,id:p,role:"region","aria-labelledby":f,"aria-hidden":!s,className:D(t.host,i),...c,children:e.jsx("div",{ref:o,className:D(t.in,G[n]),...E,children:d})})};try{b.displayName="AccordionContent",b.__docgenInfo={description:"",displayName:"AccordionContent",props:{getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}const h=({after:u,before:l,ExpandIcon:i=P,CollapseIcon:d=k,iconPosition:c="after",onClick:s,children:f,...p})=>{const{expanded:r,labelId:o,contentId:n,onChange:E}=C.useContext(v),m=r?d:i,A=e.jsx("span",{className:"vkuiIcon",children:e.jsx(m,{className:t.icon})}),B=()=>E(!r);return e.jsx(H,{id:o,"aria-expanded":r,"aria-controls":n,onClick:M(B,s),before:e.jsxs(e.Fragment,{children:[c==="before"&&A,l]}),after:e.jsxs(e.Fragment,{children:[u,c==="after"&&A]}),...p,children:f})};try{h.displayName="AccordionSummary",h.__docgenInfo={description:"",displayName:"AccordionSummary",props:{ExpandIcon:{defaultValue:null,description:"Иконка для раскрытия контента.",name:"ExpandIcon",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},CollapseIcon:{defaultValue:null,description:"Иконка для сворачивания контента.",name:"CollapseIcon",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},iconPosition:{defaultValue:{value:"after"},description:"Позиция иконки.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"after"'},{value:'"before"'}]}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},after:{defaultValue:null,description:"Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.",name:"after",required:!1,type:{name:"ReactNode"}},borderRadiusMode:{defaultValue:null,description:"Задает border-radius элементу\nВ режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`.",name:"borderRadiusMode",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"auto"'}]}},activeClassName:{defaultValue:null,description:"Стиль подсветки `active`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `activeMode`.",name:"activeClassName",required:!1,type:{name:"string"}},hoverClassName:{defaultValue:null,description:"Стиль подсветки `hover`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `hoverMode`.",name:"hoverClassName",required:!1,type:{name:"string"}},baseClassName:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `className`.",name:"baseClassName",required:!1,type:{name:"string | false"}},baseStyle:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `style`.",name:"baseStyle",required:!1,type:{name:"CSSProperties"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Позволяет управлять `hovered`-состоянием извне.",name:"hovered",required:!1,type:{name:"boolean"}},activated:{defaultValue:null,description:"Позволяет управлять `activated`-состоянием извне.",name:"activated",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},hasHoverWithChildren:{defaultValue:null,description:`Позволяет родительскому компоненту
иметь \`hovered\`-cостояние при наведении
на любой дочерний элемент.
По умолчанию состояние hovered у родителя сбрасывается.

Присваивается родителькому компоненту.
@example <Tappable hasHoverWithChildren>
  <IconButton />
  <IconButton />
  <IconButton />
</Tappable>`,name:"hasHoverWithChildren",required:!1,type:{name:"boolean"}},unlockParentHover:{defaultValue:null,description:`Позволяет родительскому компоненту показывать hovered-состояние при наведении
на текущий дочерний компонент.

Присваивается дочернему компоненту.
@example <Tappable>
  <IconButton unlockParentHover />
  <IconButton unlockParentHover />
  <IconButton />
</Tappable>`,name:"unlockParentHover",required:!1,type:{name:"boolean"}},activeEffectDelay:{defaultValue:null,description:"Длительность показа `active`-состояния.",name:"activeEffectDelay",required:!1,type:{name:"number"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}},before:{defaultValue:null,description:"Иконка 28 или `<Avatar size={28|32|40|48|72} />`.",name:"before",required:!1,type:{name:"ReactNode"}},badgeBeforeTitle:{defaultValue:null,description:"Иконка 12 или `<Badge />`. Добавится слева от текста `children`.",name:"badgeBeforeTitle",required:!1,type:{name:"ReactNode"}},badgeAfterTitle:{defaultValue:null,description:"Иконка 12 или `<Badge />`. Добавится справа от текста `children`.",name:"badgeAfterTitle",required:!1,type:{name:"ReactNode"}},badgeBeforeSubtitle:{defaultValue:null,description:"Иконка 12. Добавится слева от текста `subtitle`.",name:"badgeBeforeSubtitle",required:!1,type:{name:"ReactNode"}},badgeAfterSubtitle:{defaultValue:null,description:"Иконка 12. Добавится справа от текста `subtitle`.",name:"badgeAfterSubtitle",required:!1,type:{name:"ReactNode"}},indicator:{defaultValue:null,description:"Контейнер для текста справа от `children`.",name:"indicator",required:!1,type:{name:"ReactNode"}},overTitle:{defaultValue:null,description:"Дополнительная строка текста над `children`.",name:"overTitle",required:!1,type:{name:"ReactNode"}},subtitle:{defaultValue:null,description:"Дополнительная строка текста под `children`.",name:"subtitle",required:!1,type:{name:"ReactNode"}},extraSubtitle:{defaultValue:null,description:"Дополнительная строка текста под `children` и `subtitle`.",name:"extraSubtitle",required:!1,type:{name:"ReactNode"}},chevronSize:{defaultValue:null,description:"Размер chevron.",name:"chevronSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},multiline:{defaultValue:null,description:"Включает многострочный режим для отображения текста.",name:"multiline",required:!1,type:{name:"boolean"}}}}}catch{}function U(u){const l=C.useId(),i=u??`Accordion${l}`,d=`AccordionContent${u??l}`;return{labelId:i,contentId:d}}const a=({id:u,expanded:l,defaultExpanded:i=!1,onChange:d,children:c,unmountOnCollapsed:s=!1,...f})=>{const{labelId:p,contentId:r}=U(u),[o,n]=I({value:l,defaultValue:i,onChange:d,disabled:f.disabled}),E=C.useMemo(()=>({labelId:p,contentId:r,expanded:o||!1,unmountOnCollapsed:s,onChange:n}),[r,o,p,n,s]);return e.jsx(v.Provider,{value:E,children:c})};a.Summary=h;a.Content=b;try{a.displayName="Accordion",a.__docgenInfo={description:"",displayName:"Accordion",props:{id:{defaultValue:null,description:"Используется для генерации id для заголовка и контента(a11y).",name:"id",required:!1,type:{name:"string"}},expanded:{defaultValue:null,description:"Управляет раскрытием и скрытием контента.",name:"expanded",required:!1,type:{name:"boolean"}},defaultExpanded:{defaultValue:{value:"false"},description:"Значение по умолчанию.",name:"defaultExpanded",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Возвращает новое значение при изменении раскрытия/сворачивания контента.",name:"onChange",required:!1,type:{name:"((newValue: boolean) => void)"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},unmountOnCollapsed:{defaultValue:{value:"false"},description:"Нужно ли удалять из DOM контент при сворачивании.",name:"unmountOnCollapsed",required:!1,type:{name:"boolean"}}}}}catch{}try{a.Summary.displayName="Accordion.Summary",a.Summary.__docgenInfo={description:"",displayName:"Accordion.Summary",props:{ExpandIcon:{defaultValue:null,description:"Иконка для раскрытия контента.",name:"ExpandIcon",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},CollapseIcon:{defaultValue:null,description:"Иконка для сворачивания контента.",name:"CollapseIcon",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},iconPosition:{defaultValue:{value:"after"},description:"Позиция иконки.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"after"'},{value:'"before"'}]}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},after:{defaultValue:null,description:"Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.",name:"after",required:!1,type:{name:"ReactNode"}},borderRadiusMode:{defaultValue:null,description:"Задает border-radius элементу\nВ режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`.",name:"borderRadiusMode",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"auto"'}]}},activeClassName:{defaultValue:null,description:"Стиль подсветки `active`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `activeMode`.",name:"activeClassName",required:!1,type:{name:"string"}},hoverClassName:{defaultValue:null,description:"Стиль подсветки `hover`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `hoverMode`.",name:"hoverClassName",required:!1,type:{name:"string"}},baseClassName:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `className`.",name:"baseClassName",required:!1,type:{name:"string | false"}},baseStyle:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `style`.",name:"baseStyle",required:!1,type:{name:"CSSProperties"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Позволяет управлять `hovered`-состоянием извне.",name:"hovered",required:!1,type:{name:"boolean"}},activated:{defaultValue:null,description:"Позволяет управлять `activated`-состоянием извне.",name:"activated",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},hasHoverWithChildren:{defaultValue:null,description:`Позволяет родительскому компоненту
иметь \`hovered\`-cостояние при наведении
на любой дочерний элемент.
По умолчанию состояние hovered у родителя сбрасывается.

Присваивается родителькому компоненту.
@example <Tappable hasHoverWithChildren>
  <IconButton />
  <IconButton />
  <IconButton />
</Tappable>`,name:"hasHoverWithChildren",required:!1,type:{name:"boolean"}},unlockParentHover:{defaultValue:null,description:`Позволяет родительскому компоненту показывать hovered-состояние при наведении
на текущий дочерний компонент.

Присваивается дочернему компоненту.
@example <Tappable>
  <IconButton unlockParentHover />
  <IconButton unlockParentHover />
  <IconButton />
</Tappable>`,name:"unlockParentHover",required:!1,type:{name:"boolean"}},activeEffectDelay:{defaultValue:null,description:"Длительность показа `active`-состояния.",name:"activeEffectDelay",required:!1,type:{name:"number"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}},before:{defaultValue:null,description:"Иконка 28 или `<Avatar size={28|32|40|48|72} />`.",name:"before",required:!1,type:{name:"ReactNode"}},badgeBeforeTitle:{defaultValue:null,description:"Иконка 12 или `<Badge />`. Добавится слева от текста `children`.",name:"badgeBeforeTitle",required:!1,type:{name:"ReactNode"}},badgeAfterTitle:{defaultValue:null,description:"Иконка 12 или `<Badge />`. Добавится справа от текста `children`.",name:"badgeAfterTitle",required:!1,type:{name:"ReactNode"}},badgeBeforeSubtitle:{defaultValue:null,description:"Иконка 12. Добавится слева от текста `subtitle`.",name:"badgeBeforeSubtitle",required:!1,type:{name:"ReactNode"}},badgeAfterSubtitle:{defaultValue:null,description:"Иконка 12. Добавится справа от текста `subtitle`.",name:"badgeAfterSubtitle",required:!1,type:{name:"ReactNode"}},indicator:{defaultValue:null,description:"Контейнер для текста справа от `children`.",name:"indicator",required:!1,type:{name:"ReactNode"}},overTitle:{defaultValue:null,description:"Дополнительная строка текста над `children`.",name:"overTitle",required:!1,type:{name:"ReactNode"}},subtitle:{defaultValue:null,description:"Дополнительная строка текста под `children`.",name:"subtitle",required:!1,type:{name:"ReactNode"}},extraSubtitle:{defaultValue:null,description:"Дополнительная строка текста под `children` и `subtitle`.",name:"extraSubtitle",required:!1,type:{name:"ReactNode"}},chevronSize:{defaultValue:null,description:"Размер chevron.",name:"chevronSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},multiline:{defaultValue:null,description:"Включает многострочный режим для отображения текста.",name:"multiline",required:!1,type:{name:"boolean"}}}}}catch{}try{a.Content.displayName="Accordion.Content",a.Content.__docgenInfo={description:"",displayName:"Accordion.Content",props:{getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}const{fn:$}=__STORYBOOK_MODULE_TEST__,K={title:"Data Display/Accordion",component:a,args:{onChange:$()},parameters:S("Accordion",x,q),tags:["Отображение данных"]},y={render:u=>e.jsxs(a,{...u,children:[e.jsx(a.Summary,{children:"Title"}),e.jsx(a.Content,{children:e.jsx(R,{children:"Content"})})]}),decorators:[u=>e.jsx(N,{children:e.jsx(u,{})})]};y.parameters={...y.parameters,docs:{...y.parameters?.docs,source:{originalSource:`{
  render: args => <Accordion {...args}>
      <Accordion.Summary>Title</Accordion.Summary>
      <Accordion.Content>
        <Div>Content</Div>
      </Accordion.Content>
    </Accordion>,
  decorators: [Component => <Group>
        <Component />
      </Group>]
}`,...y.parameters?.docs?.source}}};const Y=["Playground"],r4=Object.freeze(Object.defineProperty({__proto__:null,Playground:y,__namedExportsOrder:Y,default:K},Symbol.toStringTag,{value:"Module"}));export{a as A,y as P,r4 as a};
