import{r as v,n as q,k as x,m as S,j as e,i as A}from"./iframe-DTUKIQpa.js";import{D as R,C as N}from"./constants-DdkjnEgz.js";import{c as I}from"./createStoryParameters-CcwS40kl.js";import{D as T}from"./Div-B72Y_Vxp.js";import{G as M}from"./Group-CZGORHer.js";import{u as H}from"./useEnsuredControl-DZdU0p0r.js";import{u as P}from"./useCSSKeyframesAnimationController-CUu1yLXE.js";import{c as k}from"./callMultiple-ChqatQlo.js";import{S as j}from"./SimpleCell-CDk2kNxF.js";import{a as L,I as O}from"./chevron_up_24-ilJGQ0lV.js";const y=v.createContext({labelId:"",contentId:"",expanded:!1,onChange:q});try{y.displayName="AccordionContext",y.__docgenInfo={description:"",displayName:"AccordionContext",props:{}}}catch{}const z="_icon_hc0xt_1",W="_host_hc0xt_5",w="_inEnter_hc0xt_24",G="_inEntered_hc0xt_34",U="_inExit_hc0xt_38",$="_inExited_hc0xt_48",t={icon:z,host:W,in:"_in_hc0xt_9",inEnter:w,inEntered:G,inExit:U,inExited:$},D="--vkui_internal--AccordionContent_height",K={enter:t.inEnter,entering:t.inEnter,entered:t.inEntered,exit:t.inExit,exiting:t.inExit,exited:t.inExited},C=({getRootRef:u,getRef:l,className:o,children:i,...d})=>{const{expanded:s,labelId:c,contentId:m}=v.useContext(y),n=x(l),[r,f]=P(s?"enter":"exit",void 0,!0);return S(()=>{const p=n.current;if(p)switch(r){case"enter":case"exit":p.style.setProperty(D,`${p.scrollHeight}px`);break;case"entered":case"exited":p.style.removeProperty(D);break}},[r,n]),e.jsx("div",{ref:u,id:m,role:"region","aria-labelledby":c,"aria-hidden":!s,className:A(t.host,o),...d,children:e.jsx("div",{ref:n,className:A(t.in,K[r]),...f,children:i})})};try{C.displayName="AccordionContent",C.__docgenInfo={description:"",displayName:"AccordionContent",props:{getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}const b=({after:u,before:l,ExpandIcon:o=L,CollapseIcon:i=O,iconPosition:d="after",onClick:s,children:c,...m})=>{const{expanded:n,labelId:r,contentId:f,onChange:p}=v.useContext(y),V=n?i:o,h=e.jsx("span",{className:"vkuiIcon",children:e.jsx(V,{className:t.icon})}),g=()=>p(!n);return e.jsx(j,{id:r,"aria-expanded":n,"aria-controls":f,onClick:k(g,s),before:e.jsxs(e.Fragment,{children:[d==="before"&&h,l]}),after:e.jsxs(e.Fragment,{children:[u,d==="after"&&h]}),...m,children:c})};try{b.displayName="AccordionSummary",b.__docgenInfo={description:"",displayName:"AccordionSummary",props:{ExpandIcon:{defaultValue:null,description:"Иконка для раскрытия контента.",name:"ExpandIcon",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},CollapseIcon:{defaultValue:null,description:"Иконка для сворачивания контента.",name:"CollapseIcon",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},iconPosition:{defaultValue:{value:"after"},description:"Позиция иконки.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"after"'},{value:'"before"'}]}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},after:{defaultValue:null,description:"Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.",name:"after",required:!1,type:{name:"ReactNode"}},borderRadiusMode:{defaultValue:null,description:"Задает border-radius элементу\nВ режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`.",name:"borderRadiusMode",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"auto"'}]}},activeClassName:{defaultValue:null,description:"Стиль подсветки `active`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `activeMode`.",name:"activeClassName",required:!1,type:{name:"string"}},hoverClassName:{defaultValue:null,description:"Стиль подсветки `hover`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `hoverMode`.",name:"hoverClassName",required:!1,type:{name:"string"}},baseClassName:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `className`.",name:"baseClassName",required:!1,type:{name:"string | false"}},baseStyle:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `style`.",name:"baseStyle",required:!1,type:{name:"CSSProperties"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Позволяет управлять `hovered`-состоянием извне.",name:"hovered",required:!1,type:{name:"boolean"}},activated:{defaultValue:null,description:"Позволяет управлять `activated`-состоянием извне.",name:"activated",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},hasHoverWithChildren:{defaultValue:null,description:`Позволяет родительскому компоненту
иметь \`hovered\`-cостояние при наведении
на любой дочерний элемент.
По умолчанию состояние hovered у родителя сбрасывается.

Присваивается родителькому компоненту.
@example <Tappable hasHoverWithChildren>
  <IconButton />
  <IconButton />
  <IconButton />
</Tappable>`,name:"hasHoverWithChildren",required:!1,type:{name:"boolean"}},unlockParentHover:{defaultValue:null,description:`Позволяет родительскому компоненту показывать hovered-состояние при наведении
на текущий дочерний компонент.

Присваивается дочернему компоненту.
@example <Tappable>
  <IconButton unlockParentHover />
  <IconButton unlockParentHover />
  <IconButton />
</Tappable>`,name:"unlockParentHover",required:!1,type:{name:"boolean"}},activeEffectDelay:{defaultValue:null,description:"Длительность показа `active`-состояния.",name:"activeEffectDelay",required:!1,type:{name:"number"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}},before:{defaultValue:null,description:"Иконка 28 или `<Avatar size={28|32|40|48|72} />`.",name:"before",required:!1,type:{name:"ReactNode"}},badgeBeforeTitle:{defaultValue:null,description:"Иконка 12 или `<Badge />`. Добавится слева от текста `children`.",name:"badgeBeforeTitle",required:!1,type:{name:"ReactNode"}},badgeAfterTitle:{defaultValue:null,description:"Иконка 12 или `<Badge />`. Добавится справа от текста `children`.",name:"badgeAfterTitle",required:!1,type:{name:"ReactNode"}},badgeBeforeSubtitle:{defaultValue:null,description:"Иконка 12. Добавится слева от текста `subtitle`.",name:"badgeBeforeSubtitle",required:!1,type:{name:"ReactNode"}},badgeAfterSubtitle:{defaultValue:null,description:"Иконка 12. Добавится справа от текста `subtitle`.",name:"badgeAfterSubtitle",required:!1,type:{name:"ReactNode"}},indicator:{defaultValue:null,description:"Контейнер для текста справа от `children`.",name:"indicator",required:!1,type:{name:"ReactNode"}},overTitle:{defaultValue:null,description:"Дополнительная строка текста над `children`.",name:"overTitle",required:!1,type:{name:"ReactNode"}},subtitle:{defaultValue:null,description:"Дополнительная строка текста под `children`.",name:"subtitle",required:!1,type:{name:"ReactNode"}},extraSubtitle:{defaultValue:null,description:"Дополнительная строка текста под `children` и `subtitle`.",name:"extraSubtitle",required:!1,type:{name:"ReactNode"}},chevronSize:{defaultValue:null,description:"Размер chevron.",name:"chevronSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},multiline:{defaultValue:null,description:"Включает многострочный режим для отображения текста.",name:"multiline",required:!1,type:{name:"boolean"}}}}}catch{}function Y(u){const l=v.useId(),o=u??`Accordion${l}`,i=`AccordionContent${u??l}`;return{labelId:o,contentId:i}}const a=({id:u,expanded:l,defaultExpanded:o=!1,onChange:i,children:d,...s})=>{const{labelId:c,contentId:m}=Y(u),[n,r]=H({value:l,defaultValue:o,onChange:i,disabled:s.disabled}),f=v.useMemo(()=>({labelId:c,contentId:m,expanded:n||!1,onChange:r}),[m,n,c,r]);return e.jsx(y.Provider,{value:f,children:d})};a.Summary=b;a.Content=C;try{a.displayName="Accordion",a.__docgenInfo={description:"",displayName:"Accordion",props:{id:{defaultValue:null,description:"Используется для генерации id для заголовка и контента(a11y).",name:"id",required:!1,type:{name:"string"}},expanded:{defaultValue:null,description:"Управляет раскрытием и скрытием контента.",name:"expanded",required:!1,type:{name:"boolean"}},defaultExpanded:{defaultValue:{value:"false"},description:"Значение по умолчанию.",name:"defaultExpanded",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Возвращает новое значение при изменении раскрытия/сворачивания контента.",name:"onChange",required:!1,type:{name:"((newValue: boolean) => void)"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{a.Summary.displayName="Accordion.Summary",a.Summary.__docgenInfo={description:"",displayName:"Accordion.Summary",props:{ExpandIcon:{defaultValue:null,description:"Иконка для раскрытия контента.",name:"ExpandIcon",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},CollapseIcon:{defaultValue:null,description:"Иконка для сворачивания контента.",name:"CollapseIcon",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},iconPosition:{defaultValue:{value:"after"},description:"Позиция иконки.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"after"'},{value:'"before"'}]}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},after:{defaultValue:null,description:"Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.",name:"after",required:!1,type:{name:"ReactNode"}},borderRadiusMode:{defaultValue:null,description:"Задает border-radius элементу\nВ режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`.",name:"borderRadiusMode",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"auto"'}]}},activeClassName:{defaultValue:null,description:"Стиль подсветки `active`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `activeMode`.",name:"activeClassName",required:!1,type:{name:"string"}},hoverClassName:{defaultValue:null,description:"Стиль подсветки `hover`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `hoverMode`.",name:"hoverClassName",required:!1,type:{name:"string"}},baseClassName:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `className`.",name:"baseClassName",required:!1,type:{name:"string | false"}},baseStyle:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `style`.",name:"baseStyle",required:!1,type:{name:"CSSProperties"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Позволяет управлять `hovered`-состоянием извне.",name:"hovered",required:!1,type:{name:"boolean"}},activated:{defaultValue:null,description:"Позволяет управлять `activated`-состоянием извне.",name:"activated",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:null,description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},hasHoverWithChildren:{defaultValue:null,description:`Позволяет родительскому компоненту
иметь \`hovered\`-cостояние при наведении
на любой дочерний элемент.
По умолчанию состояние hovered у родителя сбрасывается.

Присваивается родителькому компоненту.
@example <Tappable hasHoverWithChildren>
  <IconButton />
  <IconButton />
  <IconButton />
</Tappable>`,name:"hasHoverWithChildren",required:!1,type:{name:"boolean"}},unlockParentHover:{defaultValue:null,description:`Позволяет родительскому компоненту показывать hovered-состояние при наведении
на текущий дочерний компонент.

Присваивается дочернему компоненту.
@example <Tappable>
  <IconButton unlockParentHover />
  <IconButton unlockParentHover />
  <IconButton />
</Tappable>`,name:"unlockParentHover",required:!1,type:{name:"boolean"}},activeEffectDelay:{defaultValue:null,description:"Длительность показа `active`-состояния.",name:"activeEffectDelay",required:!1,type:{name:"number"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}},before:{defaultValue:null,description:"Иконка 28 или `<Avatar size={28|32|40|48|72} />`.",name:"before",required:!1,type:{name:"ReactNode"}},badgeBeforeTitle:{defaultValue:null,description:"Иконка 12 или `<Badge />`. Добавится слева от текста `children`.",name:"badgeBeforeTitle",required:!1,type:{name:"ReactNode"}},badgeAfterTitle:{defaultValue:null,description:"Иконка 12 или `<Badge />`. Добавится справа от текста `children`.",name:"badgeAfterTitle",required:!1,type:{name:"ReactNode"}},badgeBeforeSubtitle:{defaultValue:null,description:"Иконка 12. Добавится слева от текста `subtitle`.",name:"badgeBeforeSubtitle",required:!1,type:{name:"ReactNode"}},badgeAfterSubtitle:{defaultValue:null,description:"Иконка 12. Добавится справа от текста `subtitle`.",name:"badgeAfterSubtitle",required:!1,type:{name:"ReactNode"}},indicator:{defaultValue:null,description:"Контейнер для текста справа от `children`.",name:"indicator",required:!1,type:{name:"ReactNode"}},overTitle:{defaultValue:null,description:"Дополнительная строка текста над `children`.",name:"overTitle",required:!1,type:{name:"ReactNode"}},subtitle:{defaultValue:null,description:"Дополнительная строка текста под `children`.",name:"subtitle",required:!1,type:{name:"ReactNode"}},extraSubtitle:{defaultValue:null,description:"Дополнительная строка текста под `children` и `subtitle`.",name:"extraSubtitle",required:!1,type:{name:"ReactNode"}},chevronSize:{defaultValue:null,description:"Размер chevron.",name:"chevronSize",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'}]}},multiline:{defaultValue:null,description:"Включает многострочный режим для отображения текста.",name:"multiline",required:!1,type:{name:"boolean"}}}}}catch{}try{a.Content.displayName="Accordion.Content",a.Content.__docgenInfo={description:"",displayName:"Accordion.Content",props:{getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}const{fn:J}=__STORYBOOK_MODULE_TEST__,Q={title:"Blocks/Accordion",component:a,args:{onChange:J()},parameters:I("Accordion",N,R)},E={render:u=>e.jsxs(a,{...u,children:[e.jsx(a.Summary,{children:"Title"}),e.jsx(a.Content,{children:e.jsx(T,{children:"Content"})})]}),decorators:[u=>e.jsx(M,{children:e.jsx(u,{})})]};var F,B,_;E.parameters={...E.parameters,docs:{...(F=E.parameters)==null?void 0:F.docs,source:{originalSource:`{
  render: args => <Accordion {...args}>
      <Accordion.Summary>Title</Accordion.Summary>
      <Accordion.Content>
        <Div>Content</Div>
      </Accordion.Content>
    </Accordion>,
  decorators: [Component => <Group>
        <Component />
      </Group>]
}`,...(_=(B=E.parameters)==null?void 0:B.docs)==null?void 0:_.source}}};const X=["Playground"],d4=Object.freeze(Object.defineProperty({__proto__:null,Playground:E,__namedExportsOrder:X,default:Q},Symbol.toStringTag,{value:"Module"}));export{a as A,E as P,d4 as a};
