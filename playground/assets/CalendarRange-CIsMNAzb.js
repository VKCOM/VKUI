import{r as a,q as A4,ao as C,K as v,aa as g4,ap as I,j as h,R as q4,aq as k4}from"./iframe-CNYWi-tv.js";import{N as V4,n as M4,i,a as R4,u as S4,b as _4,s as L,c as t4,d as l4,e as N4,C as r4,f as o4}from"./CalendarHeader-UWx_imzm.js";import{u as x4}from"./useEnsuredControl-BpSX3TsH.js";function H4({focusedDay:t,value:n,setFocusedDay:o,viewDates:[l,D],setViewDate:y}){const[F,f]=a.useState(),[d,m]=a.useState(),b=a.useCallback((s,A)=>{var g,R;const p=A4(s);if(p){if(V4.includes(p)){s.preventDefault();const r=M4(t??(n==null?void 0:n[0]),p);r&&!C(r,l)&&!C(r,D)&&y(r),A?C(r,l)?f(r):r>l&&m(r):C(r,D)?m(r):r<D&&f(r),o(r);return}if(p===v.TAB){o(void 0),A?f(t):m(t);return}(p===v.ENTER||p===v.SPACE)&&g4(s.target)&&(s.preventDefault(),(R=(g=s.target).click)==null||R.call(g))}},[t,n,l,D,o,y]),M=a.useCallback(s=>{b(s,!0)},[b]),T=a.useCallback(s=>{b(s,!1)},[b]),K=a.useCallback(s=>{C(l,s)&&(!F||!i(F,s))&&f(s),C(D,s)&&(!d||!i(d,s))&&m(s)},[l,F,d,D]);return{focusableDayOnFirstCalendar:F,focusableDayOnSecondCalendar:d,handleFirstCalendarKeyDown:M,handleSecondCalendarKeyDown:T,handleDayFocus:K}}function i4({value:t,focusableDayOnFirstCalendar:n,focusableDayOnSecondCalendar:o,viewDate:l,isDayActive:D}){const y=!!(t&&(t[0]&&C(t[0],l)||t[1]&&C(t[1],l))),F=!!(n&&C(n,l)||o&&C(o,l));return a.useCallback(d=>F?!!(n&&i(n,d)||o&&i(o,d)):y?D(d):i(R4(l),d),[F,y,l,D,n,o])}const I4="_host_laqyo_1",T4="_inner_laqyo_14",K4="_header_laqyo_24",V={host:I4,inner:T4,header:K4},d4=(t,n)=>!(n!=null&&n[0])||!n[1]?!1:k4(t,[L(n[0]),I(n[1])]),c4=({value:t,defaultValue:n,onChange:o,disablePast:l,disableFuture:D,shouldDisableDate:y,weekStartsOn:F=1,disablePickers:f,prevMonthLabel:d="Предыдущий месяц",nextMonthLabel:m="Следующий месяц",changeMonthLabel:b="Изменить месяц",changeYearLabel:M="Изменить год","aria-label":T="Календарь",prevMonthIcon:K,nextMonthIcon:s,listenDayChangesForUpdate:A,renderDayContent:p,dayTestId:g,leftPartHeaderTestsData:R,rightPartHeaderTestsData:r,getRootRef:D4,...F4})=>{const E4=a.useCallback(u=>o==null?void 0:o(u||void 0),[o]),[e,j]=x4({value:t,defaultValue:n,onChange:E4}),{viewDate:q,setViewDate:S,setPrevMonth:C4,setNextMonth:p4,focusedDay:_,setFocusedDay:P,isDayFocused:O,isDayDisabled:w,isMonthDisabled:U,isYearDisabled:Y}=S4({value:e,disableFuture:D,disablePast:l,shouldDisableDate:y}),[c,k]=a.useState(),N=_4(q,1),{focusableDayOnFirstCalendar:G,focusableDayOnSecondCalendar:W,handleFirstCalendarKeyDown:B4,handleSecondCalendarKeyDown:f4,handleDayFocus:z}=H4({focusedDay:_,setFocusedDay:P,value:e,viewDates:[q,N],setViewDate:S}),x=a.useCallback(u=>{const B=!e||e[0]===null&&e[1]===null,h4=e&&!!e[0]&&!!e[1];if(B||h4)return[u,null];const[E]=e;return E&&i(u,E)?[L(E),I(E)]:E&&u<E?[L(u),I(E)]:E&&u>E?[E,I(u)]:e},[e]),J=a.useCallback(u=>{j(x(u)),k(void 0)},[j,x]),Q=a.useCallback(u=>d4(u,e),[e]),H=a.useCallback(u=>!!(e!=null&&e[0]&&i(u,e[0])||e!=null&&e[1]&&i(u,e[1])),[e]),X=a.useCallback((u,B)=>!!(t4(u,B)||e!=null&&e[1]&&i(u,e[1])),[e]),Z=a.useCallback((u,B)=>!!(t4(u,B)||c!=null&&c[1]&&i(u,c[1])),[c]),$=a.useCallback((u,B)=>!!(l4(u,B)||e!=null&&e[0]&&i(u,e[0])),[e]),u4=a.useCallback((u,B)=>!!(l4(u,B)||c!=null&&c[0]&&i(u,c[0])),[c]),e4=a.useCallback(u=>k(x(u)),[k,x]),a4=a.useCallback(()=>k(void 0),[k]),n4=a.useCallback(u=>d4(u,c),[c]),y4=a.useCallback(u=>S(N4(u)),[S]),m4=i4({value:e,focusableDayOnFirstCalendar:G,focusableDayOnSecondCalendar:W,viewDate:q,isDayActive:H}),b4=i4({value:e,focusableDayOnFirstCalendar:G,focusableDayOnSecondCalendar:W,viewDate:N,isDayActive:H}),s4=a.useCallback(u=>{_&&i(_,u)||(P(u),z(u))},[_,z,P]);return h.jsxs(q4,{"aria-label":T,...F4,baseClassName:V.host,getRootRef:D4,children:[h.jsxs("div",{className:V.inner,children:[h.jsx(r4,{viewDate:q,onChange:S,nextMonthHidden:!0,onPrevMonth:C4,disablePickers:f,className:V.header,prevMonthLabel:d,nextMonthLabel:m,changeMonthLabel:b,changeYearLabel:M,prevMonthIcon:K,isMonthDisabled:U,isYearDisabled:Y,...R}),h.jsx(o4,{viewDate:q,value:e,weekStartsOn:F,onKeyDown:B4,onDayFocus:s4,isDayFocused:O,isDayFocusable:m4,onDayChange:J,isDaySelected:Q,isDayActive:H,isDaySelectionEnd:X,isDaySelectionStart:$,isDayHinted:n4,onDayEnter:e4,onDayLeave:a4,isHintedDaySelectionEnd:Z,isHintedDaySelectionStart:u4,isDayDisabled:w,listenDayChangesForUpdate:A,renderDayContent:p,dayTestId:g})]}),h.jsxs("div",{className:V.inner,children:[h.jsx(r4,{viewDate:N,onChange:y4,prevMonthHidden:!0,onNextMonth:p4,disablePickers:f,className:V.header,prevMonthLabel:d,nextMonthLabel:m,changeMonthLabel:b,changeYearLabel:M,nextMonthIcon:s,isMonthDisabled:U,isYearDisabled:Y,...r}),h.jsx(o4,{viewDate:N,value:e,weekStartsOn:F,onKeyDown:f4,onDayFocus:s4,isDayFocused:O,isDayFocusable:b4,onDayChange:J,isDaySelected:Q,isDayActive:H,isDaySelectionEnd:X,isDaySelectionStart:$,isDayHinted:n4,onDayEnter:e4,onDayLeave:a4,isHintedDaySelectionEnd:Z,isHintedDaySelectionStart:u4,isDayDisabled:w,listenDayChangesForUpdate:A,renderDayContent:p,dayTestId:g})]})]})};try{c4.displayName="CalendarRange",c4.__docgenInfo={description:"",displayName:"CalendarRange",props:{value:{defaultValue:null,description:"Текущий выбранный промежуток.",name:"value",required:!1,type:{name:"DateRangeType | null"}},defaultValue:{defaultValue:null,description:"Начальный промежуток при монтировании.",name:"defaultValue",required:!1,type:{name:"DateRangeType | null"}},disablePast:{defaultValue:null,description:"Запрещает выбор даты в прошлом.\nПрименяется, если не заданы `shouldDisableDate` и `disableFuture`.",name:"disablePast",required:!1,type:{name:"boolean"}},disableFuture:{defaultValue:null,description:"Запрещает выбор даты в будущем.\nПрименяется, если не задано `shouldDisableDate`.",name:"disableFuture",required:!1,type:{name:"boolean"}},disablePickers:{defaultValue:null,description:"Отключает селекторы выбора месяца/года.",name:"disablePickers",required:!1,type:{name:"boolean"}},changeDayLabel:{defaultValue:null,description:`\`aria-label\` для изменения дня.
@deprecated Since 7.4.0.

Будет удалeно в **VKUI v8**. Использовалось для задания aria-label для контейнера дней в календаре.
Теперь этот контейнер является таблицей (с помощью role="grid") и
в aria-label рендерится текущий открытый в календаре месяц и год.`,name:"changeDayLabel",required:!1,type:{name:"string"}},weekStartsOn:{defaultValue:{value:"1"},description:"День недели, с которого начинается неделя.",name:"weekStartsOn",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"},{value:"2"},{value:"3"},{value:"4"},{value:"5"},{value:"6"}]}},onChange:{defaultValue:null,description:"Обработчик изменения выбранного промежутка.",name:"onChange",required:!1,type:{name:"((value: DateRangeType) => void)"}},shouldDisableDate:{defaultValue:null,description:"Функция для проверки запрета выбора даты.",name:"shouldDisableDate",required:!1,type:{name:"((value: Date) => boolean)"}},onClose:{defaultValue:null,description:"@deprecated Свойство не используется.",name:"onClose",required:!1,type:{name:"(() => void)"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},prevMonthLabel:{defaultValue:{value:"Предыдущий месяц"},description:"`aria-label` для кнопки предыдущего месяца.",name:"prevMonthLabel",required:!1,type:{name:"string"}},nextMonthLabel:{defaultValue:{value:"Следующий месяц"},description:"`aria-label` для кнопки следующего месяца.",name:"nextMonthLabel",required:!1,type:{name:"string"}},changeMonthLabel:{defaultValue:{value:"Изменить месяц"},description:"`aria-label` для селектора месяца.",name:"changeMonthLabel",required:!1,type:{name:"string"}},changeYearLabel:{defaultValue:{value:"Изменить год"},description:"`aria-label` для селектора года.",name:"changeYearLabel",required:!1,type:{name:"string"}},prevMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки предыдущего месяца.",name:"prevMonthIcon",required:!1,type:{name:"ReactNode"}},nextMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки следующего месяца.",name:"nextMonthIcon",required:!1,type:{name:"ReactNode"}},listenDayChangesForUpdate:{defaultValue:null,description:"Следить за изменениями дней для обновления UI.",name:"listenDayChangesForUpdate",required:!1,type:{name:"boolean"}},renderDayContent:{defaultValue:null,description:"Кастомизация отображения содержимого дня.",name:"renderDayContent",required:!1,type:{name:"((day: Date) => ReactNode)"}},dayTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для дня в календаре.",name:"dayTestId",required:!1,type:{name:"string | ((day: Date) => string)"}},leftPartHeaderTestsData:{defaultValue:null,description:"Передает атрибуты `data-testid` для интерактивных элементов в заголовке календаря в левой части.",name:"leftPartHeaderTestsData",required:!1,type:{name:"CalendarHeaderTestsProps"}},rightPartHeaderTestsData:{defaultValue:null,description:"Передает атрибуты `data-testid` для интерактивных элементов в заголовке календаря в правой части.",name:"rightPartHeaderTestsData",required:!1,type:{name:"CalendarHeaderTestsProps"}}}}}catch{}export{c4 as C};
