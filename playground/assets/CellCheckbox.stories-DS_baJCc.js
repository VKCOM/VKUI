import{w as e,b as p,j as r}from"./iframe-DJZLDe2v.js";import{D as a,C as i}from"./constants-DdkjnEgz.js";import{g as s}from"./mock-CiudtyON.js";import{A as l}from"./Avatar-I0JIbCuY.js";import{G as n}from"./Group-ZTDDYGb3.js";import{a as c,C as u}from"./Cell-CebbIM9i.js";import"./preload-helper-PPVm8Dsz.js";import"./ImageBase-_jMBtqEX.js";import"./Clickable-DJi6sM1Y.js";import"./useFocusVisible-B_h8gO-N.js";import"./useFocusVisibleClassName-CRC2ipiX.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-BKNEasHi.js";import"./useColorScheme-DOPlqjNA.js";import"./InputUtils-CYWMeBJ6.js";import"./useFocusWithin-BwFTxwKW.js";import"./useIsClient-BfxQDn7W.js";import"./useConfigDirection-Codxpgcm.js";import"./online_mobile_12-CAXQdLdL.js";import"./SvgIconRootV2-DyTPJ3EC.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-D8Ch1fTG.js";import"./Removable-q5QE-8nA.js";import"./children-Dhk2DcjP.js";import"./IconButton-CMOFK_Ua.js";import"./Tappable-CY0nsltg.js";import"./VisuallyHidden-D0jMNSCO.js";import"./useGlobalEventListener-BxOtw4jo.js";import"./useEventListener-Ghw_nxPQ.js";import"./cancel_24-rN7d2YWh.js";import"./SimpleCell-DyfECqPx.js";import"./Headline-BcxcoLKm.js";import"./Subhead-DeeiPlYW.js";import"./chevron_compact_right_24-BQ1Pic7C.js";import"./chevron_16-Dn3k9T89.js";import"./AdaptiveIconRenderer-B5fGDjcg.js";import"./reorder_ios_24-C-lGXIMb.js";import"./check_box_on_24-BYmefbAu.js";import"./check_circle_on_24-CqRyHPBP.js";import"./constants-CtEIZ0Vq.js";const mr={title:"Buttons/Cell/Checkbox",component:c,parameters:{...i,...a},decorators:[e,p]},o={args:{defaultChecked:!0},decorators:[(t,m)=>r.jsx(n,{children:r.jsx(u,{Component:"label",before:r.jsx(l,{src:s("user_xyz")}),after:r.jsx(t,{...m.args}),children:"Игорь Федоров"})})]};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...o.parameters?.docs?.source}}};const er=["Playground"];export{o as Playground,er as __namedExportsOrder,mr as default};
