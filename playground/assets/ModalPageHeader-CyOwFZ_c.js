import{j as t,h as F,R as A4,n as N,m as F4,i as U,r as Z,q as h4,K as y4,a7 as g4,X as w,aC as M4,c as _4,aL as b4,P as S4,S as V4}from"./iframe-DvsMcRqO.js";import{i as v4}from"./range-rFhSCI5u.js";import{B as R4,u as q4,c as P4,d as T4,b as k4,e as x4,S as v,f as x}from"./ModalOutlet-eeM5FkIT.js";import{u as u4}from"./useAdaptivityWithJSMediaQueries-STxsU3hJ.js";import{F as I4}from"./FocusTrap-CH7eC_Xz.js";import{h as X}from"./react_utils-CSZjvU4X.js";import{M as N4}from"./ModalOutsideButton-jWnHLU91.js";import{M as H4}from"./ModalOutsideButtons-Dbxx1QFu.js";import{C as O4}from"./CustomScrollView-DrQcp-qz.js";import{I as L4}from"./cancel_20-BBeUn6f6.js";import{u as W4}from"./useCSSTransition-CNs5zXS8.js";const j4="_host_1eoj5_1",G4={host:j4},H=({children:u,className:a,getRootRef:l,...o})=>t.jsx(O4,{className:F(a,G4.host),getRootRef:l,...o,children:u});try{H.displayName="ModalPageContent",H.__docgenInfo={description:"",displayName:"ModalPageContent",props:{getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}const z4="_host_19iim_1",$4="_hostMobile_19iim_11",K4="_hostMobileSafeAreaInsetTop_19iim_22",U4="_hostMobileSafeAreaInsetTopWithCustomOffset_19iim_26",w4="_hostDesktop_19iim_33",X4="_hostDesktopMaxWidthS_19iim_52",J4="_hostDesktopMaxWidthM_19iim_56",Q4="_hostDesktopMaxWidthL_19iim_60",Y4="_document_19iim_64",Z4="_documentMobile_19iim_77",uu="_documentStateEnter_19iim_94",eu="_documentStateEntering_19iim_98",tu="_documentStateExiting_19iim_103",au="_documentStateExited_19iim_108",nu="_documentDesktop_19iim_113",ou="_children_19iim_136",lu="_childrenMobile_19iim_156",su="_childrenDesktop_19iim_161",e={host:z4,hostMobile:$4,hostMobileSafeAreaInsetTop:K4,hostMobileSafeAreaInsetTopWithCustomOffset:U4,hostDesktop:w4,hostDesktopMaxWidthS:X4,hostDesktopMaxWidthM:J4,hostDesktopMaxWidthL:Q4,document:Y4,documentMobile:Z4,documentStateEnter:uu,documentStateEntering:eu,documentStateExiting:tu,documentStateExited:au,documentDesktop:nu,children:ou,childrenMobile:lu,childrenDesktop:su},O=({isDesktop:u,getRef:a,disableContentPanningGesture:l,header:o,children:r,footer:s,outsideButtons:i,modalContentTestId:E,modalDismissButtonTestId:m,modalDismissButtonLabel:p,hideCloseButton:D,closable:C,onClose:h=N,...y})=>{const g=l?R4:void 0,B=D||!u?null:t.jsx(N4,{"data-testid":m,onClick:C?function(n){h("click-close-button",n)}:N,"aria-label":p,children:t.jsx(L4,{})});return t.jsxs(A4,{role:"document",baseClassName:e.document,...y,children:[t.jsxs("div",{className:F(e.children,u?e.childrenDesktop:e.childrenMobile),children:[X(o)&&o,t.jsx(H,{getRootRef:a,"data-testid":E,...g,children:r}),X(s)&&s]}),u&&(B||i)&&t.jsxs(H4,{children:[B,i]})]})};try{O.displayName="ModalPageBase",O.__docgenInfo={description:"",displayName:"ModalPageBase",props:{isDesktop:{defaultValue:null,description:"",name:"isDesktop",required:!1,type:{name:"boolean"}},closable:{defaultValue:null,description:"",name:"closable",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},footer:{defaultValue:null,description:"Подвал модальной страницы, `<ModalPageFooter />`.",name:"footer",required:!1,type:{name:"ReactNode"}},header:{defaultValue:null,description:"Шапка модальной страницы, `<ModalPageHeader />`.",name:"header",required:!1,type:{name:"ReactNode"}},onClose:{defaultValue:null,description:"Будет вызвано при начале закрытия модалки.",name:"onClose",required:!1,type:{name:"((reason: ModalPageCloseReason, event?: UIEvent<HTMLElement, UIEvent>) => void)"}},hideCloseButton:{defaultValue:null,description:"Скрывает кнопку закрытия (актуально для iOS, так как можно отрисовать кнопку закрытия внутри модалки).",name:"hideCloseButton",required:!1,type:{name:"boolean"}},modalContentTestId:{defaultValue:null,description:"`data-testid` для содержимого модального окна.",name:"modalContentTestId",required:!1,type:{name:"string"}},modalDismissButtonTestId:{defaultValue:null,description:"`data-testid` для кнопки закрытия.",name:"modalDismissButtonTestId",required:!1,type:{name:"string"}},modalDismissButtonLabel:{defaultValue:null,description:"Текст для скринридера.",name:"modalDismissButtonLabel",required:!1,type:{name:"string"}},disableContentPanningGesture:{defaultValue:null,description:"Отключает раскрытие и закрытие панели в мобильном виде.",name:"disableContentPanningGesture",required:!1,type:{name:"boolean"}},outsideButtons:{defaultValue:null,description:"Управляющие элементы под кнопкой закрытия.\n\nДоступно только в `compact`-режиме. Рекомендуется размещать иконки размера 20, обернутые в ModalOutsideButton.",name:"outsideButtons",required:!1,type:{name:"ReactNode"}}}}}catch{}const iu={appear:e.documentStateEnter,appearing:e.documentStateEntering,enter:e.documentStateEnter,entering:e.documentStateEntering,exiting:e.documentStateExiting,exited:e.documentStateExited},L=({open:u,header:a,footer:l,size:o,height:r,children:s,className:i,style:E,snapPoint:m,onSnapPointChange:p,getModalContentRef:D,ModalOverlay:C=k4,modalOverlayTestId:h,modalContentTestId:y,modalDismissButtonTestId:g,modalDismissButtonLabel:B="Закрыть",outsideButtons:f,noFocusToDialog:n,hideCloseButton:R,preventClose:M,disableContentPanningGesture:A,restoreFocus:d,onOpen:q,onOpened:P,onClose:_=N,onClosed:T,disableFocusTrap:e4,disableModalOverlay:W,...t4})=>{const{hasCustomPanelHeaderAfter:a4}=F4(),[b,{ref:n4,onTransitionEnd:o4}]=W4(u,{enableAppear:!0,onEnter(){q==null||q()},onEntered(){P==null||P()},onExited(){T==null||T()}}),j=b==="appeared"||b==="entered",k=b==="exited",V=!M&&j,{sizeX:l4,isDesktop:c}=u4(),G=!c&&!M&&b!=="exited",{opened:z}=q4(G),[{initialStyle:$,setSheetEl:s4,setSheetScrollEl:i4,setBackdropEl:d4},r4]=P4(G,{blocked:z,snapPoint:m,sheetCSSProperty:"--vkui_internal_ModalPageDocument--snapPoint",backdropCSSProperty:"--vkui_internal--modal-overlay--opacity",onSnapPointChange:p,onDismiss(){_("swipe-down")}}),E4=z?{"--vkui_internal_ModalPageDocument--safeAreaInsetBottom":"0px",...$}:$,m4=U(s4,n4),p4=U(i4,D),[D4,c4]=ru(c?o:"s"),C4=!W&&t.jsx(C,{getRootRef:d4,"data-testid":h,visible:u,onClick:V?function(f4){_("click-overlay",f4)}:void 0}),B4=Z.useCallback(K=>{V&&h4(K)===y4.ESCAPE&&_("escape-key")},[V,_]);return g4(!k),t.jsxs(T4,{hidden:k,isDesktop:c,onKeyDown:B4,disableModalOverlay:W,children:[C4,t.jsx(I4,{...t4,autoFocus:!n,restoreFocus:d,role:"dialog","aria-modal":"true",disabled:!j||k||e4,className:F(i,e.host,c?e.hostDesktop:e.hostMobile,!c&&(a4?e.hostMobileSafeAreaInsetTopWithCustomOffset:e.hostMobileSafeAreaInsetTop),D4,l4==="regular"&&"vkuiInternalModalPage--sizeX-regular"),style:w(w(c4,Eu(r)),E),children:t.jsx(O,{...r4,getRootRef:m4,getRef:p4,style:E4,className:F(c?e.documentDesktop:e.documentMobile,iu[b]),onTransitionEnd:o4,isDesktop:c,disableContentPanningGesture:A,header:a,footer:l,outsideButtons:f,modalContentTestId:y,modalDismissButtonTestId:g,modalDismissButtonLabel:B,hideCloseButton:R,closable:V,onClose:_,children:s})})]})},du={s:e.hostDesktopMaxWidthS,m:e.hostDesktopMaxWidthM,l:e.hostDesktopMaxWidthL};function ru(u="s"){return typeof u=="string"?[du[u],void 0]:[void 0,typeof u=="number"?{"--vkui_internal_ModalPage--desktopMaxWidth":`${u}px`}:void 0]}function Eu(u){return u!==void 0?{"--vkui_internal_ModalPage--userHeight":typeof u=="number"?`${u}px`:u}:void 0}try{L.displayName="ModalPageInternal",L.__docgenInfo={description:"В компоненте заложена вся логика модального окна.",displayName:"ModalPageInternal",props:{snapPoint:{defaultValue:null,description:"",name:"snapPoint",required:!0,type:{name:"SnapPoint"}},ModalOverlay:{defaultValue:{value:`({
  visible = false,
  position = 'absolute',
  getRootRef,
  onClick,
  ...restProps
}: ModalOverlayProps) => {
  const [transitionState, { ref, onTransitionEnd }] = useCSSTransition<HTMLDivElement>(visible, {
    enableAppear: true,
  });
  const handleRef = useExternRef(getRootRef, ref);

  return (
    <div
      {...restProps}
      ref={handleRef}
      aria-hidden="true"
      hidden={transitionState === 'exited'}
      className={classNames(
        styles.host,
        onClick === undefined && styles.nonInteractive,
        positionClassNames[position],
        transitionStateClassNames[transitionState],
      )}
      onClick={onClick}
      onTransitionEnd={onTransitionEnd}
    />
  );
}`},description:"",name:"ModalOverlay",required:!1,type:{name:"ComponentType<ModalOverlayProps>"}},onSnapPointChange:{defaultValue:null,description:"",name:"onSnapPointChange",required:!1,type:{name:"SnapPointChange"}},footer:{defaultValue:null,description:"Подвал модальной страницы, `<ModalPageFooter />`.",name:"footer",required:!1,type:{name:"ReactNode"}},header:{defaultValue:null,description:"Шапка модальной страницы, `<ModalPageHeader />`.",name:"header",required:!1,type:{name:"ReactNode"}},style:{defaultValue:null,description:"Дополнительные стили.",name:"style",required:!1,type:{name:'Omit<CSSProperties, "height" | "maxHeight" | "maxWidth">'}},height:{defaultValue:null,description:`Задаёт модальному окну фиксированную высоту.
Можно передать числовое значение в пикселях, а можно строкой, в том числе и в процентах "50%".
В мобильной версии 'settlingHeight' будет считаться относительно заданного height.`,name:"height",required:!1,type:{name:"string | number"}},open:{defaultValue:{value:"false"},description:"Состояние видимости.",name:"open",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"Задаёт контенту максимальную ширину на десктопе.",name:"size",required:!1,type:{name:'number | "s" | "m" | "l"'}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},onClose:{defaultValue:null,description:"Будет вызвано при начале закрытия модалки.",name:"onClose",required:!1,type:{name:"((reason: ModalPageCloseReason, event?: UIEvent<HTMLElement, UIEvent>) => void)"}},restoreFocus:{defaultValue:{value:"true"},description:"",name:"restoreFocus",required:!1,type:{name:"boolean | (() => boolean | HTMLElement)"}},onOpen:{defaultValue:null,description:"Будет вызвано при начале открытия модалки.",name:"onOpen",required:!1,type:{name:"VoidFunction"}},disableFocusTrap:{defaultValue:null,description:"Позволяет отключить захват фокуса.\n\nНужно использовать, когда поверх одной модалки открывается другая, чтобы два `FocusTrap` не конфликтовали.",name:"disableFocusTrap",required:!1,type:{name:"boolean"}},modalOverlayTestId:{defaultValue:null,description:"`data-testid` для оверлея.",name:"modalOverlayTestId",required:!1,type:{name:"string"}},noFocusToDialog:{defaultValue:null,description:"Отключает фокус на интерактивный элемент после открытия модалки.\n\n> Важно установить фокус после открытия в любое место модалки используя событие `onOpened`, иначе не будет работать закрытие по нажатию `Esc`.",name:"noFocusToDialog",required:!1,type:{name:"boolean"}},onOpened:{defaultValue:null,description:"Будет вызвано при окончательном открытии модалки.",name:"onOpened",required:!1,type:{name:"VoidFunction"}},onClosed:{defaultValue:null,description:"Будет вызвано при окончательном закрытии модалки.",name:"onClosed",required:!1,type:{name:"VoidFunction"}},disableModalOverlay:{defaultValue:null,description:"Отключает отображение и взаимодействие с фоном модалки.\n> При использовании `ModalPage` внутри `ModalRoot` есть особенность использования этого свойства.\n> Об этом можно почитать на странице документации [`ModalRoot`](/components/modal-root#otklyuchenie-zadnego-fona-u-konkretnogo-modalnogo-okna).",name:"disableModalOverlay",required:!1,type:{name:"boolean"}},hideCloseButton:{defaultValue:null,description:"Скрывает кнопку закрытия (актуально для iOS, так как можно отрисовать кнопку закрытия внутри модалки).",name:"hideCloseButton",required:!1,type:{name:"boolean"}},modalContentTestId:{defaultValue:null,description:"`data-testid` для содержимого модального окна.",name:"modalContentTestId",required:!1,type:{name:"string"}},getModalContentRef:{defaultValue:null,description:"Возвращает DOM-элемент содержимого модального окна.",name:"getModalContentRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},modalDismissButtonTestId:{defaultValue:null,description:"`data-testid` для кнопки закрытия.",name:"modalDismissButtonTestId",required:!1,type:{name:"string"}},modalDismissButtonLabel:{defaultValue:{value:"Закрыть"},description:"Текст для скринридера.",name:"modalDismissButtonLabel",required:!1,type:{name:"string"}},preventClose:{defaultValue:null,description:"Позволяет отключить возможность закрытия модальной страницы (смахивание, клавиша `ESC`, нажатие на подложку).\n\n⚠️ ВНИМАНИЕ: использование этой опции негативно сказывается на пользовательском опыте.",name:"preventClose",required:!1,type:{name:"boolean"}},disableContentPanningGesture:{defaultValue:null,description:"Отключает раскрытие и закрытие панели в мобильном виде.",name:"disableContentPanningGesture",required:!1,type:{name:"boolean"}},outsideButtons:{defaultValue:null,description:"Управляющие элементы под кнопкой закрытия.\n\nДоступно только в `compact`-режиме. Рекомендуется размещать иконки размера 20, обернутые в ModalOutsideButton.",name:"outsideButtons",required:!1,type:{name:"ReactNode"}}}}}catch{}const S=new Map,J=({id:u,nav:a,open:l=!1,modalOverlayTestId:o,noFocusToDialog:r,onOpen:s,onOpened:i,onClose:E,onClosed:m,size:p="s",settlingHeight:D=50,dynamicContentHeight:C,disableModalOverlay:h,keepMounted:y=!1,...g})=>{const{mounted:B,shouldPreserveSnapPoint:f,id:n,...R}=x4({id:a||u,open:l,keepMounted:y,modalOverlayTestId:o,disableModalOverlay:h,noFocusToDialog:r,onOpen:s,onOpened:i,onClose:E,onClosed:m}),M=Z.useMemo(()=>{if(C)return"auto";if(f){const A=S.get(n);if(A)return A;const d=Q(D);return S.set(n,d),d}else S.delete(n);return Q(D)},[n,f,C,D]);return B?t.jsx(M4.Provider,{value:n,children:t.jsx(L,{id:n,size:p,"aria-labelledby":`${n}-label`,snapPoint:M,onSnapPointChange:M!=="auto"&&f?A=>{const d=S.get(n);d&&(d.initial=A,S.set(n,d))}:void 0,...R,...g})}):null};function Q(u){const a=Math.min(Math.max(u,x.LOWER),v.LARGE);return{initial:a,detents:v4(a,x.LOWER,x.HIGHEST)?[v.MIN,a,v.LARGE]:[v.MIN,a]}}try{J.displayName="ModalPage",J.__docgenInfo={description:"",displayName:"ModalPage",props:{open:{defaultValue:{value:"false"},description:"Состояние видимости.",name:"open",required:!1,type:{name:"boolean"}},keepMounted:{defaultValue:{value:"false"},description:"Сохранять ли компонент в DOM при `open={false}`.",name:"keepMounted",required:!1,type:{name:"boolean"}},header:{defaultValue:null,description:"Шапка модальной страницы, `<ModalPageHeader />`.",name:"header",required:!1,type:{name:"ReactNode"}},footer:{defaultValue:null,description:"Подвал модальной страницы, `<ModalPageFooter />`.",name:"footer",required:!1,type:{name:"ReactNode"}},size:{defaultValue:{value:"s"},description:"Задаёт контенту максимальную ширину на десктопе.",name:"size",required:!1,type:{name:'number | "s" | "m" | "l"'}},height:{defaultValue:null,description:`Задаёт модальному окну фиксированную высоту.
Можно передать числовое значение в пикселях, а можно строкой, в том числе и в процентах "50%".
В мобильной версии 'settlingHeight' будет считаться относительно заданного height.`,name:"height",required:!1,type:{name:"string | number"}},settlingHeight:{defaultValue:{value:"50"},description:"Процент, на который изначально будет открыта модальная страница.\n\n> ⚠️ Следует использовать следующие значения: `25`, `50`, `75`, `100`.\n> При передаче `< 25` значение приведётся к `25`, при передаче `> 75` значение приведётся к `75`.\n\nИгнорируется при включении `dynamicContentHeight`.",name:"settlingHeight",required:!1,type:{name:"number"}},dynamicContentHeight:{defaultValue:null,description:"Если высота контента в модальной странице может поменяться, нужно установить это свойство.",name:"dynamicContentHeight",required:!1,type:{name:"boolean"}},noFocusToDialog:{defaultValue:null,description:"Отключает фокус на интерактивный элемент после открытия модалки.\n\n> Важно установить фокус после открытия в любое место модалки используя событие `onOpened`, иначе не будет работать закрытие по нажатию `Esc`.",name:"noFocusToDialog",required:!1,type:{name:"boolean"}},hideCloseButton:{defaultValue:null,description:"Скрывает кнопку закрытия (актуально для iOS, так как можно отрисовать кнопку закрытия внутри модалки).",name:"hideCloseButton",required:!1,type:{name:"boolean"}},modalContentTestId:{defaultValue:null,description:"`data-testid` для содержимого модального окна.",name:"modalContentTestId",required:!1,type:{name:"string"}},getModalContentRef:{defaultValue:null,description:"Возвращает DOM-элемент содержимого модального окна.",name:"getModalContentRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},modalOverlayTestId:{defaultValue:null,description:"`data-testid` для оверлея.",name:"modalOverlayTestId",required:!1,type:{name:"string"}},modalDismissButtonTestId:{defaultValue:null,description:"`data-testid` для кнопки закрытия.",name:"modalDismissButtonTestId",required:!1,type:{name:"string"}},modalDismissButtonLabel:{defaultValue:null,description:"Текст для скринридера.",name:"modalDismissButtonLabel",required:!1,type:{name:"string"}},preventClose:{defaultValue:null,description:"Позволяет отключить возможность закрытия модальной страницы (смахивание, клавиша `ESC`, нажатие на подложку).\n\n⚠️ ВНИМАНИЕ: использование этой опции негативно сказывается на пользовательском опыте.",name:"preventClose",required:!1,type:{name:"boolean"}},disableContentPanningGesture:{defaultValue:null,description:"Отключает раскрытие и закрытие панели в мобильном виде.",name:"disableContentPanningGesture",required:!1,type:{name:"boolean"}},onOpen:{defaultValue:null,description:"Будет вызвано при начале открытия модалки.",name:"onOpen",required:!1,type:{name:"VoidFunction"}},onOpened:{defaultValue:null,description:"Будет вызвано при окончательном открытии модалки.",name:"onOpened",required:!1,type:{name:"VoidFunction"}},onClose:{defaultValue:null,description:"Будет вызвано при начале закрытия модалки.",name:"onClose",required:!1,type:{name:"((reason: ModalPageCloseReason, event?: UIEvent<HTMLElement, UIEvent>) => void)"}},onClosed:{defaultValue:null,description:"Будет вызвано при окончательном закрытии модалки.",name:"onClosed",required:!1,type:{name:"VoidFunction"}},outsideButtons:{defaultValue:null,description:"Управляющие элементы под кнопкой закрытия.\n\nДоступно только в `compact`-режиме. Рекомендуется размещать иконки размера 20, обернутые в ModalOutsideButton.",name:"outsideButtons",required:!1,type:{name:"ReactNode"}},disableFocusTrap:{defaultValue:null,description:"Позволяет отключить захват фокуса.\n\nНужно использовать, когда поверх одной модалки открывается другая, чтобы два `FocusTrap` не конфликтовали.",name:"disableFocusTrap",required:!1,type:{name:"boolean"}},disableModalOverlay:{defaultValue:null,description:"Отключает отображение и взаимодействие с фоном модалки.\n> При использовании `ModalPage` внутри `ModalRoot` есть особенность использования этого свойства.\n> Об этом можно почитать на странице документации [`ModalRoot`](/components/modal-root#otklyuchenie-zadnego-fona-u-konkretnogo-modalnogo-okna).",name:"disableModalOverlay",required:!1,type:{name:"boolean"}},nav:{defaultValue:null,description:"Уникальный идентификатор навигационного элемента (вместо id)",name:"nav",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},restoreFocus:{defaultValue:{value:"true"},description:"",name:"restoreFocus",required:!1,type:{name:"boolean | (() => boolean | HTMLElement)"}},style:{defaultValue:null,description:"Дополнительные стили.",name:"style",required:!1,type:{name:'Omit<CSSProperties, "height" | "maxHeight" | "maxWidth">'}}}}}catch{}const mu="_host_7zl0e_1",pu="_hostWithGaps_7zl0e_10",Du="_hostDesktop_7zl0e_14",I={host:mu,hostWithGaps:pu,hostDesktop:Du},Y=({children:u,noSeparator:a=!1,getRootRef:l,className:o,typographyProps:r,...s})=>{const i=_4(),{isDesktop:E,sizeX:m}=u4(),p=b4();return t.jsxs(t.Fragment,{children:[t.jsx("div",{className:F(I.host,i!=="vkcom"&&I.hostWithGaps,E&&I.hostDesktop),ref:l,children:t.jsx(S4,{className:F("vkuiInternalModalPageHeader__in",o),typographyProps:{Component:"h2",id:p.labelId,...r},...s,fixed:!1,delimiter:"none",transparent:!0,children:u})}),!a&&t.jsx(V4,{padding:m!=="regular"})]})};try{Y.displayName="ModalPageHeader",Y.__docgenInfo={description:"",displayName:"ModalPageHeader",props:{noSeparator:{defaultValue:{value:"false"},description:"Отключение разделителя.",name:"noSeparator",required:!1,type:{name:"boolean"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},after:{defaultValue:null,description:`Добавляет элемент справа.

При передаче нескольких элементов, расставляет отступы между ними.`,name:"after",required:!1,type:{name:"ReactNode"}},before:{defaultValue:null,description:"Добавляет элемент слева.",name:"before",required:!1,type:{name:"ReactNode"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},float:{defaultValue:null,description:"Высота шапки будет игнорироваться контентом панели.",name:"float",required:!1,type:{name:"boolean"}},transparent:{defaultValue:null,description:"Прозрачный фон компонента.",name:"transparent",required:!1,type:{name:"boolean"}},typographyProps:{defaultValue:null,description:"По умолчанию как `Component` используется `span`.",name:"typographyProps",required:!1,type:{name:"(HasComponent & HTMLAttributes<HTMLElement> & HasDataAttribute)"}}}}}catch{}export{J as M,Y as a,O as b};
