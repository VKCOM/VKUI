import{j as e,h as l,Z as j,T as H}from"./iframe-DvsMcRqO.js";import{h as a}from"./react_utils-CSZjvU4X.js";import{C as M}from"./Card-CWfcCtaI.js";import{T as S}from"./Tappable-Dogw4jpa.js";import{C as I}from"./Caption-B-wss8fo.js";import{F as k}from"./Footnote-BnZcEJ_G.js";import{H as w}from"./Headline-CDYdreGb.js";const P="_disabled_1fgbo_1",L="_body_1fgbo_5",W="_tappable_1fgbo_10",z="_img_1fgbo_18",O="_text_1fgbo_27",Z="_caption_1fgbo_31",G="_overTitle_1fgbo_32",u={disabled:P,body:L,tappable:W,img:z,text:O,caption:Z,overTitle:G},E=({overTitle:t,title:n,titleComponent:c="span",description:i,caption:o,className:m,mode:p="shadow",style:f,getRootRef:F,getRef:C,maxHeight:v,src:r,srcSet:s,alt:D="",width:B="100%",height:b,crossOrigin:h,decoding:y,loading:A,referrerPolicy:g,sizes:_,useMap:V,fetchPriority:q,imageObjectFit:x,hasHover:N=!1,hasActive:T=!1,Component:R="li",...d})=>e.jsx(M,{mode:p,getRootRef:F,Component:R,style:f,className:l(d.disabled&&u.disabled,m),children:e.jsxs(S,{hasHover:N,hasActive:T,...d,baseClassName:u.tappable,children:[(r||s)&&e.jsx("img",{ref:C,className:u.img,src:r,srcSet:s,alt:D,crossOrigin:h,decoding:y,loading:A,referrerPolicy:g,sizes:_,useMap:V,...j(q),height:b,width:B,style:{maxHeight:v,objectFit:x}}),e.jsxs("div",{className:u.body,children:[a(t)&&e.jsx(I,{className:l(u.text,u.overTitle),weight:"1",level:"3",caps:!0,children:t}),a(n)&&e.jsx(w,{className:u.text,weight:"2",level:"1",Component:c,children:n}),a(i)&&e.jsx(H,{className:u.text,children:i}),a(o)&&e.jsx(k,{className:l(u.text,u.caption),children:o})]})]})});try{E.displayName="ContentCard",E.__docgenInfo={description:"",displayName:"ContentCard",props:{overTitle:{defaultValue:null,description:"Текст над заголовком.",name:"overTitle",required:!1,type:{name:"ReactNode"}},title:{defaultValue:null,description:"Заголовок.",name:"title",required:!1,type:{name:"ReactNode"}},titleComponent:{defaultValue:{value:"span"},description:"Позволяет поменять тег используемый для заголовка.",name:"titleComponent",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},description:{defaultValue:null,description:"Текст.",name:"description",required:!1,type:{name:"ReactNode"}},caption:{defaultValue:null,description:"Нижний текст.",name:"caption",required:!1,type:{name:"ReactNode"}},maxHeight:{defaultValue:null,description:"Максимальная высота изображения.",name:"maxHeight",required:!1,type:{name:"number"}},mode:{defaultValue:{value:"shadow"},description:"Внешний вид карточки.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"plain"'},{value:'"outline"'},{value:'"shadow"'},{value:'"tint"'},{value:'"outline-tint"'}]}},imageObjectFit:{defaultValue:null,description:"Пользовательское значения стиля `object-fit` для картинки\nПодробнее можно почитать в [документации](https://developer.mozilla.org/ru/docs/Web/CSS/object-fit).",name:"imageObjectFit",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"inherit"'},{value:'"contain"'},{value:'"-moz-initial"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'},{value:'"cover"'},{value:'"fill"'},{value:'"scale-down"'}]}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},Component:{defaultValue:{value:"li"},description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},borderRadiusMode:{defaultValue:null,description:"Задает border-radius элементу\nВ режиме `auto` на маленьких экранах `border-radius: 0`, иначе определяется токеном `--vkui--size_border_radius--regular`.",name:"borderRadiusMode",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"auto"'}]}},activeClassName:{defaultValue:null,description:"Стиль подсветки `active`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `activeMode`.",name:"activeClassName",required:!1,type:{name:"string"}},hoverClassName:{defaultValue:null,description:"Стиль подсветки `hover`-состояния.\n@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `hoverMode`.",name:"hoverClassName",required:!1,type:{name:"string"}},baseClassName:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `className`.",name:"baseClassName",required:!1,type:{name:"string | false"}},baseStyle:{defaultValue:null,description:"@deprecated Since 7.3.0.\n\nСвойство устарело и будет удалено в `v8`, используйте свойство `style`.",name:"baseStyle",required:!1,type:{name:"CSSProperties"}},focusVisibleMode:{defaultValue:null,description:"Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс при :focus-visible",name:"focusVisibleMode",required:!1,type:{name:"FocusVisibleMode"}},hasHover:{defaultValue:{value:"false"},description:"Указывает, должен ли компонент реагировать на `hover`-состояние.",name:"hasHover",required:!1,type:{name:"boolean"}},hovered:{defaultValue:null,description:"Позволяет управлять `hovered`-состоянием извне.",name:"hovered",required:!1,type:{name:"boolean"}},activated:{defaultValue:null,description:"Позволяет управлять `activated`-состоянием извне.",name:"activated",required:!1,type:{name:"boolean"}},hasActive:{defaultValue:{value:"false"},description:"Указывает, должен ли компонент реагировать на `active`-состояние.",name:"hasActive",required:!1,type:{name:"boolean"}},hasHoverWithChildren:{defaultValue:null,description:`Позволяет родительскому компоненту
иметь \`hovered\`-cостояние при наведении
на любой дочерний элемент.
По умолчанию состояние hovered у родителя сбрасывается.

Присваивается родителькому компоненту.
@example <Tappable hasHoverWithChildren>
  <IconButton />
  <IconButton />
  <IconButton />
</Tappable>`,name:"hasHoverWithChildren",required:!1,type:{name:"boolean"}},unlockParentHover:{defaultValue:null,description:`Позволяет родительскому компоненту показывать hovered-состояние при наведении
на текущий дочерний компонент.

Присваивается дочернему компоненту.
@example <Tappable>
  <IconButton unlockParentHover />
  <IconButton unlockParentHover />
  <IconButton />
</Tappable>`,name:"unlockParentHover",required:!1,type:{name:"boolean"}},activeEffectDelay:{defaultValue:null,description:"Длительность показа `active`-состояния.",name:"activeEffectDelay",required:!1,type:{name:"number"}},activeMode:{defaultValue:null,description:"Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active.",name:"activeMode",required:!1,type:{name:"StateModeLiteral"}},hoverMode:{defaultValue:null,description:"Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover.",name:"hoverMode",required:!1,type:{name:"StateModeLiteral"}},getRef:{defaultValue:null,description:"",name:"getRef",required:!1,type:{name:"Ref<HTMLImageElement>"}}}}}catch{}export{E as C};
