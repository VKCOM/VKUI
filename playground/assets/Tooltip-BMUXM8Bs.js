import{r as n,j as D,i as U}from"./iframe-BW2_2Sqh.js";import{a as A,u as J,b as X}from"./useFloatingElement-nfAcuS-5.js";import{A as Q}from"./AppRootPortal-F6rxXrpM.js";import{T as Y}from"./TooltipBase-Cykt3onb.js";import{g as Z}from"./FloatingArrow-BwItcUE2.js";const d=({placement:u="bottom",arrowPadding:l=10,arrowHeight:t=8,offsetByMainAxis:E=8,offsetByCrossAxis:r=0,hideWhenReferenceHidden:o,disableFlipMiddleware:h=!1,disableTriggerOnFocus:y=!1,onReferenceHiddenChange:v,defaultShown:g,shown:V,onShownChange:q,hoverDelay:w=150,strategy:x,enableInteractive:R=!1,disableArrow:i=!1,disableCloseAfterClick:I=!1,usePortal:s,id:S,getRootRef:T,appearance:F="neutral",style:C,className:m,zIndex:p="var(--vkui--z_index_popout)",closable:f,onPlacementChange:H,...c})=>{const _=n.useId(),e=S||_,M=n.useCallback(({shown:B,floatingProps:a,floatingRef:N,placement:L,middlewareData:W,setArrowRef:j,willBeHide:z,onClose:K})=>B?D.jsx(Q,{usePortal:s,children:D.jsx(Y,{...c,...a,style:{...a.style,zIndex:p,...C},id:e,getRootRef:N,appearance:F,arrowProps:i?void 0:{placement:L,coords:Z(W),getRootRef:j},className:U(z?A.out:A.in,m),onCloseIconClick:f?K:void 0})}):null,[F,m,f,i,c,C,e,s,p]),P=n.useCallback(({shown:B,...a})=>({...a,...B&&{"aria-describedby":e}}),[e]),{component:k,anchorRef:G,anchorProps:O}=J({placement:u,arrow:!i,arrowHeight:t,arrowPadding:l,offsetByMainAxis:E,offsetByCrossAxis:r,hideWhenReferenceHidden:o,disableFlipMiddleware:h,defaultShown:g,shown:V,onShownChange:q,trigger:y?"hover":["hover","focus"],onReferenceHiddenChange:v,hoverDelay:w,closeAfterClick:!I,disableInteractive:!R,strategy:x,onPlacementChange:H,renderFloatingComponent:M,externalFloatingElementRef:T,remapReferenceProps:P});return{anchorRef:G,anchorProps:O,tooltip:k}};try{d.displayName="useTooltip",d.__docgenInfo={description:"",displayName:"useTooltip",props:{className:{defaultValue:null,description:"Пользовательские css-классы, будут добавлены на root-элемент.",name:"className",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Заголовок тултипа.",name:"title",required:!1,type:{name:"ReactNode"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},appearance:{defaultValue:{value:"neutral"},description:"Стиль отображения подсказки.",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"accent"'},{value:'"neutral"'},{value:'"white"'},{value:'"black"'},{value:'"inversion"'}]}},placement:{defaultValue:null,description:"По умолчанию компонент выберет наилучшее расположение сам, но приоритетное можно задать с помощью этого свойства.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"left"'},{value:'"right"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top"'},{value:'"bottom"'},{value:'"left-start"'},{value:'"left-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'}]}},description:{defaultValue:null,description:"Текст тултипа.",name:"description",required:!1,type:{name:"ReactNode"}},usePortal:{defaultValue:null,description:"По умолчанию используется document.body.",name:"usePortal",required:!1,type:{name:"boolean | HTMLElement | RefObject<HTMLElement>"}},titleId:{defaultValue:null,description:'[a11y] Id для заголовка тултипа.\nМожно использовать для связи элемента с `role="dialog"` и заголовка через `aria-labelledby`.',name:"titleId",required:!1,type:{name:"string"}},maxWidth:{defaultValue:null,description:"Перебивает максимальную ширину заданную по умолчанию.\n\nПередача `null` полностью сбрасывает установку `max-width` на элемент.",name:"maxWidth",required:!1,type:{name:"string | number | null"}},zIndex:{defaultValue:{value:"var(--vkui--z_index_popout)"},description:"Перебивает zIndex заданный по умолчанию.",name:"zIndex",required:!1,type:{name:"string | number"}},arrowHeight:{defaultValue:{value:"8"},description:"Высота стрелки. Складывается с `mainAxis`, чтобы стрелка не залезала на якорный элемент.",name:"arrowHeight",required:!1,type:{name:"number"}},arrowPadding:{defaultValue:{value:"10"},description:"Безопасная зона вокруг стрелки, чтобы та не выходила за края контента.",name:"arrowPadding",required:!1,type:{name:"number"}},onPlacementChange:{defaultValue:null,description:`В зависимости от области видимости, позиция может смениться на более оптимальную,
чтобы всплывающий элемент вместился в эту область видимости.`,name:"onPlacementChange",required:!1,type:{name:"OnPlacementChange"}},hoverDelay:{defaultValue:{value:"150"},description:`Количество миллисекунд, после которых произойдёт показ/скрытие всплывающего элемента
при наведении.

> Чтобы задать разное время на показ и скрытие, передайте массив типа \`[<показ>, <скрытие>]\`.

> Используется только для \`trigger="hover"\`.`,name:"hoverDelay",required:!1,type:{name:"number | [number, number]"}},offsetByMainAxis:{defaultValue:{value:"8"},description:"Отступ по главной оси.",name:"offsetByMainAxis",required:!1,type:{name:"number"}},offsetByCrossAxis:{defaultValue:{value:"0"},description:"Отступ по вспомогательной оси.",name:"offsetByCrossAxis",required:!1,type:{name:"number"}},defaultShown:{defaultValue:null,description:"Начальное состояние всплывающего элемента.",name:"defaultShown",required:!1,type:{name:"boolean"}},shown:{defaultValue:null,description:"Передача `boolean` позволяет контролировать состояния показа и скрытия вручную. Используйте\nсовместно с `onShownChange`.\n\n> Если нужно разово инициировать показ тултипа при первом рендере, то используйте `defaultShown`.",name:"shown",required:!1,type:{name:"boolean"}},onShownChange:{defaultValue:null,description:"Вызывается при каждом изменении видимости всплывающего элемента.",name:"onShownChange",required:!1,type:{name:"OnShownChange"}},hideWhenReferenceHidden:{defaultValue:null,description:"Принудительно скрывает компонент если целевой элемент вышел за область видимости.",name:"hideWhenReferenceHidden",required:!1,type:{name:"boolean"}},onReferenceHiddenChange:{defaultValue:null,description:"Событие скрытия / раскрытия компонента при использовании свойства `hideWhenReferenceHidden`.\n\n> Стоит иметь ввиду, что событие также будет вызвано и при новом рендере компонента",name:"onReferenceHiddenChange",required:!1,type:{name:"((hidden: boolean) => void)"}},disableFlipMiddleware:{defaultValue:{value:"false"},description:"Указанное значение `placement` форсируется, даже если для выпадающего элемента недостаточно места.\nНе оказывает влияния при `placement` значениях - `'auto' | 'auto-start' | 'auto-end'`",name:"disableFlipMiddleware",required:!1,type:{name:"boolean"}},strategy:{defaultValue:null,description:'Стратегия позиционирования всплывающего элемента.\n\n- `"fixed"` - позиционируется, используя `position: fixed`. Является значением по умолчанию\n- `"absolute"` - позиционируется, используя `position: absolute`, относительно ближайшего элемента с `position: relative`\n\n> `strategy="absolute"` Рекомендуется использовать с `usePortal={false}`. И нужно не забыть обернуть в элемент с `position: relative`',name:"strategy",required:!1,type:{name:"enum",value:[{value:'"fixed"'},{value:'"absolute"'}]}},ArrowIcon:{defaultValue:null,description:'Пользовательская SVG иконка.\n\nТребования:\n\n1. Иконка по умолчанию должна быть направлена вверх (a.k.a `IconUp`).\n2. Чтобы избежать проблемы с пространством между стрелкой и контентом на некоторых экранах,\n   растяните кривую по высоте на `1px` и увеличьте на этот размер `height` и `viewBox` SVG.\n   (смотри https://github.com/VKCOM/VKUI/pull/4496).\n3. Убедитесь, что компонент принимает все валидные для SVG параметры.\n4. Убедитесь, что SVG и её элементы наследует цвет через `fill="currentColor"`.\n5. Если стрелка наезжает на якорный элемент, то увеличьте смещение между целевым и всплывающим элементами.',name:"ArrowIcon",required:!1,type:{name:"ComponentType<SVGAttributes<SVGSVGElement>>"}},closeIconLabel:{defaultValue:null,description:"Скрытый текст для кнопки закрытия.",name:"closeIconLabel",required:!1,type:{name:"string"}},disableArrow:{defaultValue:{value:"false"},description:"Скрывает стрелку, указывающую на якорный элемент.",name:"disableArrow",required:!1,type:{name:"boolean"}},enableInteractive:{defaultValue:{value:"false"},description:"Добавляет возможность наводить на тултип.",name:"enableInteractive",required:!1,type:{name:"boolean"}},closable:{defaultValue:null,description:"Добавляет возможность закрыть тултип через иконку-крестик.\n\n> Работает в сочетании с `enableInteractive` или при использовании `shown` и `onShownChange`.",name:"closable",required:!1,type:{name:"boolean"}},disableCloseAfterClick:{defaultValue:{value:"false"},description:"Отключает закрытие по нажатию.",name:"disableCloseAfterClick",required:!1,type:{name:"boolean"}},disableTriggerOnFocus:{defaultValue:{value:"false"},description:"Отключает появление при фокусе.",name:"disableTriggerOnFocus",required:!1,type:{name:"boolean"}}}}}catch{}const b=({children:u,...l})=>{const{anchorRef:t,anchorProps:E,tooltip:r}=d(l),o=X(u,E,t);return D.jsxs(n.Fragment,{children:[o,r]})};try{b.displayName="Tooltip",b.__docgenInfo={description:"",displayName:"Tooltip",props:{shown:{defaultValue:null,description:"Передача `boolean` позволяет контролировать состояния показа и скрытия вручную. Используйте\nсовместно с `onShownChange`.\n\n> Если нужно разово инициировать показ тултипа при первом рендере, то используйте `defaultShown`.",name:"shown",required:!1,type:{name:"boolean"}},enableInteractive:{defaultValue:null,description:"Добавляет возможность наводить на тултип.",name:"enableInteractive",required:!1,type:{name:"boolean"}},closable:{defaultValue:null,description:"Добавляет возможность закрыть тултип через иконку-крестик.\n\n> Работает в сочетании с `enableInteractive` или при использовании `shown` и `onShownChange`.",name:"closable",required:!1,type:{name:"boolean"}},disableArrow:{defaultValue:null,description:"Скрывает стрелку, указывающую на якорный элемент.",name:"disableArrow",required:!1,type:{name:"boolean"}},disableCloseAfterClick:{defaultValue:null,description:"Отключает закрытие по нажатию.",name:"disableCloseAfterClick",required:!1,type:{name:"boolean"}},disableTriggerOnFocus:{defaultValue:null,description:"Отключает появление при фокусе.",name:"disableTriggerOnFocus",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"Целевой элемент. Всплывающее окно появится возле него.\n\n> ⚠️ Если это пользовательский компонент, то он должен:\n> 1. предоставлять параметры либо `getRootRef`, либо `ref` (cм. `React.forwardRef()`) для получения ссылки на DOM-узел;\n> 2. принимать DOM атрибуты и события.",name:"children",required:!1,type:{name:"ReactElement<unknown, string | JSXElementConstructor<any>>"}},placement:{defaultValue:null,description:"По умолчанию компонент выберет наилучшее расположение сам, но приоритетное можно задать с помощью этого свойства.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"left"'},{value:'"right"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top"'},{value:'"bottom"'},{value:'"left-start"'},{value:'"left-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'}]}},usePortal:{defaultValue:null,description:"По умолчанию используется document.body.",name:"usePortal",required:!1,type:{name:"boolean | HTMLElement | RefObject<HTMLElement>"}},zIndex:{defaultValue:null,description:"Перебивает zIndex заданный по умолчанию.",name:"zIndex",required:!1,type:{name:"string | number"}},arrowHeight:{defaultValue:null,description:"Высота стрелки. Складывается с `mainAxis`, чтобы стрелка не залезала на якорный элемент.",name:"arrowHeight",required:!1,type:{name:"number"}},arrowPadding:{defaultValue:null,description:"Безопасная зона вокруг стрелки, чтобы та не выходила за края контента.",name:"arrowPadding",required:!1,type:{name:"number"}},onPlacementChange:{defaultValue:null,description:`В зависимости от области видимости, позиция может смениться на более оптимальную,
чтобы всплывающий элемент вместился в эту область видимости.`,name:"onPlacementChange",required:!1,type:{name:"OnPlacementChange"}},hoverDelay:{defaultValue:null,description:`Количество миллисекунд, после которых произойдёт показ/скрытие всплывающего элемента
при наведении.

> Чтобы задать разное время на показ и скрытие, передайте массив типа \`[<показ>, <скрытие>]\`.

> Используется только для \`trigger="hover"\`.`,name:"hoverDelay",required:!1,type:{name:"number | [number, number]"}},offsetByMainAxis:{defaultValue:null,description:"Отступ по главной оси.",name:"offsetByMainAxis",required:!1,type:{name:"number"}},offsetByCrossAxis:{defaultValue:null,description:"Отступ по вспомогательной оси.",name:"offsetByCrossAxis",required:!1,type:{name:"number"}},defaultShown:{defaultValue:null,description:"Начальное состояние всплывающего элемента.",name:"defaultShown",required:!1,type:{name:"boolean"}},onShownChange:{defaultValue:null,description:"Вызывается при каждом изменении видимости всплывающего элемента.",name:"onShownChange",required:!1,type:{name:"OnShownChange"}},hideWhenReferenceHidden:{defaultValue:null,description:"Принудительно скрывает компонент если целевой элемент вышел за область видимости.",name:"hideWhenReferenceHidden",required:!1,type:{name:"boolean"}},onReferenceHiddenChange:{defaultValue:null,description:"Событие скрытия / раскрытия компонента при использовании свойства `hideWhenReferenceHidden`.\n\n> Стоит иметь ввиду, что событие также будет вызвано и при новом рендере компонента",name:"onReferenceHiddenChange",required:!1,type:{name:"((hidden: boolean) => void)"}},disableFlipMiddleware:{defaultValue:null,description:"Указанное значение `placement` форсируется, даже если для выпадающего элемента недостаточно места.\nНе оказывает влияния при `placement` значениях - `'auto' | 'auto-start' | 'auto-end'`",name:"disableFlipMiddleware",required:!1,type:{name:"boolean"}},strategy:{defaultValue:null,description:'Стратегия позиционирования всплывающего элемента.\n\n- `"fixed"` - позиционируется, используя `position: fixed`. Является значением по умолчанию\n- `"absolute"` - позиционируется, используя `position: absolute`, относительно ближайшего элемента с `position: relative`\n\n> `strategy="absolute"` Рекомендуется использовать с `usePortal={false}`. И нужно не забыть обернуть в элемент с `position: relative`',name:"strategy",required:!1,type:{name:"enum",value:[{value:'"fixed"'},{value:'"absolute"'}]}},className:{defaultValue:null,description:"Пользовательские css-классы, будут добавлены на root-элемент.",name:"className",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Заголовок тултипа.",name:"title",required:!1,type:{name:"ReactNode"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},appearance:{defaultValue:null,description:"Стиль отображения подсказки.",name:"appearance",required:!1,type:{name:"enum",value:[{value:'"accent"'},{value:'"neutral"'},{value:'"white"'},{value:'"black"'},{value:'"inversion"'}]}},description:{defaultValue:null,description:"Текст тултипа.",name:"description",required:!1,type:{name:"ReactNode"}},titleId:{defaultValue:null,description:'[a11y] Id для заголовка тултипа.\nМожно использовать для связи элемента с `role="dialog"` и заголовка через `aria-labelledby`.',name:"titleId",required:!1,type:{name:"string"}},maxWidth:{defaultValue:null,description:"Перебивает максимальную ширину заданную по умолчанию.\n\nПередача `null` полностью сбрасывает установку `max-width` на элемент.",name:"maxWidth",required:!1,type:{name:"string | number | null"}},ArrowIcon:{defaultValue:null,description:'Пользовательская SVG иконка.\n\nТребования:\n\n1. Иконка по умолчанию должна быть направлена вверх (a.k.a `IconUp`).\n2. Чтобы избежать проблемы с пространством между стрелкой и контентом на некоторых экранах,\n   растяните кривую по высоте на `1px` и увеличьте на этот размер `height` и `viewBox` SVG.\n   (смотри https://github.com/VKCOM/VKUI/pull/4496).\n3. Убедитесь, что компонент принимает все валидные для SVG параметры.\n4. Убедитесь, что SVG и её элементы наследует цвет через `fill="currentColor"`.\n5. Если стрелка наезжает на якорный элемент, то увеличьте смещение между целевым и всплывающим элементами.',name:"ArrowIcon",required:!1,type:{name:"ComponentType<SVGAttributes<SVGSVGElement>>"}},closeIconLabel:{defaultValue:null,description:"Скрытый текст для кнопки закрытия.",name:"closeIconLabel",required:!1,type:{name:"string"}}}}}catch{}export{b as T};
