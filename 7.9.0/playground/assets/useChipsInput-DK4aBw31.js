import{j as p,U as ie,k as qe,v as ce,r as o,i as Ne,h as ke,T as Te,ao as pe,K as m,am as I,aY as Le,al as de}from"./iframe-BdXaAE5r.js";import{c as me}from"./callMultiple-ChqatQlo.js";import{F as je}from"./FormField-EQy9__nw.js";import{I as Me}from"./IconButton-CXgqouLn.js";import{I as Pe}from"./cancel_16-DBln7EA6.js";import{u as He,a as we}from"./useEnsuredControl-dQkhshwS.js";import{u as ze}from"./useNativeFormResetListener-DJnR_8Ag.js";import{C as Ye}from"./Chip-C4o3lLvY.js";function ye(e){return e?e.replace(/([.*+?^${}()|[\]\/\\])/g,"\\$1"):""}const X=({className:e,onClick:t,...l})=>p.jsx(Me,{Component:"button",label:"Очистить поле",onKeyDown:ie,type:"button",activeMode:"opacity",hoverMode:"opacity",...l,className:e,onClick:n=>{ie(n),n.preventDefault(),t()},children:p.jsx(Pe,{})});try{X.displayName="FormFieldClearButton",X.__docgenInfo={description:"",displayName:"FormFieldClearButton",props:{className:{defaultValue:null,description:"`className` для компонента.",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Обработчик нажатия на кнопку.",name:"onClick",required:!0,type:{name:"() => void"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}const J=[],w="";function Q(e){return e.value}function Z(e){return e.label}function Se(e,t){return{value:e,label:t}}function ee(e){const{label:t,...l}=e;return p.jsx(Ye,{removable:!e.disabled,...l,children:t})}try{Q.displayName="getOptionValueDefault",Q.__docgenInfo={description:"",displayName:"getOptionValueDefault",props:{value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{Z.displayName="getOptionLabelDefault",Z.__docgenInfo={description:"",displayName:"getOptionLabelDefault",props:{value:{defaultValue:null,description:"Значение опции.",name:"value",required:!0,type:{name:"ChipOptionValue"}},label:{defaultValue:null,description:"Отображаемый текст опции.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с оцией.",name:"disabled",required:!1,type:{name:"boolean"}}}}}catch{}try{ee.displayName="renderChipDefault",ee.__docgenInfo={description:"",displayName:"renderChipDefault",props:{label:{defaultValue:null,description:"Отображаемый текст чипа.",name:"label",required:!0,type:{name:"ChipOptionLabel"}},mode:{defaultValue:null,description:"Режим отображения компонента.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},value:{defaultValue:null,description:"Значение чипа.",name:"value",required:!1,type:{name:"ChipOptionValue"}},removable:{defaultValue:null,description:"Можно ли удалить чип.",name:"removable",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с чипом.",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Режим только для чтения.",name:"readOnly",required:!1,type:{name:"boolean"}},removeLabel:{defaultValue:null,description:"Текст для кнопки удаления.",name:"removeLabel",required:!1,type:{name:"string"}},before:{defaultValue:null,description:"Контент перед основным содержимым.",name:"before",required:!1,type:{name:"ReactNode"}},after:{defaultValue:null,description:"Контент после основного содержимого.",name:"after",required:!1,type:{name:"ReactNode"}},onRemove:{defaultValue:null,description:"Обработчик удаления чипа.",name:"onRemove",required:!1,type:{name:"((event: MouseEvent<Element, MouseEvent>, value: ChipOptionValue) => void)"}},Component:{defaultValue:null,description:"",name:"Component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLElement>"}}}}}catch{}const he=e=>typeof e=="object"&&"value"in e,fe=e=>e?e.value===w:!0,Ke=(e,t)=>{const l=he(e)?e.value:e;return t.findIndex(n=>n.value===l)},G=e=>{const t=e&&e.dataset.index;return typeof t=="string"?Number(t):-1},Ue=e=>{const t=e&&e.dataset.value;return(e&&e.dataset.valueType)==="number"?Number(t):typeof t=="string"?t:-1},$e=(e,t,l)=>{const n=l-1;switch(t){case"prev":const i=e-1;return i<0?n:i;case"next":const C=e+1;return C>n?0:C;case"last":return n;case"first":return 0;default:return-1}},We="_host_j893j_1",Ge="_listBox_j893j_16",Xe="_chip_j893j_25",Je="_el_j893j_30",Qe="_hasPlaceholder_j893j_44",Ze="_hasInputValue_j893j_45",eu="_sizeYCompact_j893j_79",uu="_sizeYNone_j893j_84",b={host:We,listBox:Ge,chip:Xe,el:Je,hasPlaceholder:Qe,hasInputValue:Ze,sizeYCompact:eu,sizeYNone:uu},tu={none:b.sizeYNone,compact:b.sizeYCompact},ve=({getRootRef:e,style:t,className:l,before:n,after:i,status:C,mode:z,maxHeight:Y,value:B=J,onAddChipOption:O,onRemoveChipOption:x,renderChip:S=ee,getRef:y,inputValue:R=w,addOnBlur:K,onInputChange:A,ClearButton:f=X,clearButtonShown:h,clearButtonTestId:_,onClear:q,chipsListLabel:U="Выбранные элементы","aria-label":j="",slotProps:M,...$})=>{const{sizeY:P="none"}=qe(),{className:s,style:E,getRootRef:D,onClick:v,onMouseDown:N,...F}=ce({getRootRef:e,style:t,className:l},M?.root),{getRootRef:c,onBlur:k,placeholder:T,readOnly:L,disabled:g,id:Ee,value:ue=w,...ge}=ce({getRootRef:y,className:b.el,value:R,onChange:A,...$},M?.input),be=o.useId(),r=Ne(c),Re=o.useRef(null),d=o.useRef(null),V=B.length,te=V===0,[Ve,ae]=o.useState(0),ne=u=>{ae(0),u.focus()},H=(u,a,Ae)=>{const oe=$e(u,a,V),se=Ae.querySelector(`[data-index="${oe}"]`);se&&(ae(oe),se.focus())},le=(u,a)=>{!r.current||!d.current||(V>1?a===V-1?H(a,"prev",d.current):H(a,"next",d.current):ne(r.current),x(u))},_e=u=>{const a=u.target;if(!(u.defaultPrevented||!d.current||!pe(a)))switch(u.key){case m.ENTER:{!L&&I(a,r.current)&&r.current&&!fe(r.current)&&(u.preventDefault(),O(r.current.value));break}case m.DELETE:case m.BACKSPACE:{!L&&V>0&&(I(a,r.current)?u.key===m.BACKSPACE&&fe(r.current)&&(u.preventDefault(),H(G(a),"last",d.current)):(u.preventDefault(),le(Ue(a),G(a))));break}case m.HOME:case m.END:case m.ARROW_UP:case m.ARROW_LEFT:case m.ARROW_DOWN:case m.ARROW_RIGHT:{V!==0&&!I(a,r.current)&&(u.preventDefault(),H(G(a),Le(u.key),d.current));break}}},De=u=>{k&&k(u),K&&!u.defaultPrevented&&r.current&&O(r.current.value)},Fe=(u,a)=>{u.preventDefault(),u.stopPropagation(),le(a,Ke(a,B))},Ie=u=>{const a=de(u.currentTarget);u.defaultPrevented||I(u.currentTarget,a)||r.current&&r.current.focus()},re=o.useCallback(()=>{r.current&&ne(r.current),q()},[r,q]),W=o.useMemo(()=>{if(h)return p.jsx(f,{onClick:re,disabled:g,"data-testid":_})},[f,h,_,g,re]),Be=o.useMemo(()=>{if(W||i)return p.jsxs(p.Fragment,{children:[W,i]})},[i,W]),Oe=Ee||`chips-input-base-generated-id-${be}`,xe=u=>{if(pe(u.target)&&I(d.current,u.target)&&d.current!==u.target)return;const a=de(u.currentTarget);I(d.current,a)||u.target!==r.current&&u.preventDefault()};return p.jsx(je,{Component:"div",getRootRef:D,role:"group","aria-label":j,style:E,disabled:g,before:n,after:Be,status:C,mode:z,className:s,maxHeight:Y,onClick:g?v:me(Ie,v),onMouseDown:me(xe,N),...F,children:p.jsxs("div",{className:ke(b.host,P!=="regular"&&tu[P],te&&b.hasPlaceholder,ue&&b.hasInputValue),ref:Re,onKeyDown:g?void 0:_e,children:[p.jsx("div",{className:b.listBox,ref:d,role:"listbox","aria-orientation":"horizontal","aria-disabled":g,"aria-readonly":L,"aria-label":U,children:B.map((u,a)=>p.jsx(o.Fragment,{children:S({Component:"div",value:u.value,label:u.label,disabled:u.disabled||g,readOnly:u.readOnly||L,className:b.chip,onRemove:Fe,"data-index":a,"data-value":u.value,"data-value-type":typeof u.value,tabIndex:Ve===a?0:-1,role:"option","aria-selected":!0,"aria-posinset":a+1,"aria-setsize":V,"aria-description":"Для удаления используйте Backspace или Delete"},u)},`${typeof u.value}-${u.value}`))}),p.jsx(Te,{autoCapitalize:"none",autoComplete:"off",autoCorrect:"off",spellCheck:!1,"aria-label":j,Component:"input",type:"text",id:Oe,getRootRef:r,disabled:g,readOnly:L,value:ue,placeholder:te?T:void 0,onBlur:De,...ge})]})})};try{ve.displayName="ChipsInputBase",ve.__docgenInfo={description:"",displayName:"ChipsInputBase",props:{onClear:{defaultValue:null,description:"Обработчик очистки всех выбранных опций.",name:"onClear",required:!0,type:{name:"() => void"}},onAddChipOption:{defaultValue:null,description:"Обработчик добавления новой опции чипа.",name:"onAddChipOption",required:!0,type:{name:"(value: string) => void"}},onRemoveChipOption:{defaultValue:null,description:"Обработчик удаления опции чипа.",name:"onRemoveChipOption",required:!0,type:{name:"(value: ChipOptionValue | O) => void"}},getRef:{defaultValue:null,description:"@deprecated Since 7.9.0. Вместо этого используйте `slotProps={ input: { getRootRef: ... } }`.",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},slotProps:{defaultValue:null,description:"Свойства, которые можно прокинуть внутрь компонента:\n- `root`: свойства для прокидывания в корень компонента;\n- `input`: свойства для прокидывания в поле ввода.",name:"slotProps",required:!1,type:{name:"{ root?: (HTMLAttributes<HTMLDivElement> & HasRootRef<HTMLDivElement> & HasDataAttribute); input?: (InputHTMLAttributes<...> & ... 1 more ... & HasDataAttribute); } | undefined"}},addOnBlur:{defaultValue:null,description:"Добавляет значение в список на событие `onBlur`.",name:"addOnBlur",required:!1,type:{name:"boolean"}},renderChip:{defaultValue:{value:"Используется [Chip](#/Chip)"},description:"Render prop функция для возврата своего компонента.",name:"renderChip",required:!1,type:{name:"RenderChip<O>"}},clearButtonShown:{defaultValue:null,description:"Показывать ли кнопку для очистки значения.",name:"clearButtonShown",required:!1,type:{name:"boolean"}},clearButtonTestId:{defaultValue:null,description:"(e2e) testId кнопки очистки.",name:"clearButtonTestId",required:!1,type:{name:"string"}},ClearButton:{defaultValue:{value:`({
  className,
  onClick,
  ...restProps
}: FormFieldClearButtonProps): React.ReactNode => {
  return (
    <IconButton
      Component="button"
      label="Очистить поле"
      onKeyDown={stopPropagation}
      type="button"
      activeMode="opacity"
      hoverMode="opacity"
      {...restProps}
      className={className}
      onClick={(e) => {
        stopPropagation(e);
        e.preventDefault();
        onClick();
      }}
    >
      <Icon16Cancel />
    </IconButton>
  );
}`},description:"Кастомная кнопка для очистки значения.\nДолжна принимать обязательное свойство `onClick`.",name:"ClearButton",required:!1,type:{name:"ComponentType<FormFieldClearButtonProps>"}},chipsListLabel:{defaultValue:{value:"Выбранные элементы"},description:"`aria-label` для списка выбранных опций.",name:"chipsListLabel",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Блокировка взаимодействия с компонентом.",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:{value:"[]"},description:"Выбранные опции.",name:"value",required:!1,type:{name:"O[]"}},inputValue:{defaultValue:{value:""},description:"Значение поля ввода.",name:"inputValue",required:!1,type:{name:"string"}},onInputChange:{defaultValue:null,description:"Обработчик изменения значения в поле ввода.",name:"onInputChange",required:!1,type:{name:"OnInputChange"}},delimiter:{defaultValue:null,description:`Символ или строка, которая будет использоваться как разделитель для автоматического создания опций из текста, введенного в поле ввода.
Принимает:
- \`string\` - простая строка
- \`RegExp\` - регулярное выражение
- \`string[]\` - массив строк, по которым нужно разелять ввод.

Работает в двух сценариях:
1. При вводе разделителя - текст до разделителя автоматически преобразуется в новую опцию.
   Например, при \`delimiter=","\` ввод "опция1," создаст опцию "опция1".

2. При вставке из буфера обмена - если вставляемый текст содержит разделители,
   он будет автоматически разбит на несколько опций.
   Например, при \`delimiter=","\` вставка "опция1,опция2,опция3" создаст
   три отдельные опции: "опция1", "опция2" и "опция3".`,name:"delimiter",required:!1,type:{name:"string | RegExp | string[]"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},align:{defaultValue:null,description:"",name:"align",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'}]}},status:{defaultValue:null,description:"Статус отображения поля в форме.",name:"status",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"valid"'}]}},after:{defaultValue:null,description:"Добавляет иконку справа.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагируюущая на нажатие.",name:"after",required:!1,type:{name:"ReactNode"}},before:{defaultValue:null,description:"Добавляет иконку слева.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагирующая на нажатие.",name:"before",required:!1,type:{name:"ReactNode"}},mode:{defaultValue:null,description:"Режим отображения.\n\n- `default` — показывает фон, обводку и, при наличии, текст-подсказку.\n- `plain` — показывает только текст-подсказку.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"plain"'}]}},maxHeight:{defaultValue:null,description:"Максимальная высота поля.",name:"maxHeight",required:!1,type:{name:"number"}}}}}catch{}const au=(e,t="")=>{try{const l=e.value;e.value=t;const n=e._valueTracker;n&&n.setValue(l);const i=new Event("input",{bubbles:!0});e.dispatchEvent(i)}catch{}},Ce=(e,t,l)=>e.map(n=>({...n,label:l(n),value:t(n)}));function nu(e){const t=e.filter(n=>n.length>0);if(t.length===0)return null;const l=t.map(n=>ye(n));return new RegExp(`(?:${l.join("|")})`)}function lu(e){return e instanceof RegExp?e:typeof e=="string"?new RegExp(ye(e)):nu(e)}const fu=({value:e,defaultValue:t=J,onChange:l,getOptionLabel:n=Z,getOptionValue:i=Q,getNewOptionData:C=Se,inputValue:z,defaultInputValue:Y=w,onInputChange:B,disabled:O,delimiter:x})=>{const[S,y]=He({disabled:O,value:e?Ce(e,i,n):void 0,defaultValue:Ce(t,i,n),onChange:l}),R=o.useRef(null),[K,A]=we({disabled:O,value:z,defaultValue:Y,onChange:B}),f=o.useCallback((s,E)=>{y(D=>{const v=new Set,N=s.map(c=>{const k=he(c),T=k?C(c.value,c.label):C(c,typeof c=="string"?c:"");return v.add(T.value),k?{...c,...T}:T}),F=D.filter(c=>!v.has(c.value));return E&&F.push(...N),F})},[y,C]),h=o.useCallback(()=>{R.current&&au(R.current,"")},[R]),_=o.useCallback(s=>f([s],!0),[f]),q=o.useCallback(s=>f(s,!0),[f]),U=o.useCallback(s=>f([s],!1),[f]),j=o.useCallback(s=>{const E=s.trim();E&&(_(E),h())},[_,h]),M=o.useCallback(()=>{y(t)},[t,y]),$=o.useCallback(()=>{y(J),h()},[h,y]),P=o.useCallback((s,E=!0)=>{const D=s.target.value,v=x?lu(x):null;if(!v||!v.test(D)||!E){A(s);return}const N=D.trim().split(v).map(F=>F.trim()).filter(Boolean);s.target.value="",s.currentTarget.value="",A(s),q(N)},[q,x,A]);return ze(R,M),{value:S,addOption:_,addOptionFromInput:j,removeOption:U,inputRef:R,inputValue:K,onInputChange:P,clearInput:h,clearOptions:$}};export{ve as C,J as D,Q as a,Se as b,w as c,Z as g,ee as r,Ce as t,fu as u};
