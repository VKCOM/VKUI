import{r as t,Z as s4,_ as o4,k as uu,i as eu,m as au,j as u,h as tu,$ as d4,T as nu}from"./iframe-BdXaAE5r.js";import{D as lu,C as ru}from"./constants-DdkjnEgz.js";import{c as su}from"./createCalendarDayRenderField-CnqJh9E5.js";import{g as ou}from"./getFormFieldIconsPresets-DHp6rHqT.js";import{c as du}from"./createStoryParameters-CcwS40kl.js";import{u as iu}from"./useCustomArgs-B4poho75.js";import{u as Du,d as F,N as B,I as C}from"./DateInput.module-zFsNv_Ub.js";import{u as cu}from"./useEnsuredControl-dQkhshwS.js";import{C as Eu}from"./CalendarRange-Brdxxt2i.js";import{F as mu}from"./FocusTrap-CbZlzKqw.js";import{F as pu}from"./FormField-EQy9__nw.js";import{I as i4}from"./IconButton-CXgqouLn.js";import{P as Bu}from"./Popper-Beqzn5p-.js";import{V as $}from"./VisuallyHidden-DcQJc2es.js";import{I as Fu}from"./calendar_outline_20-DM-l75t9.js";import{I as fu}from"./clear_16-DeNybDuM.js";const Cu={none:F.sizeYNone,compact:F.sizeYCompact},K=l=>{let n=2,d=1,o=0;switch(l){case 0:case 3:o=31;break;case 1:case 4:o=12;break;case 2:case 5:o=2100,d=1900,n=4;break}return{length:n,min:d,max:o}},gu=l=>{const n=["","","","","",""];return l?.[0]&&(n[0]=String(l[0].getDate()).padStart(2,"0"),n[1]=String(l[0].getMonth()+1).padStart(2,"0"),n[2]=String(l[0].getFullYear()).padStart(4,"0")),l?.[1]&&(n[3]=String(l[1].getDate()).padStart(2,"0"),n[4]=String(l[1].getMonth()+1).padStart(2,"0"),n[5]=String(l[1].getFullYear()).padStart(4,"0")),n},Au={childList:!0,subtree:!0,attributes:!0,attributeFilter:["tabindex"]},v=({shouldDisableDate:l,disableFuture:n,disablePast:d,value:o,defaultValue:R,onChange:A,calendarPlacement:V="bottom-start",style:x,className:S,closeOnChange:f=!0,disablePickers:h,getRootRef:c4,name:E4,autoFocus:m4,disabled:O,disableFocusTrap:p4,restoreFocus:B4,calendarLabel:F4="Календарь",prevMonthLabel:f4="Предыдущий месяц",nextMonthLabel:C4="Следующий месяц",changeMonthLabel:g4="Месяц",changeYearLabel:A4="Год",changeStartDayLabel:h4="День начала",changeStartMonthLabel:b4="Месяц начала",changeStartYearLabel:y4="Год начала",changeEndDayLabel:v4="День окончания",changeEndMonthLabel:R4="Месяц окончания",changeEndYearLabel:V4="Год окончания",clearFieldLabel:x4="Очистить поле",showCalendarLabel:S4="Показать календарь","aria-label":z="",prevMonthIcon:I4,nextMonthIcon:L4,onCalendarOpenChanged:q4,renderDayContent:j4,calendarTestsProps:w4,startDateTestsProps:I,endDateTestsProps:L,clearButtonTestId:M4,showCalendarButtonTestId:P4,id:T4,accessible:i,readOnly:r,disableCalendar:k4=!1,before:U,..._4})=>{const q=t.useRef(null),j=t.useRef(null),w=t.useRef(null),M=t.useRef(null),P=t.useRef(null),T=t.useRef(null),H=r?!0:k4,N4=t.useCallback(a=>A?.(a||void 0),[A]),[e,c]=cu({value:o,defaultValue:R,onChange:N4}),Y4=t.useCallback(a=>{let D=!0,b=!0;for(let s=0;s<=2;s+=1)a[s].length<K(s).length&&(D=!1);for(let s=3;s<=5;s+=1)a[s].length<K(s).length&&(b=!1);const t4=`${a[0]}.${a[1]}.${a[2]}`,n4=`${a[3]}.${a[4]}.${a[5]}`,y="dd.MM.yyyy";if(s4(t4,y)||(D=!1),s4(n4,y)||(b=!1),!D&&!b)return;const l4=Array.isArray(e),r4=new Date,N=D?o4(t4,y,l4&&e?.[0]||r4):null,Y=b?o4(n4,y,l4&&e?.[1]||r4):null;N&&Y&&Y>N&&c([N,Y])},[c,e]),$4=t.useMemo(()=>[q,j,w,M,P,T],[q,j,w,M,P,T]),K4=t.useCallback(()=>c(void 0),[c]),{rootRef:Z,calendarRef:O4,open:z4,openCalendar:G,closeCalendar:U4,toggleCalendar:H4,internalValue:E,handleKeyDown:m,setFocusedElement:p,handleFieldEnter:k,clear:Z4,removeFocusFromField:J}=Du({maxElement:5,refs:$4,autoFocus:m4,disabled:O||r,elementsConfig:K,onClear:K4,onInternalValueChange:Y4,getInternalValue:gu,value:e,onCalendarOpenChanged:q4,accessible:i}),{sizeY:Q="none"}=uu(),G4=eu(Z,c4),J4=t.useCallback(a=>{c(a),f&&a?.[1]&&a[1]!==e?.[1]&&J()},[c,f,e,J]),[Q4,W4]=t.useState(V),{locale:_}=au(),W=t.useMemo(()=>{if(!e)return null;const[a,D]=e;return!a||!D?null:[new Intl.DateTimeFormat(_,{weekday:"long",year:"numeric",month:"long",day:"numeric"}).format(a),new Intl.DateTimeFormat(_,{weekday:"long",year:"numeric",month:"long",day:"numeric"}).format(D)].join(" - ")},[_,e]),X=t.useId(),u4=t.useId(),X4=t.useCallback(()=>{k(),i&&G()},[k,G,i]),e4=!H&&(i||!i&&!e),a4=e&&!r;return u.jsxs(pu,{style:x,className:tu(Q!=="regular"&&Cu[Q],!!U&&F.hasBefore,(e4||a4)&&F.hasAfter,S),getRootRef:G4,role:"group","aria-labelledby":`${u4} ${X}`,before:U,after:u.jsxs(u.Fragment,{children:[e4?u.jsx(i4,{hoverMode:"opacity",label:S4,onClick:H4,"data-testid":P4,children:u.jsx(Fu,{})}):null,a4?u.jsx(i4,{hoverMode:"opacity",label:x4,onClick:Z4,"data-testid":M4,children:u.jsx(fu,{})}):null]}),disabled:O,..._4,children:[u.jsxs("div",{className:F.wrapper,children:[z&&u.jsx($,{id:u4,children:z}),W&&u.jsx($,{id:X,children:W}),u.jsx($,{id:T4,Component:"input",readOnly:!0,"aria-hidden":!0,name:E4,tabIndex:r?0:-1,value:e?`${e[0]?d4.format(e[0]):""} - ${e[1]?d4.format(e[1]):""}`:"",onFocus:k}),u.jsxs(nu,{className:F.input,onClick:X4,normalize:!1,children:[u.jsx(B,{value:E[0],minValue:1,maxValue:31,onKeyDown:r?void 0:m,length:2,getRootRef:q,index:0,readOnly:r,onElementSelect:p,label:h4,"data-testid":I?.day}),u.jsx(C,{children:"."}),u.jsx(B,{value:E[1],minValue:1,maxValue:12,onKeyDown:m,length:2,getRootRef:j,index:1,onElementSelect:p,readOnly:r,label:b4,"data-testid":I?.month}),u.jsx(C,{children:"."}),u.jsx(B,{value:E[2],minValue:1,maxValue:275750,onKeyDown:m,length:4,getRootRef:w,index:2,onElementSelect:p,readOnly:r,label:y4,"data-testid":I?.year}),u.jsx(C,{children:" — "}),u.jsx(B,{value:E[3],minValue:1,maxValue:31,onKeyDown:m,length:2,getRootRef:M,index:3,onElementSelect:p,readOnly:r,label:v4,"data-testid":L?.day}),u.jsx(C,{children:"."}),u.jsx(B,{value:E[4],minValue:1,maxValue:12,onKeyDown:m,length:2,getRootRef:P,index:4,onElementSelect:p,readOnly:r,label:R4,"data-testid":L?.month}),u.jsx(C,{children:"."}),u.jsx(B,{value:E[5],minValue:1,maxValue:275750,onKeyDown:m,length:4,getRootRef:T,index:5,onElementSelect:p,readOnly:r,label:V4,"data-testid":L?.year})]})]}),z4&&!H&&u.jsx(Bu,{targetRef:Z,offsetByMainAxis:8,placement:Q4,onPlacementChange:W4,children:u.jsx(mu,{onClose:U4,disabled:p4??!i,restoreFocus:B4??!!i,captureEscapeKeyboardEvent:!1,mutationObserverOptions:Au,children:u.jsx(Eu,{value:e,role:"dialog",onChange:J4,"aria-label":F4,disablePast:d,disableFuture:n,shouldDisableDate:l,getRootRef:O4,disablePickers:h,prevMonthLabel:f4,nextMonthLabel:C4,changeMonthLabel:g4,changeYearLabel:A4,prevMonthIcon:I4,nextMonthIcon:L4,renderDayContent:j4,...w4})})})]})};try{v.displayName="DateRangeInput",v.__docgenInfo={description:"",displayName:"DateRangeInput",props:{calendarTestsProps:{defaultValue:null,description:"Передает атрибуты `data-testid` для интерактивных элементов в календаре.",name:"calendarTestsProps",required:!1,type:{name:"CalendarRangeTestsProps"}},calendarPlacement:{defaultValue:{value:"bottom-start"},description:"Расположение календаря относительно поля ввода.",name:"calendarPlacement",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"left"'},{value:'"right"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top"'},{value:'"bottom"'},{value:'"left-start"'},{value:'"left-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'}]}},closeOnChange:{defaultValue:{value:"true"},description:"Автоматически закрывать календарь при изменениях.",name:"closeOnChange",required:!1,type:{name:"boolean"}},onCalendarOpenChanged:{defaultValue:null,description:"Обработчик изменения состояния открытия календаря.",name:"onCalendarOpenChanged",required:!1,type:{name:"((opened: boolean) => void)"}},calendarLabel:{defaultValue:{value:"Календарь"},description:"Label для календаря.",name:"calendarLabel",required:!1,type:{name:"string"}},clearFieldLabel:{defaultValue:{value:"Очистить поле"},description:"Label для кнопки очистки. Делает доступным для ассистивных технологий.",name:"clearFieldLabel",required:!1,type:{name:"string"}},showCalendarLabel:{defaultValue:{value:"Показать календарь"},description:"Label для кнопки открытия календаря. Делает доступным для ассистивных технологий.",name:"showCalendarLabel",required:!1,type:{name:"string"}},changeStartDayLabel:{defaultValue:{value:"День начала"},description:"Label для ввода дня начальной даты. Делает доступным для ассистивных технологий.",name:"changeStartDayLabel",required:!1,type:{name:"string"}},changeStartMonthLabel:{defaultValue:{value:"Месяц начала"},description:"Label для ввода месяца начальной даты. Делает доступным для ассистивных технологий.",name:"changeStartMonthLabel",required:!1,type:{name:"string"}},changeStartYearLabel:{defaultValue:{value:"Год начала"},description:"Label для ввода года начальной даты. Делает доступным для ассистивных технологий.",name:"changeStartYearLabel",required:!1,type:{name:"string"}},changeEndDayLabel:{defaultValue:{value:"День окончания"},description:"Label для ввода дня конечной даты. Делает доступным для ассистивных технологий.",name:"changeEndDayLabel",required:!1,type:{name:"string"}},changeEndMonthLabel:{defaultValue:{value:"Месяц окончания"},description:"Label для ввода месяца конечной даты. Делает доступным для ассистивных технологий.",name:"changeEndMonthLabel",required:!1,type:{name:"string"}},changeEndYearLabel:{defaultValue:{value:"Год окончания"},description:"Label для ввода года конечной даты. Делает доступным для ассистивных технологий.",name:"changeEndYearLabel",required:!1,type:{name:"string"}},disableCalendar:{defaultValue:{value:"false"},description:"Отключение открытия календаря.",name:"disableCalendar",required:!1,type:{name:"boolean"}},disableFocusTrap:{defaultValue:null,description:"Позволяет отключить захват фокуса при появлении календаря.",name:"disableFocusTrap",required:!1,type:{name:"boolean"}},accessible:{defaultValue:null,description:`Включает режим в котором DateRangeInput доступен
для ассистивных технологий.
В этом режиме:
- календарь больше не открывает при фокусе на DateRangeInput;
- иконка календаря видна всегда, чтобы пользователи
ассистивных технологий могли открыть календарь по клику на иконку;
- календарь при открытии получает фокус, клавиатурный
фокус зациклен и не выходит за пределы календаря пока календарь не закрыт.`,name:"accessible",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"Текущий выбранный промежуток.",name:"value",required:!1,type:{name:"DateRangeType | null"}},defaultValue:{defaultValue:null,description:"Начальный промежуток при монтировании.",name:"defaultValue",required:!1,type:{name:"DateRangeType | null"}},onChange:{defaultValue:null,description:"Обработчик изменения выбранного промежутка.",name:"onChange",required:!1,type:{name:"((value: DateRangeType) => void)"}},prevMonthLabel:{defaultValue:{value:"Предыдущий месяц"},description:"`aria-label` для кнопки предыдущего месяца.",name:"prevMonthLabel",required:!1,type:{name:"string"}},nextMonthLabel:{defaultValue:{value:"Следующий месяц"},description:"`aria-label` для кнопки следующего месяца.",name:"nextMonthLabel",required:!1,type:{name:"string"}},changeMonthLabel:{defaultValue:{value:"Месяц"},description:"`aria-label` для селектора месяца.",name:"changeMonthLabel",required:!1,type:{name:"string"}},changeYearLabel:{defaultValue:{value:"Год"},description:"`aria-label` для селектора года.",name:"changeYearLabel",required:!1,type:{name:"string"}},prevMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки предыдущего месяца.",name:"prevMonthIcon",required:!1,type:{name:"ReactNode"}},nextMonthIcon:{defaultValue:null,description:"Кастомная иконка для кнопки следующего месяца.",name:"nextMonthIcon",required:!1,type:{name:"ReactNode"}},renderDayContent:{defaultValue:null,description:"Кастомизация отображения содержимого дня.",name:"renderDayContent",required:!1,type:{name:"((day: Date) => ReactNode)"}},disablePast:{defaultValue:null,description:"Запрещает выбор даты в прошлом.\nПрименяется, если не заданы `shouldDisableDate` и `disableFuture`.",name:"disablePast",required:!1,type:{name:"boolean"}},disableFuture:{defaultValue:null,description:"Запрещает выбор даты в будущем.\nПрименяется, если не задано `shouldDisableDate`.",name:"disableFuture",required:!1,type:{name:"boolean"}},shouldDisableDate:{defaultValue:null,description:"Функция для проверки запрета выбора даты.",name:"shouldDisableDate",required:!1,type:{name:"((value: Date) => boolean)"}},weekStartsOn:{defaultValue:null,description:"День недели, с которого начинается неделя.",name:"weekStartsOn",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"},{value:"2"},{value:"3"},{value:"4"},{value:"5"},{value:"6"}]}},disablePickers:{defaultValue:null,description:"Отключает селекторы выбора месяца/года.",name:"disablePickers",required:!1,type:{name:"boolean"}},changeDayLabel:{defaultValue:null,description:`\`aria-label\` для изменения дня.
@deprecated Since 7.4.0.

Будет удалeно в **VKUI v8**. Использовалось для задания aria-label для контейнера дней в календаре.
Теперь этот контейнер является таблицей (с помощью role="grid") и
в aria-label рендерится текущий открытый в календаре месяц и год.`,name:"changeDayLabel",required:!1,type:{name:"string"}},restoreFocus:{defaultValue:{value:"true"},description:"",name:"restoreFocus",required:!1,type:{name:"boolean | (() => boolean | HTMLElement)"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLDivElement>"}},status:{defaultValue:null,description:"Статус отображения поля в форме.",name:"status",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"valid"'}]}},after:{defaultValue:null,description:"Добавляет иконку справа.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагируюущая на нажатие.",name:"after",required:!1,type:{name:"ReactNode"}},before:{defaultValue:null,description:"Добавляет иконку слева.\n\nРекомендации:\n\n- Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n- Используйте [IconButton](https://vkui.io/components/icon-button), если вам нужна иконка, реагирующая на нажатие.",name:"before",required:!1,type:{name:"ReactNode"}},mode:{defaultValue:null,description:"Режим отображения.\n\n- `default` — показывает фон, обводку и, при наличии, текст-подсказку.\n- `plain` — показывает только текст-подсказку.",name:"mode",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"plain"'}]}},beforeAlign:{defaultValue:null,description:"Вертикальное выравнивание иконки слева.",name:"beforeAlign",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"center"'},{value:'"end"'}]}},afterAlign:{defaultValue:null,description:"Вертикальное выравнивание иконки справа.",name:"afterAlign",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"center"'},{value:'"end"'}]}},startDateTestsProps:{defaultValue:null,description:"Передает атрибуты `data-testid` для полей ввода начальной даты.",name:"startDateTestsProps",required:!1,type:{name:"DateTestsProps"}},endDateTestsProps:{defaultValue:null,description:"Передает атрибуты `data-testid` для полей ввода конечной даты.",name:"endDateTestsProps",required:!1,type:{name:"DateTestsProps"}},showCalendarButtonTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для кнопки показа календаря.",name:"showCalendarButtonTestId",required:!1,type:{name:"string"}},clearButtonTestId:{defaultValue:null,description:"Передает атрибут `data-testid` для кнопки очистки даты.",name:"clearButtonTestId",required:!1,type:{name:"string"}}}}}catch{}const D4=ou(),hu={title:"Dates/DateRangeInput",component:v,parameters:du("DateRangeInput",ru,lu),argTypes:{readOnly:{control:{type:"boolean"}},value:{description:"Используйте startDate и endDate для задания периода",control:!1},startDate:{description:"Дата начала периода",table:{type:{summary:"string"}},control:{type:"date"}},endDate:{description:"Дата окончания периода",table:{type:{summary:"string"}},control:{type:"date"}},before:D4,after:D4,renderDayContent:su()},tags:["Работа с датами"]},g={render:function({startDate:n,endDate:d,...o}){const[,R]=iu(),A=S=>{const[f,h]=S||[null,null];R({startDate:f?new Date(f):null,endDate:h?new Date(h):null})},V=n?new Date(n):null,x=d?new Date(d):null;return u.jsx(v,{...o,value:[V,x],onChange:A})}};g.parameters={...g.parameters,docs:{...g.parameters?.docs,source:{originalSource:`{
  render: function Render({
    startDate,
    endDate,
    ...args
  }) {
    const [, updateArgs] = useCustomArgs();
    const handleDateRangeUpdate: DateRangeInputProps['onChange'] = updatedValue => {
      const [changedStartDate, changedEndDate] = updatedValue || [null, null];
      updateArgs({
        startDate: changedStartDate ? new Date(changedStartDate) : null,
        endDate: changedEndDate ? new Date(changedEndDate) : null
      });
    };
    const parsedStartDate = startDate ? new Date(startDate) : null;
    const parsedEndDate = endDate ? new Date(endDate) : null;
    return <DateRangeInput {...args} value={[parsedStartDate, parsedEndDate]} onChange={handleDateRangeUpdate} />;
  }
}`,...g.parameters?.docs?.source}}};const bu=["Playground"],Nu=Object.freeze(Object.defineProperty({__proto__:null,Playground:g,__namedExportsOrder:bu,default:hu},Symbol.toStringTag,{value:"Module"}));export{v as D,g as P,Nu as a};
