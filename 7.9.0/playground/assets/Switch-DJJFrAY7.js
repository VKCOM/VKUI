import{v as d,c as S,k as T,r as p,j as t,R as B,h as m}from"./iframe-BdXaAE5r.js";import{u as E}from"./useConfigDirection-B4zlYhYT.js";import{u as w}from"./useFocusVisible-Dn_DPkBY.js";import{u as A}from"./useFocusVisibleClassName-CvWQ-Qtc.js";import{c as i}from"./callMultiple-ChqatQlo.js";import{V as W}from"./VisuallyHidden-DcQJc2es.js";const q="_host_1xee5_1",D="_rtl_1xee5_23",I="_disabled_1xee5_27",U="_sizeYCompact_1xee5_55",O="_sizeYNone_1xee5_69",G="_ios_1xee5_83",J="_inputFake_1xee5_137",K="_inputNative_1xee5_141",Q="_track_1xee5_160",X="_handle_1xee5_181",Z="_handleWithRipple_1xee5_208",e={host:q,rtl:D,disabled:I,default:"_default_1xee5_32",sizeYCompact:U,sizeYNone:O,ios:G,inputFake:J,inputNative:K,track:Q,handle:X,handleWithRipple:Z},$={none:e.sizeYNone,compact:e.sizeYCompact},_=({style:l,className:h,getRootRef:f,getRef:R,slotProps:c,...k})=>{const b=d({style:l,className:h,getRootRef:f},c?.root),{checked:a,onBlur:x,onFocus:C,onClick:N,...s}=d({getRootRef:R,...k},c?.input),g=E()==="rtl",r=S(),{sizeY:u="none"}=T(),{focusVisible:y,onBlur:F,onFocus:L}=w(),z=A({focusVisible:y,mode:"outside"}),H=i(F,x),Y=i(L,C),[V,M]=p.useState(!!s.defaultChecked),n=a!==void 0,P=p.useCallback(j=>{if(n)return;const v=j.target;M(v.checked)},[n]),o={Component:"input",type:"checkbox",role:"switch",onBlur:H,onFocus:Y,onClick:i(P,N),...s};return n?(o.checked=a,o["aria-checked"]=a?"true":"false"):o["aria-checked"]=V?"true":"false",t.jsxs(B,{Component:"label",baseClassName:m(e.host,u!=="regular"&&$[u],r==="ios"?e.ios:e.default,s.disabled&&e.disabled,g&&e.rtl,z),...b,children:[t.jsx(W,{baseClassName:e.inputNative,...o}),t.jsxs("span",{"aria-hidden":!0,className:e.inputFake,children:[t.jsx("span",{className:e.track}),t.jsx("span",{"aria-hidden":!0,className:m(e.handle,r!=="ios"&&!s.disabled&&e.handleWithRipple)})]})]})};try{_.displayName="Switch",_.__docgenInfo={description:"",displayName:"Switch",props:{slotProps:{defaultValue:null,description:"Свойства, которые можно прокинуть внутрь компонента:\n- `root`: свойства для прокидывания в корень компонента;\n- `input`: свойства для прокидывания в скрытый `input`.",name:"slotProps",required:!1,type:{name:'{ root?: (Omit<LabelHTMLAttributes<HTMLLabelElement>, "children"> & HasRootRef<HTMLLabelElement> & HasDataAttribute); input?: (InputHTMLAttributes<...> & ... 1 more ... & HasDataAttribute); } | undefined'}},getRef:{defaultValue:null,description:"@deprecated Since 7.9.0. Вместо этого используйте `slotProps={ input: { getRootRef: ... } }`.",name:"getRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},getRootRef:{defaultValue:null,description:"",name:"getRootRef",required:!1,type:{name:"Ref<HTMLLabelElement>"}}}}}catch{}export{_ as S};
