import{w as e,b as p,j as r}from"./iframe-BdXaAE5r.js";import{D as a,C as i}from"./constants-DdkjnEgz.js";import{g as s}from"./mock-CiudtyON.js";import{A as l}from"./Avatar-BDL6DiG7.js";import{G as n}from"./Group-D1elF4gT.js";import{a as c,C as u}from"./Cell-uDuhQw0X.js";import"./preload-helper-PPVm8Dsz.js";import"./ImageBase-B346ZL0P.js";import"./Clickable-0nFsuW3k.js";import"./useFocusVisible-Dn_DPkBY.js";import"./useFocusVisibleClassName-CvWQ-Qtc.js";import"./mergeCalls-Bc-HqyI0.js";import"./callMultiple-ChqatQlo.js";import"./type_checkers-CVMjkZjG.js";import"./ImageBaseBadge-DkEJCKUw.js";import"./useColorScheme-CR-44NGe.js";import"./InputUtils--HRLtXJo.js";import"./useFocusWithin-BFFjMCCU.js";import"./useIsClient-CdGSC0Is.js";import"./useConfigDirection-B4zlYhYT.js";import"./online_mobile_12-BX9R8xcr.js";import"./SvgIconRootV2-K3I65lI2.js";import"./_object_spread_props-DRD4qu7p.js";import"./helpers-QklJbEbU.js";import"./react_utils-CSZjvU4X.js";import"./Footnote-ByXPLsYQ.js";import"./Removable-CjePy1wL.js";import"./children-l5OU2f11.js";import"./IconButton-CXgqouLn.js";import"./Tappable-DfpzQKhB.js";import"./VisuallyHidden-DcQJc2es.js";import"./useGlobalEventListener-BXli_s0F.js";import"./useEventListener-C9KDACQG.js";import"./cancel_24-Cel532NE.js";import"./SimpleCell-D4GN_-pL.js";import"./Headline-DW4C0RJJ.js";import"./Subhead-CM9E3HB6.js";import"./chevron_compact_right_24-DXvgvWyE.js";import"./chevron_16-CxZx8l_q.js";import"./AdaptiveIconRenderer-xeHgus70.js";import"./reorder_ios_24-BEN6KGLx.js";import"./check_box_on_24-BX5u79Qr.js";import"./check_circle_on_24-B4zt7gl-.js";import"./constants-CtEIZ0Vq.js";const mr={title:"Buttons/Cell/Checkbox",component:c,parameters:{...i,...a},decorators:[e,p]},o={args:{defaultChecked:!0},decorators:[(t,m)=>r.jsx(n,{children:r.jsx(u,{Component:"label",before:r.jsx(l,{src:s("user_xyz")}),after:r.jsx(t,{...m.args}),children:"Игорь Федоров"})})]};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:`{
  args: {
    defaultChecked: true
  },
  decorators: [(Component, context) => <Group>
        <Cell Component="label" before={<Avatar src={getAvatarUrl('user_xyz')} />} after={<Component {...context.args} />}>
          Игорь Федоров
        </Cell>
      </Group>]
}`,...o.parameters?.docs?.source}}};const er=["Playground"];export{o as Playground,er as __namedExportsOrder,mr as default};
